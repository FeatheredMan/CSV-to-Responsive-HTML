time*suite*test_case*duration*speed*state*pass*fail*pending*context*code*err*isHook*skipped
2024-09-04T09:47:37.186Z*Verify Happy Scenario Registeration*VerifyHappyScenarioRegisterationTestAr*9665*medium*passed*true*0*0**registerPage_1.RegisterationPage.implemntNormalRegSteps("010" + auth_data_1.AuthData.authPhone);\nregisterPage_1.RegisterationPage.validateRegisteration("تم ارسال ايميل التاكيد", "برجاء مراجعة بريدك الالكترونى", auth_data_1.AuthData.authMail);*{}*false*false
2024-09-04T09:47:37.186Z*Verify Happy Scenario Registeration*VerifyHappyScenarioRegisterationTestEN*6299*medium*passed*true*0*0**registerPage_1.RegisterationPage.clickLangButton();\nregisterPage_1.RegisterationPage.implemntNormalRegSteps("011" + auth_data_1.AuthData.authPhone);\nregisterPage_1.RegisterationPage.validateRegisteration(/Verification Email Sent/i, /Check Your Email/i, auth_data_1.AuthData.authMail);*{}*false*false
2024-09-04T09:47:52.825Z*Verify that all the components exist on the Register page*En*6594*medium*passed*true*0*0**registerPage_1.RegisterationPage.clickLangButton();\nregisterPage_1.RegisterationPage.getPageHeader("Register");\nregisterPage_1.RegisterationPage.getPageHeaderPara("Sign Up A new Account for the first time");\nregisterPage_1.RegisterationPage.getPageSecHeader();\nregisterPage_1.RegisterationPage.checkFullNameLabel("Full Name");\nregisterPage_1.RegisterationPage.typeFullName(auth_data_1.AuthData.fullName);\nregisterPage_1.RegisterationPage.inputEmail();\nregisterPage_1.RegisterationPage.checkCountryLabel("Country");\nregisterPage_1.RegisterationPage.clickDropDownCountryList();\nregisterPage_1.RegisterationPage.inputCountry(auth_data_1.AuthData.country);\n// cy.checkImageVisibilityBySrc(AuthData.face_img);\n// cy.checkImageVisibilityBySrc(AuthData.mail_img);\n// cy.checkImageVisibilityBySrc(AuthData.google_img);\n// cy.checkImageVisibilityBySrc(AuthData.apple_img);\nregisterPage_1.RegisterationPage.checkPasswordLabel("Password");\nregisterPage_1.RegisterationPage.inputPassword(auth_data_1.AuthData.pass);\nregisterPage_1.RegisterationPage.checkConfirmPasswordLabel("Confirm Password");\nregisterPage_1.RegisterationPage.inputConfirmPassword(auth_data_1.AuthData.pass);\nregisterPage_1.RegisterationPage.checkPhoneLabel("Phone");\nregisterPage_1.RegisterationPage.inputPhoneNumber(auth_data_1.AuthData.authPhone);\nregisterPage_1.RegisterationPage.checkCountryCode(auth_data_1.AuthData.code);\nregisterPage_1.RegisterationPage.checkRegisterationButton("Register Now");\nregisterPage_1.RegisterationPage.checkAgreeStatementLabel("I agree the Terms and Conditions");\nregisterPage_1.RegisterationPage.checkHaveAnAccount("have an account?");\nregisterPage_1.RegisterationPage.checkSignInButton("Sign In");\nregisterPage_1.RegisterationPage.confirmCheckBox();\nregisterPage_1.RegisterationPage.checkRegisterationButton("Register Now");*{}*false*false
2024-09-04T09:47:52.825Z*Verify that all the components exist on the Register page*Ar*4475*fast*passed*true*0*0**registerPage_1.RegisterationPage.visit();\nregisterPage_1.RegisterationPage.getPageHeader("تسجيل مستخدم");\nregisterPage_1.RegisterationPage.getPageHeaderPara("قم بانشاء حساب جديد لاول مرة");\nregisterPage_1.RegisterationPage.getPageSecHeader();\nregisterPage_1.RegisterationPage.checkFullNameLabel("الاسم بالكامل");\nregisterPage_1.RegisterationPage.typeFullName(auth_data_1.AuthData.fullName);\nregisterPage_1.RegisterationPage.checkEmailLabel("البريد الالكترونى");\nregisterPage_1.RegisterationPage.inputEmail();\nregisterPage_1.RegisterationPage.checkCountryLabel("الدولة");\nregisterPage_1.RegisterationPage.clickDropDownCountryList();\nregisterPage_1.RegisterationPage.inputCountry(auth_data_1.AuthData.country);\n// cy.checkImageVisibilityBySrc(AuthData.face_img);\n// cy.checkImageVisibilityBySrc(AuthData.mail_img);\n// cy.checkImageVisibilityBySrc(AuthData.google_img);\n// cy.checkImageVisibilityBySrc(AuthData.apple_img);\nregisterPage_1.RegisterationPage.checkPasswordLabel("الرقم السرى");\nregisterPage_1.RegisterationPage.inputPassword(auth_data_1.AuthData.pass);\nregisterPage_1.RegisterationPage.checkConfirmPasswordLabel("اعادة كتابة الرقم السرى");\nregisterPage_1.RegisterationPage.inputConfirmPassword(auth_data_1.AuthData.pass);\nregisterPage_1.RegisterationPage.checkPhoneLabel("الهاتف");\nregisterPage_1.RegisterationPage.inputPhoneNumber(auth_data_1.AuthData.authPhone);\nregisterPage_1.RegisterationPage.checkCountryCode(auth_data_1.AuthData.code);\nregisterPage_1.RegisterationPage.checkSignInButton("تسجل دخول");\nregisterPage_1.RegisterationPage.checkAgreeStatementLabel("انا موافق على القواعد والشروط");\nregisterPage_1.RegisterationPage.checkHaveAnAccount("هل لديك حساب ؟");\nregisterPage_1.RegisterationPage.confirmCheckBox();\nregisterPage_1.RegisterationPage.checkRegisterationButton("سجل الان");*{}*false*false
2024-09-04T09:48:04.201Z*Verify Email component Status on the Registerion page*To Verify Email is Required Message*2595*fast*passed*true*0*0**// Arabic\n(0, is_required_message_1.checkISRequiredMsg)("#FullName", false);\n// English\nregisterPage_1.RegisterationPage.clickLangButton();\n(0, is_required_message_1.checkISRequiredMsg)("#FullName", true);*{}*false*false
2024-09-04T09:48:04.201Z*Verify Email component Status on the Registerion page*checkEmailRegExFormatEn*1831*fast*passed*true*0*0**registerPage_1.RegisterationPage.clickLangButton();\nregisterPage_1.RegisterationPage.checkEmailLabel("Email");\nregisterPage_1.RegisterationPage.inputEmail();*{}*false*false
2024-09-04T09:48:04.201Z*Verify Email component Status on the Registerion page*checkEmailRegExFormatAr*1525*fast*passed*true*0*0**registerPage_1.RegisterationPage.checkEmailLabel("البريد الالكترونى");\nregisterPage_1.RegisterationPage.inputEmail();*{}*false*false
2024-09-04T09:48:04.201Z*Verify Email component Status on the Registerion page*checkRegisterationWithUsedEmail*2117*fast*passed*true*0*0**registerPage_1.RegisterationPage.clickLangButton();\nregisterPage_1.RegisterationPage.checkEmailLabel("Email");\nregisterPage_1.RegisterationPage.inputEmail();*{}*false*false
2024-09-04T09:48:14.940Z*Verify Full Name component Status on the Registerion page*To Verify FullName is Required Message*2289*fast*passed*true*0*0**// Arabic\n(0, is_required_message_1.checkISRequiredMsg)("#FullName", false);\n// English\nregisterPage_1.RegisterationPage.clickLangButton();\n(0, is_required_message_1.checkISRequiredMsg)("#FullName", true);*{}*false*false
2024-09-04T09:48:14.940Z*Verify Full Name component Status on the Registerion page*En*2930*fast*passed*true*0*0**registerPage_1.RegisterationPage.clickLangButton();\nregisterPage_1.RegisterationPage.checkFullNameLabel("Full Name");\nregisterPage_1.RegisterationPage.typeFullName(auth_data_1.AuthData.fullNameLower);\nregisterPage_1.RegisterationPage.typeFullName(auth_data_1.AuthData.fullNameUpper);\nregisterPage_1.RegisterationPage.typeFullName(auth_data_1.AuthData.fullNameE100);*{}*false*false
2024-09-04T09:48:14.940Z*Verify Full Name component Status on the Registerion page*Ar*2406*fast*passed*true*0*0**registerPage_1.RegisterationPage.checkFullNameLabel("الاسم بالكامل");\nregisterPage_1.RegisterationPage.typeFullName(auth_data_1.AuthData.fullNameLower);\nregisterPage_1.RegisterationPage.typeFullName(auth_data_1.AuthData.fullNameUpper);\nregisterPage_1.RegisterationPage.typeFullName(auth_data_1.AuthData.fullNameE100);*{}*false*false
2024-09-04T09:48:28.347Z*Verify Password component Status on the Registerion page*CheckLabelsEn*1228*fast*passed*true*0*0**registerPage_1.RegisterationPage.clickLangButton();\nregisterPage_1.RegisterationPage.checkPasswordLabel("Password");\nregisterPage_1.RegisterationPage.checkConfirmPasswordLabel("Confirm Password");*{}*false*false
2024-09-04T09:48:28.347Z*Verify Password component Status on the Registerion page*CheckLabelsAr*462*fast*passed*true*0*0**registerPage_1.RegisterationPage.checkPasswordLabel("الرقم السرى");\nregisterPage_1.RegisterationPage.checkConfirmPasswordLabel("اعادة كتابة الرقم السرى");*{}*false*false
2024-09-04T09:48:28.347Z*Verify Password component Status on the Registerion page*Check Is Required Message is Successfully displayed*2149*fast*passed*true*0*0**// To Verify Password is Required Message  Arabic\n(0, is_required_message_1.checkISRequiredMsg)("#inputPassword", false);\n// To Verify Confirm Password is Required Message  Arabic\n(0, is_required_message_1.checkISRequiredMsg)("#inputConfirmPassword", false);\n// To Verify Password is Required Message English\nregisterPage_1.RegisterationPage.clickLangButton();\n(0, is_required_message_1.checkISRequiredMsg)("#inputPassword", true);\n// To Verify Confirm Password is Required Message English\n(0, is_required_message_1.checkISRequiredMsg)("#inputConfirmPassword", true);*{}*false*false
2024-09-04T09:48:28.347Z*Verify Password component Status on the Registerion page*should verify the presence of a lock icon in the text field*613*fast*passed*true*0*0**cy.checkImageVisibilityBySrc("/assets/img/login/iconly_light_lock.webp");*{}*false*false
2024-09-04T09:48:28.347Z*Verify Password component Status on the Registerion page*should verify password complexity requirements*2249*fast*passed*true*0*0**registerPage_1.RegisterationPage.verifyPasswordCompatibility();*{}*false*false
2024-09-04T09:48:28.347Z*Verify Password component Status on the Registerion page*should verify that password and confirm password fields match*1262*fast*passed*true*0*0**registerPage_1.RegisterationPage.inputPassword(auth_data_1.AuthData.pass);\nregisterPage_1.RegisterationPage.inputConfirmPassword(auth_data_1.AuthData.pass);\nregisterPage_1.RegisterationPage.verifyPasswordAndConfirmPasswordEquality();*{}*false*false
2024-09-04T09:48:28.347Z*Verify Password component Status on the Registerion page*should verify the appearance of a message if confirm password is different*1172*fast*passed*true*0*0**registerPage_1.RegisterationPage.inputPassword(auth_data_1.AuthData.pass);\nregisterPage_1.RegisterationPage.inputConfirmPassword(auth_data_1.AuthData.inCorrectPass5);\nregisterPage_1.RegisterationPage.validatePassordAndConfirmPasswordDifference();*{}*false*false
2024-09-04T09:48:28.347Z*Verify Password component Status on the Registerion page*should verify that the password is encrypted when entered*1137*fast*passed*true*0*0**registerPage_1.RegisterationPage.verifyEncryptedPassword("#inputPassword");\nregisterPage_1.RegisterationPage.verifyEncryptedPassword("#inputConfirmPassword");*{}*false*false
2024-09-04T09:48:35.480Z*Verify Phone component Status on the Registerion page*should verify the presence of the red star symbol next to the label title*663*fast*passed*true*0*0**cy.visibilityOfRequiredStar('label[for="mobileNumber"]');*{}*false*false
2024-09-04T09:48:35.480Z*Verify Phone component Status on the Registerion page*En*1150*fast*passed*true*0*0**registerPage_1.RegisterationPage.clickLangButton();\nregisterPage_1.RegisterationPage.checkPhoneLabel("Phone");\nregisterPage_1.RegisterationPage.inputPhoneNumber(auth_data_1.AuthData.authPhone);*{}*false*false
2024-09-04T09:48:35.480Z*Verify Phone component Status on the Registerion page*Ar*702*fast*passed*true*0*0**registerPage_1.RegisterationPage.checkPhoneLabel("الهاتف");\nregisterPage_1.RegisterationPage.inputPhoneNumber(auth_data_1.AuthData.authPhone);*{}*false*false
2024-09-04T09:48:35.480Z*Verify Phone component Status on the Registerion page*To Verify Confirm Password is Required Message *1574*fast*passed*true*0*0**// Arabic Language\n(0, is_required_message_1.checkISRequiredMsg)("#mobileNumber", false);\n// English Language\nregisterPage_1.RegisterationPage.clickLangButton();\n(0, is_required_message_1.checkISRequiredMsg)("#mobileNumber", true);*{}*false*false
2024-09-04T09:48:47.633Z*InvalidCredentials*EntersWrongPassword*6255*medium*passed*true*0*0**loginPage_1.LoginPage.inputEmail(auth_data_1.AuthData.loginMail);\n// Wrong Password\nloginPage_1.LoginPage.inputPassword(auth_data_1.AuthData.pass + "Wrong");\nloginPage_1.LoginPage.clickLoginButton();\ncy.get('div[data-valmsg-summary="true"]').should("be.visible");*{}*false*false
2024-09-04T09:48:47.633Z*InvalidCredentials*MissingPassword*1622*fast*passed*true*0*0**loginPage_1.LoginPage.inputEmail(auth_data_1.AuthData.loginMail);\nloginPage_1.LoginPage.clickLoginButton();\ncy.get('div[data-valmsg-summary="true"]').should("be.visible");\ncy.get("li").contains(/The Password Field Is Required./i);*{}*false*false
2024-09-04T09:48:47.633Z*InvalidCredentials*Enter Wrong Email*1573*fast*passed*true*0*0**loginPage_1.LoginPage.inputEmail("testtest@test.ccc");\nloginPage_1.LoginPage.inputPassword(auth_data_1.AuthData.pass);\nloginPage_1.LoginPage.clickLoginButton();\ncy.get('div[data-valmsg-summary="true"]').should("be.visible");*{}*false*false
2024-09-04T09:48:47.633Z*InvalidCredentials*MissingEmail*1449*fast*passed*true*0*0**loginPage_1.LoginPage.inputPassword(auth_data_1.AuthData.pass);\nloginPage_1.LoginPage.clickLoginButton();\ncy.get('div[data-valmsg-summary="true"]').should("be.visible");\ncy.get("li").contains(/The email Field Is Required./i);*{}*false*false
2024-09-04T09:48:56.710Z*Verify that all the components exist on the Login page*En*3596*fast*passed*true*0*0**loginPage_1.LoginPage.visit();\nloginPage_1.LoginPage.getPageHeader("Login");\n// LoginPage.getPageHeaderPara("Sign Up A new Account for the first time");\nloginPage_1.LoginPage.getPageSecHeader();\nloginPage_1.LoginPage.checkLogoImg(auth_data_1.AuthData.logoImg);\nloginPage_1.LoginPage.checkUserNameLabel("Email Or Phone\*");\nloginPage_1.LoginPage.inputEmail(auth_data_1.AuthData.loginMail);\nloginPage_1.LoginPage.checkPasswordLabel("Password");\nloginPage_1.LoginPage.inputPassword(auth_data_1.AuthData.pass);\nloginPage_1.LoginPage.checkUserForgetPasswordLink();\nloginPage_1.LoginPage.checkDoNotHaveAccountLink("Don't have an account?");\nloginPage_1.LoginPage.checkLangButton();\nloginPage_1.LoginPage.checkLoginButton("Login");*{}*false*false
2024-09-04T09:48:56.710Z*Verify that all the components exist on the Login page*Ar*4184*fast*passed*true*0*0**loginPage_1.LoginPage.visit();\nloginPage_1.LoginPage.clickLangButton();\n// cy.reload();\n// cy.clickContinueAs();\ncy.wait(1500);\nloginPage_1.LoginPage.getPageHeader("تسجيل الدخول");\n// LoginPage.getPageHeaderPara("قم بتسجيل حساب جديد لأول مرة");\nloginPage_1.LoginPage.getPageSecHeader();\nloginPage_1.LoginPage.checkLogoImg(auth_data_1.AuthData.logoImg);\nloginPage_1.LoginPage.checkUserNameLabel("البريد الالكتروني او رقم الهاتف\*");\nloginPage_1.LoginPage.inputEmail(auth_data_1.AuthData.loginMail);\nloginPage_1.LoginPage.checkPasswordLabel("كلمة المرور");\nloginPage_1.LoginPage.inputPassword(auth_data_1.AuthData.pass);\nloginPage_1.LoginPage.checkUserForgetPasswordLink();\nloginPage_1.LoginPage.checkDoNotHaveAccountLink("ليس لديك حساب؟");\nloginPage_1.LoginPage.checkLoginButton("تسجيل الدخول");*{}*false*false
2024-09-04T09:49:10.478Z*Verify The Happy Scenario on the Login page*LoginAndSaveAccessTokenEn*7042*medium*passed*true*0*0**loginPage_1.LoginPage.inputEmail(auth_data_1.AuthData.loginMail);\nloginPage_1.LoginPage.inputPassword(auth_data_1.AuthData.pass);\nloginPage_1.LoginPage.clickLoginButton();\ncy.wait(1000);\n(0, validateLogin_1.validateLogin)();*{}*false*false
2024-09-04T09:49:10.478Z*Verify The Happy Scenario on the Login page*LoginAndSaveAccessTokenAr*5471*medium*passed*true*0*0**loginPage_1.LoginPage.clickLangButton();\nloginPage_1.LoginPage.inputEmail(auth_data_1.AuthData.loginMail);\nloginPage_1.LoginPage.inputPassword(auth_data_1.AuthData.pass);\nloginPage_1.LoginPage.clickLoginButton();\ncy.wait(1000);\n(0, validateLogin_1.validateLogin)();*{}*false*false
2024-09-04T09:51:41.409Z*Add Domain Space*1.Verify Adding Subdomain*39769**failed*0*true*0**my_subscriptions_page_1.MySubscriptionsPage.clickAddDomainSpaceBtn();\n// implement Add SubDomain and Monthly\nadd_domain_space_1.AddDomainSpace.implementAddSubDomain(sub_domain_data_1.SubDomainData.count, sub_domain_data_1.SubDomainData.subDomainName);\nadd_domain_space_1.AddDomainSpace.clickAddToCartButton();\ncy.wait(17000);\n// Verify That The Saved Data is Stored and Displayed Successfully\nadd_domain_space_1.AddDomainSpace.validateNewCardIsAddedOnTheGrid(sub_domain_data_1.SubDomainData.subDomainName, sub_domain_data_1.SubDomainData.count, sub_domain_data_1.SubDomainData.isMonthly);*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find content: 'domainJTkjCx' within the element: <div.card_header> and with the selector: '.supdomain' but never did.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find content: 'domainJTkjCx' within the element: <div.card_header> and with the selector: '.supdomain' but never did.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/My-subscriptions/Add_domain_space/pages/add_domain_space.ts:130:0)","diff":null}*false*false
2024-09-04T09:51:41.409Z*Add Domain Space*2.Verify That The System Correctly Calculate The Price Monthly and Yearly*7884*medium*passed*true*0*0**cy.clickContinueAs();\nmy_subscriptions_page_1.MySubscriptionsPage.clickAddDomainSpaceBtn();\nadd_domain_space_1.AddDomainSpace.inputeCount(sub_domain_data_1.SubDomainData.count);\nadd_domain_space_1.AddDomainSpace.validateYearlyCount(sub_domain_data_1.SubDomainData.count);\nadd_domain_space_1.AddDomainSpace.clickMonthly();\nadd_domain_space_1.AddDomainSpace.validateMonthlyCount(sub_domain_data_1.SubDomainData.count);*{}*false*false
2024-09-04T09:51:41.409Z*Add Domain Space*3.Verify That The Count Can't be Greater Than 12 or Less Than 1*7986*medium*passed*true*0*0**var count = 13;\nmy_subscriptions_page_1.MySubscriptionsPage.clickAddDomainSpaceBtn();\nadd_domain_space_1.AddDomainSpace.clickMonthly();\nadd_domain_space_1.AddDomainSpace.inputeCount(count);\nadd_domain_space_1.AddDomainSpace.clickDialoge();\nadd_domain_space_1.AddDomainSpace.verifyValidSubDomainCount(count);\ncount = 0;\nadd_domain_space_1.AddDomainSpace.inputeCount(count);\nadd_domain_space_1.AddDomainSpace.clickDialoge();\nadd_domain_space_1.AddDomainSpace.verifyValidSubDomainCount(count);*{}*false*false
2024-09-04T09:51:41.409Z*Add Domain Space*4.Verify That The Count accepts Numbers*7198*medium*passed*true*0*0**my_subscriptions_page_1.MySubscriptionsPage.clickAddDomainSpaceBtn();\nvar count = "A";\nadd_domain_space_1.AddDomainSpace.validateStringCount(count);*{}*false*false
2024-09-04T09:51:41.409Z*Add Domain Space*5.Verify That The System Can't Accept The Existing Domain Space Name*7551*medium*passed*true*0*0**my_subscriptions_page_1.MySubscriptionsPage.clickAddDomainSpaceBtn();\nadd_domain_space_1.AddDomainSpace.inputeCount(3);\nadd_domain_space_1.AddDomainSpace.inputeYourDomainSpace(sub_domain_data_1.SubDomainData.subDomainName);\nadd_domain_space_1.AddDomainSpace.validateDublicatedDomainSpace();*{}*false*false
2024-09-04T09:51:41.409Z*Add Domain Space*6.Verify That form validate all the required components before submitting*8176*medium*passed*true*0*0**my_subscriptions_page_1.MySubscriptionsPage.clickAddDomainSpaceBtn();\nadd_domain_space_1.AddDomainSpace.clearCount();\nadd_domain_space_1.AddDomainSpace.inputeYourDomainSpace(sub_domain_data_1.SubDomainData.subDomainName);\nadd_domain_space_1.AddDomainSpace.validateRequiredComponents(1);\nadd_domain_space_1.AddDomainSpace.inputeCount(7);\nadd_domain_space_1.AddDomainSpace.inputeYourDomainSpace(sub_domain_data_1.SubDomainData.subDomainName);\nadd_domain_space_1.AddDomainSpace.validateRequiredComponentsMsgRemoval();*{}*false*false
2024-09-04T09:51:41.409Z*Add Domain Space*7.Verify Adding Subdomain has Special Characters, Prevent Submission*8766*medium*passed*true*0*0**const subDomainNameSpecial = "\*\*\*\*/\*\*\*lowerdomain" + sub_domain_data_1.SubDomainData.subDomainName;\nmy_subscriptions_page_1.MySubscriptionsPage.clickAddDomainSpaceBtn();\nadd_domain_space_1.AddDomainSpace.implementAddSubDomain(sub_domain_data_1.SubDomainData.count, subDomainNameSpecial);\nadd_domain_space_1.AddDomainSpace.clickAddToCartButton();\ncy.wait(300);\nadd_domain_space_1.AddDomainSpace.verifyDialogPresistance();\n// Verify That  Special Charachters Not Allowed Displayed Successfully\nadd_domain_space_1.AddDomainSpace.validationSpecialCharacters();*{}*false*false
2024-09-04T09:52:19.817Z*Add Company Dialoge*1) Verify Happy Scenario The User Add The Required Data and Save and Back to The Previous Page..*16542*slow*passed*true*0*0**cy.wait(1500);\ncy.navigateToTheLatestScreen();\ncy.wait(1000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount(company_data_1.CompanyData.cListGrid_selector, company_data_1.CompanyData.cCardItem_selector).then((initialCount) => {\n    cy.wrap(initialCount).as("initialCount");\n    cy.log("initialCount:::" + initialCount);\n});\nAddCompanyDialoge_1.AddCompanyDialog.clickAddCompanyButton();\nAddCompanyDialoge_1.AddCompanyDialog.inputCompanyName(company_data_1.CompanyData.companyName);\nAddCompanyDialoge_1.AddCompanyDialog.inputBranchName(company_data_1.CompanyData.branchName);\ncy.get("@initialCount").then((initialCount) => {\n    AddCompanyDialoge_1.AddCompanyDialog.selectCompanyType(initialCount);\n});\nAddCompanyDialoge_1.AddCompanyDialog.clickSaveButton();\nAddCompanyDialoge_1.AddCompanyDialog.dialogNotExist();\ncy.get("@initialCount").then((initialCount) => {\n    cy.navigateToTheLatestScreen();\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount(company_data_1.CompanyData.cListGrid_selector, company_data_1.CompanyData.cCardItem_selector).then((updatedCount) => {\n        cy.log("updatedCount:::" + updatedCount);\n        expect(updatedCount).to.equal((0, utils_1.getWrappedNumber)(initialCount) + 1);\n    });\n});*{}*false*false
2024-09-04T09:52:19.817Z*Add Company Dialoge*2.Verify That The Save and Edit button Save The Action and Navigates To The Edit Screen.*0**pending*0*0*true**cy.wait(1500);\ncy.navigateToTheLatestScreen();\ncy.wait(1000);\ncy.increaseScreenItemsMaxCount(100);\nAddCompanyDialoge_1.AddCompanyDialog.clickAddCompanyButton();\nAddCompanyDialoge_1.AddCompanyDialog.inputCompanyName(company_data_1.CompanyData.companyName);\nAddCompanyDialoge_1.AddCompanyDialog.inputBranchName(company_data_1.CompanyData.branchName);\nAddCompanyDialoge_1.AddCompanyDialog.clickSaveAndEditBtn();\nAddCompanyDialoge_1.AddCompanyDialog.dialogNotExist();\ncy.url().should("contains", "edit");*{}*false*false
2024-09-04T09:52:19.817Z*Add Company Dialoge*3.Verify That All Components are Blank When The Add New Company list is Open.*7200*medium*passed*true*0*0**AddCompanyDialoge_1.AddCompanyDialog.clickAddCompanyButton();\nAddCompanyDialoge_1.AddCompanyDialog.verifyElementsWithoutValues();*{}*false*false
2024-09-04T09:52:19.817Z*Add Company Dialoge*4.Verify That The Form can not Submit if any of the required fields is empty*13140*slow*passed*true*0*0**cy.wait(1500);\ncy.navigateToTheLatestScreen();\ncy.wait(1000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount(company_data_1.CompanyData.cListGrid_selector, company_data_1.CompanyData.cCardItem_selector).then((initialCount) => {\n    cy.wrap(initialCount).as("initialCount");\n    cy.log("initialCount:::" + initialCount);\n});\nAddCompanyDialoge_1.AddCompanyDialog.clickAddCompanyButton();\nAddCompanyDialoge_1.AddCompanyDialog.clickSaveButton();\ncy.get("@initialCount").then((initialCount) => {\n    if ((0, utils_1.getWrappedNumber)(initialCount) > 0) {\n        cy.validateRequiredComponents(3);\n    }\n    else {\n        cy.validateRequiredComponents(2);\n    }\n});\nAddCompanyDialoge_1.AddCompanyDialog.inputCompanyName(company_data_1.CompanyData.companyName);\ncy.get("@initialCount").then((initialCount) => {\n    if ((0, utils_1.getWrappedNumber)(initialCount) > 0) {\n        cy.validateRequiredComponents(2);\n    }\n    else {\n        cy.validateRequiredComponents(1);\n    }\n});\nAddCompanyDialoge_1.AddCompanyDialog.inputBranchName(company_data_1.CompanyData.BranchNameTh);\ncy.get("@initialCount").then((initialCount) => {\n    if ((0, utils_1.getWrappedNumber)(initialCount) > 0) {\n        cy.validateRequiredComponents(1);\n    }\n    else {\n        cy.get("span.errorMessage.ng-star-inserted").should("not.exist");\n    }\n});\ncy.get("@initialCount").then((initialCount) => {\n    AddCompanyDialoge_1.AddCompanyDialog.selectCompanyType(initialCount);\n    if ((0, utils_1.getWrappedNumber)(initialCount) > 0) {\n        cy.get("span.errorMessage.ng-star-inserted").should("not.exist");\n    }\n    else {\n        cy.get("span.errorMessage.ng-star-inserted").should("not.exist");\n    }\n});*{}*false*false
2024-09-04T09:54:40.333Z*Edit Company Screen*1. Verify That The User Can Navigate Between All Tabs*10278*slow*passed*true*0*0**cy.wait(1000);\neditCompanyScreenAct_1.EditCompanyScreen.clickFirstCompanyToEdit();\neditCompanyScreenAct_1.EditCompanyScreen.clickContactTab();\neditCompanyScreenAct_1.EditCompanyScreen.clickLegalTab();\neditCompanyScreenAct_1.EditCompanyScreen.clickHierarchyTab();\neditCompanyScreenAct_1.EditCompanyScreen.clickBranchesTab();\neditCompanyScreenAct_1.EditCompanyScreen.clickAddressTab();*{}*false*false
2024-09-04T09:54:40.333Z*Edit Company Screen*2. Verify  Editting Address Tab*12727*slow*passed*true*0*0**cy.wait(1000);\n// Click Edit Button\neditCompanyScreenAct_1.EditCompanyScreen.clickFirstCompanyToEdit();\ncy.wait(1000);\neditCompanyScreenAct_1.EditCompanyScreen.clickEditCompanyButton();\n// Choose Country\neditCompanyScreenAct_1.EditCompanyScreen.selectCountry();\n// Input Latitude\neditCompanyScreenAct_1.EditCompanyScreen.inputLatitude(company_data_1.CompanyData.cLatitude);\n// Input Langitude\neditCompanyScreenAct_1.EditCompanyScreen.inputLangitude(company_data_1.CompanyData.cLongitude);\n// Input City\neditCompanyScreenAct_1.EditCompanyScreen.inputCity(company_data_1.CompanyData.cCity);\n// Input Region\neditCompanyScreenAct_1.EditCompanyScreen.inputRegion(company_data_1.CompanyData.cRegion);\n// Input Address\neditCompanyScreenAct_1.EditCompanyScreen.inputAddress(company_data_1.CompanyData.address);\n// Add Currency\ncy.getLastItemInDropDownList("currencyId");\n// Submit\neditCompanyScreenAct_1.EditCompanyScreen.clickSaveEditCompanyButton();\n// Check and close the Success POp up\neditCompanyScreenAct_1.EditCompanyScreen.EdittingIsFinished();*{}*false*false
2024-09-04T09:54:40.333Z*Edit Company Screen*3. Verify Editting Adress Tab is Successfully Saved*20890**failed*0*true*0**editCompanyScreenAct_1.EditCompanyScreen.clickFirstCompanyToEdit();\ncy.wait(1500);\neditCompanyScreenAct_1.EditCompanyScreen.clickEditCompanyButton();\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyCity(company_data_1.CompanyData.cCity);\n// Input Region\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyRegion(company_data_1.CompanyData.cRegion);\n// Input Address\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyAddress(company_data_1.CompanyData.address);\n// Input Latitude\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyLatitude(company_data_1.CompanyData.cLatitude);\n// Input Langitude\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyLangitude(company_data_1.CompanyData.cLongitude);*{"message":"AssertionError: Timed out retrying after 12000ms: expected '<input.p-inputtext.p-component.p-element.ng-star-inserted>' to have value 'Berlin', but the value was ''","estack":"AssertionError: Timed out retrying after 12000ms: expected '<input.p-inputtext.p-component.p-element.ng-star-inserted>' to have value 'Berlin', but the value was ''\n    at EditCompanyScreenVerify.verifyCity (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/My-subscriptions/Manage_companies/pages/editCompanyScreenVerify.ts:13:0)\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/My-subscriptions/Manage_companies/tests/EditCompanyScreen.cy.ts:52:0)","diff":"+ 'Berlin'\n"}*false*false
2024-09-04T09:54:40.333Z*Edit Company Screen*4. Verify  Editting Contact Tab*17415*slow*passed*true*0*0**editCompanyScreenAct_1.EditCompanyScreen.clickFirstCompanyToEdit();\ncy.wait(1500);\neditCompanyScreenAct_1.EditCompanyScreen.clickContactTab();\neditCompanyScreenAct_1.EditCompanyScreen.clickEditCompanyButton();\neditCompanyScreenAct_1.EditCompanyScreen.inputTelephon(company_data_1.CompanyData.cTelephone);\neditCompanyScreenAct_1.EditCompanyScreen.inputCompnayName(company_data_1.CompanyData.companyName);\neditCompanyScreenAct_1.EditCompanyScreen.inputCompnayEmail(company_data_1.CompanyData.cMail);\neditCompanyScreenAct_1.EditCompanyScreen.inputCompanyAddress(company_data_1.CompanyData.cAddress);\neditCompanyScreenAct_1.EditCompanyScreen.inputContactPersonal(company_data_1.CompanyData.cPerson);\neditCompanyScreenAct_1.EditCompanyScreen.inputContactPersonalEmail(company_data_1.CompanyData.cPersonMail);\neditCompanyScreenAct_1.EditCompanyScreen.selectCompanyPhoneNumberCode();\neditCompanyScreenAct_1.EditCompanyScreen.selectContactNumberCode();\neditCompanyScreenAct_1.EditCompanyScreen.inputTelephon(company_data_1.CompanyData.cTelephone);\neditCompanyScreenAct_1.EditCompanyScreen.inputContactPersonalPosition(company_data_1.CompanyData.cContactPersonPosition);\neditCompanyScreenAct_1.EditCompanyScreen.clickSaveEditCompanyButton();\ncy.wait(1000);\neditCompanyScreenAct_1.EditCompanyScreen.EdittingIsFinished();*{}*false*false
2024-09-04T09:54:40.333Z*Edit Company Screen*5. Verify Editting Contact Tab is Successfully Saved*11953*slow*passed*true*0*0**cy.wait(1500);\neditCompanyScreenAct_1.EditCompanyScreen.clickFirstCompanyToEdit();\ncy.wait(1500);\neditCompanyScreenAct_1.EditCompanyScreen.clickContactTab();\neditCompanyScreenAct_1.EditCompanyScreen.clickEditCompanyButton();\ncy.wait(1500);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyTelephon(company_data_1.CompanyData.cTelephone);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyTelephon(company_data_1.CompanyData.cTelephone);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyCompnayEmail(company_data_1.CompanyData.cMail);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyCompanyAddress(company_data_1.CompanyData.cAddress);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyContactPersonal(company_data_1.CompanyData.cPerson);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyContactPersonalEmail(company_data_1.CompanyData.cPersonMail);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyCountryNumberCode();\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyContactPersonalPosition(company_data_1.CompanyData.cContactPersonPosition);*{}*false*false
2024-09-04T09:54:40.333Z*Edit Company Screen*6. Verify  Editting Legal Tab*19524*slow*passed*true*0*0**editCompanyScreenAct_1.EditCompanyScreen.clickFirstCompanyToEdit();\ncy.wait(1500);\neditCompanyScreenAct_1.EditCompanyScreen.clickLegalTab();\neditCompanyScreenAct_1.EditCompanyScreen.clickEditCompanyButton();\neditCompanyScreenAct_1.EditCompanyScreen.inputCompanyNameE(company_data_1.CompanyData.companyName);\neditCompanyScreenAct_1.EditCompanyScreen.inputCompanyEmail(company_data_1.CompanyData.cMail);\neditCompanyScreenAct_1.EditCompanyScreen.inputOrganizationUnit(company_data_1.CompanyData.OrganizationUnit);\neditCompanyScreenAct_1.EditCompanyScreen.inputOrganization(company_data_1.CompanyData.Organization);\neditCompanyScreenAct_1.EditCompanyScreen.inputTaxID(company_data_1.CompanyData.TaxID);\neditCompanyScreenAct_1.EditCompanyScreen.inputCommercialID(company_data_1.CompanyData.CommercialID);\neditCompanyScreenAct_1.EditCompanyScreen.inputRegisteredAddress(company_data_1.CompanyData.RegisteredAddress);\neditCompanyScreenAct_1.EditCompanyScreen.inputBusinessCategory(company_data_1.CompanyData.BusinessCategory);\neditCompanyScreenAct_1.EditCompanyScreen.inputStreetName(company_data_1.CompanyData.StreetName);\neditCompanyScreenAct_1.EditCompanyScreen.inputCitySubdivisionName(company_data_1.CompanyData.CitySubdivisionName);\neditCompanyScreenAct_1.EditCompanyScreen.inputCompanyAddCityName(company_data_1.CompanyData.CompanyAddCityName);\neditCompanyScreenAct_1.EditCompanyScreen.inputPostalZone(company_data_1.CompanyData.PostalZone);\neditCompanyScreenAct_1.EditCompanyScreen.inputCountrySubentity(company_data_1.CompanyData.CountrySubentity);\neditCompanyScreenAct_1.EditCompanyScreen.inputBuildingNumber(company_data_1.CompanyData.BuildingNumber);\neditCompanyScreenAct_1.EditCompanyScreen.inputAdditionalStreetName(company_data_1.CompanyData.AdditionalStreetName);\neditCompanyScreenAct_1.EditCompanyScreen.inputRegistrationName(company_data_1.CompanyData.RegistrationName);\neditCompanyScreenAct_1.EditCompanyScreen.clickSaveEditCompanyButton();\neditCompanyScreenAct_1.EditCompanyScreen.EdittingIsFinished();*{}*false*false
2024-09-04T09:54:40.333Z*Edit Company Screen*7. Verify Editting Legal Tab is Successfully Saved*9789*medium*passed*true*0*0**editCompanyScreenAct_1.EditCompanyScreen.clickFirstCompanyToEdit();\ncy.wait(1500);\neditCompanyScreenAct_1.EditCompanyScreen.clickLegalTab();\neditCompanyScreenAct_1.EditCompanyScreen.clickEditCompanyButton();\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyCompanyNameE(company_data_1.CompanyData.companyName);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyCompanyEmail(company_data_1.CompanyData.cMail);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyOrganizationUnit(company_data_1.CompanyData.OrganizationUnit);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyOrganization(company_data_1.CompanyData.Organization);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyTaxID(company_data_1.CompanyData.TaxID);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyCommercialID(company_data_1.CompanyData.CommercialID);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyRegisteredAddress(company_data_1.CompanyData.RegisteredAddress);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyBusinessCategory(company_data_1.CompanyData.BusinessCategory);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyStreetName(company_data_1.CompanyData.StreetName);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyCitySubdivisionName(company_data_1.CompanyData.CitySubdivisionName);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyCompanyAddCityName(company_data_1.CompanyData.CompanyAddCityName);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyPostalZone(company_data_1.CompanyData.PostalZone);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyCountrySubentity(company_data_1.CompanyData.CountrySubentity);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyBuildingNumber(company_data_1.CompanyData.BuildingNumber);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyAdditionalStreetName(company_data_1.CompanyData.AdditionalStreetName);\neditCompanyScreenVerify_1.EditCompanyScreenVerify.verifyRegistrationName(company_data_1.CompanyData.RegistrationName);*{}*false*false
2024-09-04T09:54:40.333Z*Edit Company Screen*8. Verify  Editting Hierarchy Tab*7081*medium*passed*true*0*0**editCompanyScreenAct_1.EditCompanyScreen.clickFirstCompanyToEdit();\neditCompanyScreenAct_1.EditCompanyScreen.clickHierarchyTab();\neditCompanyScreenAct_1.EditCompanyScreen.validateCompanyType("Holding");*{}*false*false
2024-09-04T09:54:40.333Z*Edit Company Screen*9. Verify  Editting Branches Tab*7287*medium*passed*true*0*0**editCompanyScreenAct_1.EditCompanyScreen.clickFirstCompanyToEdit();\neditCompanyScreenAct_1.EditCompanyScreen.clickBranchesTab();\neditCompanyScreenAct_1.EditCompanyScreen.validateBranchesTab();*{}*false*false
2024-09-04T09:55:04.812Z*Company List*1.Verify That All The Component of The Grid are Displayed (Rows and Columns)*9163*medium*passed*true*0*0**// Verify Column Headers\ncy.get("table thead tr th").eq(0).should("include", /Code/i);\ncy.get("table thead tr th")\n    .eq(1)\n    .should("include", /Companies Name/i);\ncy.get("table thead tr th")\n    .eq(2)\n    .should("include", /Companies Type/i);\ncy.get("table thead tr th")\n    .eq(3)\n    .should("include", /Tax ID/i);\ncy.get("table thead tr th")\n    .eq(4)\n    .should("include", /Commercial ID/i);\ncy.get("table thead tr th").eq(5).should("include", /Phone/i);\ncy.get("table thead tr th")\n    .eq(6)\n    .should("include", /Status/i);\ncy.get("table thead tr th")\n    .eq(7)\n    .should("include", /Actions/i);*{}*false*false
2024-09-04T09:55:04.812Z*Company List*2.Verify That The Cells Under Status Column is Actionable (Radio Button)*0**pending*0*0*true**cy.wait(2000);\ncy.get("table").then(($table) => {\n    if ($table.find("tbody tr").is(":visible")) {\n        cy.wrap($table)\n            .find("tbody tr")\n            .last()\n            .find("td")\n            .eq(6)\n            .scrollIntoView()\n            .then(($lastActions) => {\n            if ($lastActions\n                .find('p[class="inactive body_b16 ng-star-inserted"]')\n                .is(":visible")) {\n                cy.wrap("inactive").as("initStatus");\n            }\n            else if ($lastActions\n                .find('p[class="active body_b16 ng-star-inserted"]')\n                .is(":visible")) {\n                cy.wrap("active").as("initStatus");\n            }\n            else {\n                cy.log("No Actions are Visible");\n            }\n        });\n        /////////////////////////////\n        company_list_1.CompanyList.clickLastActivationSliderListView();\n        company_list_1.CompanyList.confirmChangeStatusPopUp();\n        editCompanyScreenAct_1.EditCompanyScreen.clickFirstCompanyToEdit();\n        cy.get('div[class="edit_company_page"]').then(($EditScreen) => {\n            if ($EditScreen\n                .find('p[class="inactive body_b16 ng-star-inserted"]')\n                .is(":visible")) {\n                cy.wrap("inactive").as("finalStatus");\n            }\n            else if ($EditScreen\n                .find('p[class="active body_b16 ng-star-inserted"]')\n                .is(":visible")) {\n                cy.wrap("active").as("finalStatus");\n            }\n            else {\n                cy.log("No Activation is Visible in Edit Screen");\n            }\n        });\n        cy.get("@initStatus").then((initStatus) => {\n            cy.get("@finalStatus").then((finalStatus) => {\n                expect((0, utils_1.getWrappedString)(initStatus)).not.to.equal((0, utils_1.getWrappedString)(finalStatus));\n            });\n        });\n        /////////////////////////////////////////////////\n    }\n    else {\n        cy.log("The table body is Invisible");\n    }\n});*{}*false*false
2024-09-04T09:55:04.812Z*Company List*3.Verify That The Edit is navigate To The Edit Company of The Company Represent on This Row.*7349*medium*passed*true*0*0**company_list_1.CompanyList.clickToNavigateCompanyEdit();*{}*false*false
2024-09-04T09:55:04.812Z*Company List*4.Verify That The Paginator is Successfully Displayed.*6517*medium*passed*true*0*0**company_list_1.CompanyList.CheckPaginator();*{}*false*false
2024-09-04T09:55:41.370Z*Add Branch Dialoge*1. Check The Labels*10029*slow*passed*true*0*0**cy.wait(1000);\nbranches_management_1.BranchesManagment.clickAddNewButton();\nbranches_management_1.BranchesManagment.checkLabels();*{}*false*false
2024-09-04T09:55:41.370Z*Add Branch Dialoge*2. Verify That The User Can't Delete The Branch If The Count of Branches is (1).*8290*medium*passed*true*0*0**cy.wait(1000);\nbranches_management_1.BranchesManagment.clickAddNewButton();\nbranches_management_1.BranchesManagment.clickCancelIcon();\ncy.get("body").then(($body) => {\n    if ($body.find(branches_managment__data_1.BranchesManagmentData.deleteActionButton).length < 2) {\n        cy.wrap($body).find(branches_managment__data_1.BranchesManagmentData.deleteActionButton).click();\n        branches_management_1.BranchesManagment.ConfirmDeleteBranchDialog();\n    }\n    else {\n        cy.log("There Are many Branches ");\n    }\n});*{}*false*false
2024-09-04T09:55:41.370Z*Add Branch Dialoge*3. Verify That The User Can Add Branch by clicking on the Add button on the branch card.*16675*slow*passed*true*0*0**cy.wait(1000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\nbranches_management_1.BranchesManagment.clickAddNewButton();\nbranches_management_1.BranchesManagment.inputBranchName(branchName);\nbranches_management_1.BranchesManagment.selectCountry();\nbranches_management_1.BranchesManagment.inputBranchRegion("region" + (0, utils_1.getRandomNumber)(1, 1000));\nbranches_management_1.BranchesManagment.inputBranchCity("city" + (0, utils_1.getRandomNumber)(1, 1000));\nbranches_management_1.BranchesManagment.inputBranchEmail((0, utils_1.generateRandomEmail)());\nbranches_management_1.BranchesManagment.inputBranchAddress("address" + (0, utils_1.getRandomNumber)(1, 1000));\ncy.hideDialogFooter();\nbranches_management_1.BranchesManagment.selectMobileCode();\nbranches_management_1.BranchesManagment.inputMobileNumber();\ncy.displayDialogFooter();\nbranches_management_1.BranchesManagment.clickSaveButton();\nbranches_management_1.BranchesManagment.verifySuccessAlertVisibility();\ncy.increaseScreenItemsMaxCount(100);\ncy.get("@initCount").then((initCount) => {\n    cy.getAllItemsCount("table", "tbody tr").then((lastCount) => {\n        expect(parseInt(lastCount.toString())).to.equal(parseInt(initCount.toString()) + 1);\n    });\n});\nit("4. Verify Displaying THe Validation messages", () => {\n    cy.wait(1000);\n    branches_management_1.BranchesManagment.clickAddNewButton();\n    branches_management_1.BranchesManagment.inputBranchName("{enter}");\n    branches_management_1.BranchesManagment.checKVisibilityOfRequiredMessage(1);\n    // Type In Region Text field without Selecting Country\n    branches_management_1.BranchesManagment.inputBranchRegion("{enter}");\n    branches_management_1.BranchesManagment.checKVisibilityOfRequiredMessage(1);\n    branches_management_1.BranchesManagment.clickSaveButton();\n    branches_management_1.BranchesManagment.checKVisibilityOfRequiredMessage(2);\n    branches_management_1.BranchesManagment.inputBranchName("branch" + (0, utils_1.getRandomNumber)(1, 1000) + "{enter}");\n    branches_management_1.BranchesManagment.checKVisibilityOfRequiredMessage(1);\n    branches_management_1.BranchesManagment.selectCountry();\n    branches_management_1.BranchesManagment.verifyRemovingRequiredMessage();\n    branches_management_1.BranchesManagment.inputBranchEmail("@test.com");\n    branches_management_1.BranchesManagment.inputBranchRegion("{enter}");\n    branches_management_1.BranchesManagment.checKVisibilityOfInvalidEmailMessage();\n    branches_management_1.BranchesManagment.inputBranchEmail("email");\n    branches_management_1.BranchesManagment.inputBranchCity("{enter}");\n    branches_management_1.BranchesManagment.checKVisibilityOfInvalidEmailMessage();\n    branches_management_1.BranchesManagment.inputBranchEmail("email@test");\n    branches_management_1.BranchesManagment.inputBranchAddress("{enter}");\n    branches_management_1.BranchesManagment.checKVisibilityOfInvalidEmailMessage();\n    branches_management_1.BranchesManagment.inputBranchEmail("email.com");\n    branches_management_1.BranchesManagment.inputBranchCity("{enter}");\n    branches_management_1.BranchesManagment.checKVisibilityOfInvalidEmailMessage();\n    branches_management_1.BranchesManagment.inputBranchEmail("email@test.co");\n    branches_management_1.BranchesManagment.checKLackingOfInvalidEmailMessage();\n    branches_management_1.BranchesManagment.inputBranchEmail("email@test.com");\n    branches_management_1.BranchesManagment.checKLackingOfInvalidEmailMessage();\n});\nit("5. Verify That The User Can Canel The Added Branch By Cancel Button or (X) Button.", () => {\n    cy.wait(1000);\n    branches_management_1.BranchesManagment.clickAddNewButton();\n    branches_management_1.BranchesManagment.clickCancelIcon();\n    branches_management_1.BranchesManagment.verifyDialogeRemoval();\n    branches_management_1.BranchesManagment.clickAddNewButton();\n    branches_management_1.BranchesManagment.clickCancelButton();\n    branches_management_1.BranchesManagment.verifyDialogeRemoval();\n});\nit.skip("6. Verify That The User Can't Add Branch Name To An Existing Branch Name.", () => {\n    cy.wait(1000);\n    branches_management_1.BranchesManagment.clickAddNewButton();\n    branches_management_1.BranchesManagment.clickCancelIcon();\n    branches_management_1.BranchesManagment.verifyDialogeRemoval();\n    cy.getLastCellInTableValue(1).as("name");\n    branches_management_1.BranchesManagment.clickAddNewButton();\n    cy.get(".p-inputtext").eq(0).should("be.visible");\n    cy.get("@name").then((brName) => {\n        cy.log("brName var : " + brName);\n        cy.log("branchName var : " + branchName);\n        expect((0, utils_1.trimText)(brName.toString().trim())).to.equal((0, utils_1.trimText)(branchName.toString().trim()));\n        branches_management_1.BranchesManagment.inputBranchName(branchName);\n    });\n    branches_management_1.BranchesManagment.selectCountry();\n    branches_management_1.BranchesManagment.inputBranchRegion("region" + (0, utils_1.getRandomNumber)(1, 1000));\n    branches_management_1.BranchesManagment.inputBranchCity("city" + (0, utils_1.getRandomNumber)(1, 1000));\n    branches_management_1.BranchesManagment.inputBranchEmail((0, utils_1.generateRandomEmail)());\n    branches_management_1.BranchesManagment.inputBranchAddress("address" + (0, utils_1.getRandomNumber)(1, 1000));\n    branches_management_1.BranchesManagment.selectMobileCode();\n    branches_management_1.BranchesManagment.inputMobileNumber();\n    branches_management_1.BranchesManagment.clickSaveButton();\n    branches_management_1.BranchesManagment.verifySuccessAlertInVisibility();\n});*{}*false*false
2024-09-04T09:56:35.527Z*Edit Branch Dialoge*1. Verify That The Edit Branch Dialoge Has All Labels.*9903*medium*passed*true*0*0**branches_management_1.BranchesManagment.clickEditBranch();\nbranches_management_1.BranchesManagment.checkLabels();*{}*false*false
2024-09-04T09:56:35.527Z*Edit Branch Dialoge*2.Verify That The User Can Canel The Edited Branch By Cancel Button or (X) Button.*12904*slow*passed*true*0*0**branches_management_1.BranchesManagment.clickEditBranch();\nbranches_management_1.BranchesManagment.inputBranchName("Edited_" + branches_managment__data_1.BranchesManagmentData.branchName);\nbranches_management_1.BranchesManagment.selectCountry();\nbranches_management_1.BranchesManagment.inputBranchRegion("Edited_" + branches_managment__data_1.BranchesManagmentData.branchRegion);\nbranches_management_1.BranchesManagment.inputBranchCity("Edited_" + branches_managment__data_1.BranchesManagmentData.branchCity);\nbranches_management_1.BranchesManagment.inputBranchEmail("Edited_" + branches_managment__data_1.BranchesManagmentData.branchMail);\nbranches_management_1.BranchesManagment.inputBranchAddress("Edited_" + branches_managment__data_1.BranchesManagmentData.branchAddress);\nbranches_management_1.BranchesManagment.selectMobileCode();\nbranches_management_1.BranchesManagment.inputMobileNumber();\nbranches_management_1.BranchesManagment.cancelEditBranchDialog();\nbranches_management_1.BranchesManagment.verifyDialogeRemoval();*{}*false*false
2024-09-04T09:56:35.527Z*Edit Branch Dialoge*3. Verify That The User Can Edit Branch by clicking on the edit button on the branch card.*16624*slow*passed*true*0*0**branches_management_1.BranchesManagment.clickEditBranch();\nbranches_management_1.BranchesManagment.inputBranchName("Edited_" + branches_managment__data_1.BranchesManagmentData.branchName);\nbranches_management_1.BranchesManagment.selectCountry();\nbranches_management_1.BranchesManagment.inputBranchRegion("Edited_" + branches_managment__data_1.BranchesManagmentData.branchRegion);\nbranches_management_1.BranchesManagment.inputBranchCity("Edited_" + branches_managment__data_1.BranchesManagmentData.branchCity);\nbranches_management_1.BranchesManagment.inputBranchEmail("Edited_" + branches_managment__data_1.BranchesManagmentData.branchMail);\nbranches_management_1.BranchesManagment.inputBranchAddress("Edited_" + branches_managment__data_1.BranchesManagmentData.branchAddress);\nbranches_management_1.BranchesManagment.selectMobileCode();\nbranches_management_1.BranchesManagment.inputMobileNumber();\nbranches_management_1.BranchesManagment.submitEditBranchDialog();\nbranches_management_1.BranchesManagment.verifyDialogeRemoval();\ncy.wait(1000);\n// Verify Data is Displaying in the Table\ncy.verifyFirstCellInTable(1, "Edited_" + branches_managment__data_1.BranchesManagmentData.branchName);\ncy.verifyFirstCellInTable(2, "Edited_" + branches_managment__data_1.BranchesManagmentData.branchRegion);\ncy.verifyFirstCellInTable(3, "Edited_" + branches_managment__data_1.BranchesManagmentData.branchCity);\ncy.verifyFirstCellInTable(4, "Edited_" + branches_managment__data_1.BranchesManagmentData.branchAddress);\ncy.verifyFirstCellInTable(5, company_data_1.CompanyData.branchMobileNumber);\ncy.verifyFirstCellInTable(6, "Edited_" + branches_managment__data_1.BranchesManagmentData.branchMail);\nbranches_management_1.BranchesManagment.clickEditBranch();\n// Verify Data is Displaying in the Editting Dialog\nbranches_management_1.BranchesManagment.verifyBranchRegion("Edited_" + branches_managment__data_1.BranchesManagmentData.branchRegion);\nbranches_management_1.BranchesManagment.verifyBranchCity("Edited_" + branches_managment__data_1.BranchesManagmentData.branchCity);\nbranches_management_1.BranchesManagment.verifyBranchEmail("Edited_" + branches_managment__data_1.BranchesManagmentData.branchMail);\nbranches_management_1.BranchesManagment.verifyBranchAddress("Edited_" + branches_managment__data_1.BranchesManagmentData.branchAddress);*{}*false*false
2024-09-04T09:56:35.527Z*Edit Branch Dialoge*4. Verify that the Edit Branch Dialoge has the Correct data values as they displayed in the Grid*13084*slow*passed*true*0*0**cy.wait(2000);\ncy.getFirstCellInTableValue(1).then((nameT) => {\n    cy.wrap(nameT).as("nameT");\n});\ncy.getFirstCellInTableValue(2).then((regionT) => {\n    cy.wrap(regionT).as("regionT");\n});\ncy.getFirstCellInTableValue(3).then((cityT) => {\n    cy.wrap(cityT).as("cityT");\n});\ncy.getFirstCellInTableValue(4).then((addressT) => {\n    cy.wrap(addressT).as("addressT");\n});\ncy.getFirstCellInTableValue(5).then((phoneT) => {\n    cy.wrap(phoneT).as("phoneT");\n});\ncy.getFirstCellInTableValue(6).then((emailT) => {\n    cy.wrap(emailT).as("emailT");\n});\nbranches_management_1.BranchesManagment.clickEditBranch();\ncy.wait(2000);\ncy.get("@nameT").then((nameT) => {\n    branches_management_1.BranchesManagment.verifyBranchName((0, utils_1.getWrappedString)(nameT));\n});\ncy.get("@regionT").then((regionT) => {\n    branches_management_1.BranchesManagment.verifyBranchRegion((0, utils_1.getWrappedString)(regionT));\n});\ncy.get("@cityT").then((cityT) => {\n    branches_management_1.BranchesManagment.verifyBranchCity((0, utils_1.getWrappedString)(cityT));\n});\ncy.get("@addressT").then((addressT) => {\n    branches_management_1.BranchesManagment.verifyBranchAddress((0, utils_1.getWrappedString)(addressT));\n});\ncy.get("@phoneT").then(() => {\n    branches_management_1.BranchesManagment.verifyMobileNumber();\n});\ncy.get("@emailT").then((emailT) => {\n    branches_management_1.BranchesManagment.verifyBranchEmail((0, utils_1.getWrappedString)(emailT));\n});*{}*false*false
2024-09-04T09:57:20.317Z*Display All Branches*1. Verift that all the table COLUMNS Headers ARE Successfully displayed*9136*medium*passed*true*0*0**cy.verifyCorrectColumnsHeaders(branches_managment__data_1.BranchesManagmentData.tableHeaders);*{}*false*false
2024-09-04T09:57:20.317Z*Display All Branches*2. Verify That All Branches are Displayed Under Branches Tab.*7244*medium*passed*true*0*0**cy.get("table").then((table) => {\n    // Verify Table Column Headers\n    if (table.find("th").first().is(":visible")) {\n        cy.wrap(table).find("th").eq(0).contains(/code/i).should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(1)\n            .contains(/branch name/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(2)\n            .contains(/branch region/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(3)\n            .contains(/branch city/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(4)\n            .contains(/branch address/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(5)\n            .scrollIntoView()\n            .contains(/phone/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(6)\n            .scrollIntoView()\n            .contains(/branch email/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(7)\n            .scrollIntoView()\n            .contains(/status/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(8)\n            .scrollIntoView()\n            .contains(/actions/i)\n            .should("be.visible");\n    }\n    else {\n        cy.log("Table Header is not Visible");\n    }\n});*{}*false*false
2024-09-04T09:57:20.317Z*Display All Branches*3. Checks if a row row has right data is inserted and the table  increases by one after submitting new data*0**pending*0*0*true**//  Before Submission\ncy.scrollToLastElement();\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.get("table tbody tr")\n    .last()\n    .find("td")\n    .eq(1)\n    .invoke("text")\n    .then((tName1) => {\n    cy.wrap(tName1.trim()).as("tName1");\n});\ncy.get("table tbody tr")\n    .last()\n    .find("td")\n    .eq(2)\n    .invoke("text")\n    .then((tRegion1) => {\n    cy.wrap(tRegion1.trim()).as("tRegion1");\n});\ncy.get("table tbody tr")\n    .last()\n    .find("td")\n    .eq(3)\n    .invoke("text")\n    .then((tCity1) => {\n    cy.wrap(tCity1.trim()).as("tCity1");\n});\ncy.get("table tbody tr")\n    .last()\n    .find("td")\n    .eq(4)\n    .invoke("text")\n    .then((tAddress1) => {\n    cy.wrap(tAddress1.trim()).as("tAddress1");\n});\ncy.get("table tbody tr")\n    .last()\n    .find("td")\n    .eq(5)\n    .invoke("text")\n    .then((tPhone1) => {\n    cy.wrap(tPhone1.trim()).as("tPhone1");\n});\ncy.get("table tbody tr")\n    .last()\n    .find("td")\n    .eq(6)\n    .invoke("text")\n    .then((tMail1) => {\n    cy.wrap(tMail1.trim()).as("tMail1");\n});\n//  Submit A new Branch\nbranches_management_1.BranchesManagment.implementAddNewBranch();\nbranches_management_1.BranchesManagment.clickSaveButton();\n//  After Submission\ncy.wait(500);\ncy.reload();\ncy.wait(500);\ncy.scrollToLastElement();\ncy.get("@tName1").then((tName1) => {\n    cy.get("table tbody tr")\n        .last()\n        .find("td")\n        .eq(1)\n        .scrollIntoView()\n        .invoke("text")\n        .then((tName2) => {\n        expect((0, utils_1.trimText)(tName1.toString().trim())).not.to.equal((0, utils_1.trimText)(tName2));\n    });\n});\ncy.get("@tRegion1").then((tRegion1) => {\n    cy.get("table tbody tr")\n        .last()\n        .find("td")\n        .eq(2)\n        .scrollIntoView()\n        .invoke("text")\n        .then((tRegion2) => {\n        expect((0, utils_1.trimText)(tRegion1.toString().trim())).not.to.equal((0, utils_1.trimText)(tRegion2));\n    });\n});\ncy.get("@tCity1").then((tCity1) => {\n    cy.get("table tbody tr")\n        .last()\n        .find("td")\n        .eq(3)\n        .scrollIntoView()\n        .invoke("text")\n        .then((tCity2) => {\n        expect((0, utils_1.trimText)(tCity1.toString().trim())).not.to.equal((0, utils_1.trimText)(tCity2));\n    });\n});\ncy.get("@tAddress1").then((tAddress1) => {\n    cy.get("table tbody tr")\n        .last()\n        .find("td")\n        .eq(1)\n        .scrollIntoView()\n        .invoke("text")\n        .then((tAddress2) => {\n        expect((0, utils_1.trimText)(tAddress1.toString().trim())).not.to.equal((0, utils_1.trimText)(tAddress2));\n    });\n});\ncy.get("@tPhone1").then((tPhone1) => {\n    cy.get("table tbody tr")\n        .last()\n        .find("td")\n        .eq(1)\n        .scrollIntoView()\n        .invoke("text")\n        .then((tPhone2) => {\n        expect((0, utils_1.trimText)(tPhone1.toString().trim())).not.to.equal((0, utils_1.trimText)(tPhone2));\n    });\n});\ncy.get("@tMail1").then((tMail1) => {\n    cy.get("table tbody tr")\n        .last()\n        .find("td")\n        .eq(1)\n        .scrollIntoView()\n        .invoke("text")\n        .then((tMail2) => {\n        expect((0, utils_1.trimText)(tMail1.toString().trim())).not.to.equal((0, utils_1.trimText)(tMail2));\n    });\n});\ncy.increaseScreenItemsMaxCount(100);\ncy.get("@initCount").then((initCount) => {\n    cy.getAllItemsCount("table", "tbody tr").then((lastCount) => {\n        expect(parseInt(lastCount.toString())).to.equal(parseInt(initCount.toString()) + 1);\n    });\n});*{}*false*false
2024-09-04T09:57:20.317Z*Display All Branches*4. Checks if the last row has the newly correct data values after submitting new data*7224*medium*passed*true*0*0**cy.verifyFirstCellInTable(1, branches_managment__data_1.BranchesManagmentData.branchName);\ncy.verifyFirstCellInTable(2, branches_managment__data_1.BranchesManagmentData.branchRegion);\ncy.verifyFirstCellInTable(3, branches_managment__data_1.BranchesManagmentData.branchCity);\ncy.verifyFirstCellInTable(4, branches_managment__data_1.BranchesManagmentData.branchAddress);\ncy.verifyFirstCellInTable(5, branches_managment__data_1.BranchesManagmentData.mobileNumber);\ncy.verifyFirstCellInTable(6, branches_managment__data_1.BranchesManagmentData.branchMail);\n// BranchesManagment.checkVisibilityOfActivate();\nbranches_management_1.BranchesManagment.checkVisibilityOfEditIcon();\nbranches_management_1.BranchesManagment.checkVisibilityOfDeleteIcon();*{}*false*false
2024-09-04T09:57:20.317Z*Display All Branches*5. Verify That The User Can cancel Delete Branch From Cancel Button on Delete Branch Dialog.*7216*medium*passed*true*0*0**branches_management_1.BranchesManagment.clickDeleteTheLastItem();\nbranches_management_1.BranchesManagment.CancelDeleteBranchDialog();*{}*false*false
2024-09-04T09:57:20.317Z*Display All Branches*6. Verify That The User Can Delete Branch From Delete Button on Each Branch Row.*12253*slow*passed*true*0*0**cy.wait(1000);\ncy.get("table").should("be.visible");\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initialRowCount) => {\n    cy.wrap(initialRowCount).as("initialRowCount");\n});\n//  Perform Delete Branch\nbranches_management_1.BranchesManagment.clickDeleteTheLastItem();\nbranches_management_1.BranchesManagment.ConfirmDeleteBranchDialog();\ncy.reload();\ncy.get("table tbody tr").should("be.visible");\ncy.get("@initialRowCount").then((initialRowCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((updatedCount) => {\n        expect(updatedCount).to.equal(parseInt(initialRowCount.toString()) - 1);\n    });\n});*{}*false*false
2024-09-04T09:59:19.050Z*Add new User*1.Verify That The Dialoge has the same SubDomain name*10169*slow*passed*true*0*0**manage_users_1.ManageUsers.clickFirstManageUsers();\nmanage_users_1.ManageUsers.clickAddNewUser();\nmanage_users_1.ManageUsers.clickCancelDialoge();\nmanage_users_1.ManageUsers.clickBackSubDomainHomeButton();\ncy.get('div[class="supdomain paragraph_b20"]').should("be.visible");\ncy.get('div[class="supdomain paragraph_b20"]')\n    .eq(1)\n    .invoke("text")\n    .then((txt1) => {\n    cy.wrap(txt1).as("txt1");\n    manage_users_1.ManageUsers.clickFirstManageUsers();\n    manage_users_1.ManageUsers.clickAddNewUser();\n});\ncy.get("@txt1").then((txt1) => {\n    cy.get(".view")\n        .should("be.visible")\n        .should(($div) => {\n        const cleanedText = $div\n            .text()\n            .replace(/\u00a0/g, " ")\n            .trim();\n        expect(cleanedText).to.equal(txt1\n            .toString()\n            .trim()\n            .replace(/.Microtecdev.Com/i, "")\n            .replace("&nbsp;", ""));\n    });\n});*{}*false*false
2024-09-04T09:59:19.050Z*Add new User*2.Verify All The compontes Are Visible*7972*medium*passed*true*0*0**manage_users_1.ManageUsers.clickFirstManageUsers();\nmanage_users_1.ManageUsers.clickAddNewUser();\nmanage_users_1.ManageUsers.clickCancelDialoge();\nmanage_users_1.ManageUsers.clickBackSubDomainHomeButton();\ncy.get('div[class="supdomain paragraph_b20"]').should("be.visible");\ncy.get('div[class="supdomain paragraph_b20"]')\n    .eq(1)\n    .invoke("text")\n    .then((txt1) => {\n    manage_users_1.ManageUsers.clickFirstManageUsers();\n    manage_users_1.ManageUsers.clickAddNewUser();\n    //  verify All Components Are Visible\n    //	Check The Dialoge Title\n    manage_users_1.ManageUsers.verifyDialogTitleComponentsAreVisible();\n    //	Check the Dialog Cancel Icon\n    manage_users_1.ManageUsers.verifyDialogCancelIconComponentsAreVisible();\n    //	Check The Email Label\n    manage_users_1.ManageUsers.verifyDialogEmailLabelComponentsAreVisible();\n    //	Check The Email Text Field\n    manage_users_1.ManageUsers.verifyDialogEmailTextFieldComponentsAreVisible();\n    //	Check The Company Label\n    manage_users_1.ManageUsers.verifyDialogCompanyLabelComponentsAreVisible();\n    //	Check The Company Drop Down\n    manage_users_1.ManageUsers.verifyDialogCompanyDropDownComponentsAreVisible();\n    //	Check The Branches Label\n    manage_users_1.ManageUsers.verifyDialogBranchesLabelComponentsAreVisible();\n    //	Check The Branches Text Field\n    manage_users_1.ManageUsers.verifyDialogBranchesTextFieldComponentsAreVisible();\n    //	Check The Domain Space Label\n    manage_users_1.ManageUsers.verifyDialogDomainSpaceLabelComponentsAreVisible();\n    //	Check The Domain Space Text Field\n    manage_users_1.ManageUsers.verifyDialogDomainSpaceTextFieldComponentsAreVisible(txt1);\n    //	Check The select Licence Label\n    manage_users_1.ManageUsers.verifyDialogLicenceLabelComponentsAreVisible();\n    //	Check The select Licence Text Field\n    manage_users_1.ManageUsers.verifyDialogSelectLicenceTextFieldComponentsAreVisible();\n    //	Check the Dialog Cancel Button\n    manage_users_1.ManageUsers.verifyDialogCancelDialoButtonComponentsAreVisible();\n    //	Check the Dialog Save Button\n    manage_users_1.ManageUsers.verifyDialogSaveDialoButtonComponentsAreVisible();\n});*{}*false*false
2024-09-04T09:59:19.050Z*Add new User*3.Verify That The Dialoge validates All the Required Components*13601*slow*passed*true*0*0**manage_users_1.ManageUsers.clickFirstManageUsers();\nmanage_users_1.ManageUsers.clickAddNewUser();\nmanage_users_1.ManageUsers.clickSaveButton();\ncy.verifyDisplayingTheRequiredValidationMsgsCount(4);\nmanage_users_1.ManageUsers.selectAdvancedLicence();\ncy.verifyDisplayingTheRequiredValidationMsgsCount(3);\nmanage_users_1.ManageUsers.selectTheLastCompany();\ncy.verifyDisplayingTheRequiredValidationMsgsCount(2);\nmanage_users_1.ManageUsers.inputMail((0, utils_1.generateRandomEmail)());\ncy.verifyDisplayingTheRequiredValidationMsgsCount(1);\nmanage_users_1.ManageUsers.selectTheFirstAndLastBranch();\ncy.verifyNotExistanceTheRequiredValidation();\ncy.confirmEmailRegExCompatibility('[data-testid="email"]', (0, utils_1.generateRandomEmail)());*{}*false*false
2024-09-04T09:59:19.050Z*Add new User*4.Verify That the Submitted data is Displayed on the grid and displayed it in the Table*18342*slow*passed*true*0*0**var mail = (0, utils_1.generateRandomEmail)();\nmanage_users_1.ManageUsers.clickFirstManageUsers();\ncy.wait(500);\ncy.increaseScreenItemsMaxCount(100);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\nmanage_users_1.ManageUsers.clickAddNewUser();\n// input All Required Dataو MAil, Company, Breanches, Licence\nmanage_users_1.ManageUsers.inputAllRegularData(mail);\nmanage_users_1.ManageUsers.clickSaveButton();\ncy.wait(2000);\ncy.reload();\ncy.wait(500);\ncy.increaseScreenItemsMaxCount(100);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_2.getWrappedNumber)(initCount) + 1);\n    });\n});*{}*false*false
2024-09-04T09:59:19.050Z*Add new User*5.Verify That the System does not display Branches, If there is not any Chosen Company*8455*medium*passed*true*0*0**manage_users_1.ManageUsers.clickFirstManageUsers();\nmanage_users_1.ManageUsers.clickAddNewUser();\n// There is not any chosen company\ncy.get('p-multiselect[data-testid="branchIds"]').click();\ncy.get('li[class="p-multiselect-empty-message ng-star-inserted"]').should("be.visible");\nmanage_users_1.ManageUsers.inputMail("test@test.co");\n// There is a chosen company\nmanage_users_1.ManageUsers.selectTheLastCompany();\ncy.get('p-multiselect[data-testid="branchIds"]').click();\ncy.get('div[class="p-checkbox-box"]')\n    .its("length")\n    .then((cout) => {\n    expect(cout).to.be.greaterThan(1);\n});*{}*false*false
2024-09-04T09:59:19.050Z*Add new User*6.Verify That the Dialog prevents dublicated Email*21155*slow*passed*true*0*0**var mail = (0, utils_1.generateRandomEmail)();\nmanage_users_1.ManageUsers.clickFirstManageUsers();\nmanage_users_1.ManageUsers.clickAddNewUser();\n// input All Required Dataو MAil, Company, Breanches, Licence\nmanage_users_1.ManageUsers.inputAllRegularData(mail);\nmanage_users_1.ManageUsers.clickSaveButton();\ncy.wait(2000);\ncy.get('div[role="dialog"]').should("not.exist");\nmanage_users_1.ManageUsers.clickAddNewUser();\n// input All Required Dataو MAil, Company, Breanches, Licence\nmanage_users_1.ManageUsers.inputAllRegularData(mail);\nmanage_users_1.ManageUsers.clickSaveButton();\ncy.wait(2000);\ncy.get('div[role="dialog"]').should("be.visible");*{}*false*false
2024-09-04T09:59:19.050Z*Add new User*7.Verify That the System does display a Licence type with its available count*0**pending*0*0*true**var mail = (0, utils_1.generateRandomEmail)();\nmanage_users_1.ManageUsers.clickFirstManageUsers();\nmanage_users_1.ManageUsers.clickAddNewUser();\nmanage_users_1.ManageUsers.selectTheLastCompany();\nmanage_users_1.ManageUsers.inputMail(mail);\nmanage_users_1.ManageUsers.selectTheFirstAndLastBranch();\nmanage_users_1.ManageUsers.inputMail(mail);\nmanage_users_1.ManageUsers.selectAdvancedLicence();\nmanage_users_1.ManageUsers.clickSaveButton();\ncy.reload();\ncy.wait(500);\ncy.increaseScreenItemsMaxCount(100);\ncy.verifyFirstCellInTable(1, mail);\ncy.verifyFirstCellInTable(3, licence);*{}*false*false
2024-09-04T09:59:43.584Z*verify Displaying All Subdomain's Users*1.Verify That All The Component of The Grid are Displayed (Rows and Columns)*9784*medium*passed*true*0*0**cy.get("table").then(($table) => {\n    if ($table.find("thead tr").is(":visible")) {\n        // Verify Column Headers\n        cy.get("tr th").eq(0).should("include", /name/i);\n        cy.get("tr th").eq(1).should("include", /mail/i);\n        cy.get("tr th")\n            .eq(2)\n            .should("include", /last login date/i);\n        cy.get("tr th")\n            .eq(3)\n            .should("include", /licence/i);\n        cy.get("tr th")\n            .eq(4)\n            .should("include", /status/i);\n        cy.get("tr th")\n            .eq(5)\n            .should("include", /actions/i);\n    }\n    else {\n        cy.log("Missing Table");\n    }\n});*{}*false*false
2024-09-04T09:59:43.584Z*verify Displaying All Subdomain's Users*2.Verify That The screen Has Search Text Field That Enable The User To Filter or Search For Some Users.*6769*medium*passed*true*0*0**cy.verifySearchFunctionalityDots();*{}*false*false
2024-09-04T09:59:43.584Z*verify Displaying All Subdomain's Users*3.Verify That The User Can Resend THe Email Invitation*6439*medium*passed*true*0*0**//  Check That the first row in the table has Resend Button then click it\nmanage_users_1.ManageUsers.verifyDisplayingResendButton();\nmanage_users_1.ManageUsers.clickResendButton();*{}*false*false
2024-09-04T10:00:00.495Z*Delete Existing User*1.Verify That The User Can Cancel in the confirmation Pop up*8723*medium*passed*true*0*0**cy.get("table").then(($table) => {\n    if ($table.find("tbody tr").is(":visible")) {\n        cy.get("table tbody tr")\n            .eq(0)\n            .find("td")\n            .eq(1)\n            .invoke("text")\n            .then((tMail) => {\n            cy.wrap(tMail.trim()).as("tMail1");\n        });\n        cy.increaseScreenItemsMaxCount(100);\n        cy.increaseScreenItemsMaxCount(100);\n        cy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n            cy.wrap(initCount).as("initCount");\n        });\n        manage_users_1.ManageUsers.clickDeleteOnTheLastUser();\n        //  Verify The Components of Cancel Pop up\n        // ManageUsers.verifyTheComponentsOfCancelPopup();\n        //  Click Cancel Button\n        manage_users_1.ManageUsers.cancelTheDeletePopUp();\n        //  Verify that No Data is Deleted\n        cy.get("@tMail1").then((tMail1) => {\n            cy.get("table tbody tr")\n                .eq(0)\n                .find("td")\n                .eq(1)\n                .scrollIntoView()\n                .invoke("text")\n                .then((tMail2) => {\n                expect((0, utils_1.trimText)(tMail1.toString().trim())).to.equal((0, utils_1.trimText)(tMail2));\n            });\n        });\n        cy.increaseScreenItemsMaxCount(100);\n        cy.get("@initCount").then((initCount) => {\n            cy.increaseScreenItemsMaxCount(100);\n            cy.getAllItemsCount("table", "tbody tr").then((lastCount) => {\n                expect(lastCount).to.equal(initCount);\n            });\n        });\n    }\n    else {\n        cy.log("Table is Empty");\n    }\n});*{}*false*false
2024-09-04T10:00:00.495Z*Delete Existing User*2.Verify That The User Can Delete The User From Delete Button on The User Row an Action. *6782*medium*passed*true*0*0**cy.get("table").then(($table) => {\n    if ($table.find("tbody tr").is(":visible")) {\n        cy.get("tbody tr")\n            .last()\n            .find("td")\n            .eq(1)\n            .invoke("text")\n            .then((tMail) => {\n            cy.wrap(tMail.trim()).as("tMail1");\n        });\n        cy.increaseScreenItemsMaxCount(100);\n        cy.increaseScreenItemsMaxCount(100);\n        cy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n            cy.wrap(initCount).as("initCount");\n        });\n        manage_users_1.ManageUsers.clickDeleteOnTheLastUser();\n        cy.confirmDeletePopUp();\n        //  Verify that No Data is Deleted\n        cy.get("@tMail1").then((tMail1) => {\n            cy.get("tbody tr")\n                .last()\n                .find("td")\n                .eq(1)\n                .scrollIntoView()\n                .invoke("text")\n                .then((tMail2) => {\n                expect((0, utils_1.trimText)(tMail1.toString().trim())).not.to.equal((0, utils_1.trimText)(tMail2));\n            });\n        });\n        cy.increaseScreenItemsMaxCount(100);\n        cy.get("@initCount").then((initCount) => {\n            cy.increaseScreenItemsMaxCount(100);\n            cy.getAllItemsCount("table", "tbody tr").then((lastCount) => {\n                expect(parseInt(lastCount.toString())).to.equal(parseInt(initCount.toString()) - 1);\n            });\n        });\n    }\n    else {\n        cy.log("Table is Empty");\n    }\n});*{}*false*false
2024-09-04T10:03:34.572Z*Manage Apps*000.Create New Subdomain*42897**failed*0*true*0**add_domain_space_1.AddDomainSpace.AddNewSubDomain();*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find content: 'domainjYGOyU' within the element: <div.card_header> and with the selector: '.supdomain' but never did.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find content: 'domainjYGOyU' within the element: <div.card_header> and with the selector: '.supdomain' but never did.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/My-subscriptions/Add_domain_space/pages/add_domain_space.ts:130:0)","diff":null}*false*false
2024-09-04T10:03:34.572Z*Manage Apps*0.Verify that the Cart List Screen has Text button 'Start Shopping' When there are not any items*8014*medium*passed*true*0*0**manage_apps_1.ManageApps.clickShoppingCart();\ncy.get("body").then(($body) => {\n    if ($body.find('div[class="title"]').is(":visible")) {\n        cy.log("There Are Title");\n    }\n    else {\n        manage_apps_1.ManageApps.verifyDisplayingStartShoppingText();\n        manage_apps_1.ManageApps.verifyDisplayingRouterlinkAppStore();\n    }\n});*{}*false*false
2024-09-04T10:03:34.572Z*Manage Apps*1.Verify that the users can switch from Vertical to Horizontal List view and Vice verse*7311*medium*passed*true*0*0**manage_apps_1.ManageApps.clickAppStore();\ncy.get('span[class="slider"]').should("be.visible").click();\ncy.get('div[class="app_list"]').find(".card_list").should("be.visible");*{}*false*false
2024-09-04T10:03:34.572Z*Manage Apps*2.Verify that All the Subdomains names are displayed on Add to Cart DropDown*10890*slow*passed*true*0*0**cy.get('div[class="supdomain paragraph_b20"]').should("be.visible");\ncy.get('div[class="supdomain paragraph_b20"]')\n    .its("length")\n    .then((length) => {\n    let allDomains = "";\n    for (var c = 0; c < length; c++) {\n        cy.get('div[class="supdomain paragraph_b20"]').should("be.visible");\n        cy.get('div[class="supdomain paragraph_b20"]')\n            .eq(c)\n            .invoke("text")\n            .then((txt) => {\n            allDomains = allDomains + "---" + txt.split(".")[0];\n            cy.wrap(allDomains).as("allDomains");\n        });\n    }\n});\nmanage_apps_1.ManageApps.clickAppStore();\ncy.wait(1500);\nmanage_apps_1.ManageApps.clickAddToCart(appIndex);\ncy.wait(1000);\nmanage_apps_1.ManageApps.clickSubDomainsDropDown();\ncy.get("@allDomains").then((allDomains) => {\n    let allDomainsList = allDomains.toString().split("---");\n    for (var d = 1; d < allDomainsList.length; d++) {\n        cy.contains("li", allDomainsList[d].toString())\n            .scrollIntoView()\n            .should("be.visible");\n    }\n});*{}*false*false
2024-09-04T10:03:34.572Z*Manage Apps*3.Verify that All Components are Displayed in Manage Apps Screen*6757*medium*passed*true*0*0**manage_apps_1.ManageApps.clickAppStore();\n// Header Label\ncy.get(".p-menuitem-text").should("have.text", "App Store");\n// HeaderAppCountLabel\ncy.get(".count_of_apps").should("have.text", " 6 App in Store ");\n// sliderisVisible\ncy.get(".slider").should("be.visible").should("have.class", "slider");\n//  Verify Each Card Components\ncy.get('div[class="card"]')\n    .its("length")\n    .then((len) => {\n    cy.wrap(len).as("cardsCount");\n});\ncy.get("@cardsCount").then((cardCounts) => {\n    for (let i = 0; i < parseInt(cardCounts.toString()) - 1; i++) {\n        manage_apps_1.ManageApps.verifyCardTitle(i);\n        manage_apps_1.ManageApps.verifyCardRenew(i);\n        manage_apps_1.ManageApps.verifyCardDesc(i);\n        manage_apps_1.ManageApps.verifyCardAddToCart(i);\n    }\n});*{}*false*false
2024-09-04T10:03:34.572Z*Manage Apps*4.Verify that the user can add a new App to the Checkout List*20011*slow*passed*true*0*0**cy.reload();\ncy.clickContinueAs();\nmanage_apps_1.ManageApps.clickShoppingCart();\ncy.wait(2000);\ncy.get("body").then(($body) => {\n    if ($body.find('div[class="title"]').is(":visible")) {\n        cy.get('div[class="title"]')\n            .its("length")\n            .then((initCount) => {\n            cy.wrap(initCount).as("initCount");\n            cy.log("initCount :::^^^^:::: " + initCount);\n        });\n    }\n    else {\n        cy.log("Table is not Exist");\n        cy.wrap(0).as("initCount");\n    }\n});\nmanage_apps_1.ManageApps.clickAppStore();\ncy.wait(1000);\nmanage_apps_1.ManageApps.clickAddToCart(appIndex);\ncy.getLastItemInDropDownList("subdomain");\nmanage_apps_1.ManageApps.clickSave();\nmanage_apps_1.ManageApps.verifySuccessProcess();\nmanage_apps_1.ManageApps.clickShoppingCart();\ncy.get("@initCount").then((initCount) => {\n    cy.get('div[class="title"]')\n        .its("length")\n        .then((finalCount) => {\n        cy.log("initCount :::#####:::: " + initCount);\n        cy.log("finalCount :::#####:::: " + finalCount);\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) + 1);\n    });\n});*{}*false*false
2024-09-04T10:03:34.572Z*Manage Apps*5.verify that the user can not buy an app to the same Subdomain multiple times*13006*slow*passed*true*0*0**cy.reload();\ncy.clickContinueAs();\nmanage_apps_1.ManageApps.clickAppStore();\ncy.wait(2000);\nmanage_apps_1.ManageApps.clickAppStore();\nmanage_apps_1.ManageApps.clickAddToCart(appIndex);\ncy.getLastItemInDropDownList("subdomain");\nmanage_apps_1.ManageApps.clickSave();\nmanage_apps_1.ManageApps.verifyDialogPresence();*{}*false*false
2024-09-04T10:03:34.572Z*Manage Apps*6.Verify That the user can delete an app from Checkout list*13317*slow*passed*true*0*0**cy.reload();\ncy.clickContinueAs();\nmanage_apps_1.ManageApps.clickShoppingCart();\ncy.wait(1000);\ncy.get("body").then(($body) => {\n    if ($body.find('div[class="title"]').is(":visible")) {\n        cy.get('div[class="title"]')\n            .its("length")\n            .then((initCount) => {\n            cy.wrap(initCount).as("initCount");\n            cy.log("initCount :::^^^^:::: " + initCount);\n        });\n    }\n    else {\n        cy.wrap(0).as("initCount");\n        cy.log("Table is not Exist");\n    }\n});\nmanage_apps_1.ManageApps.deleteFromCheckOutList();\ncy.confirmDeletePopUp();\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.get("body").then(($body) => {\n        if ($body.find('div[class="title"]').is(":visible")) {\n            cy.get('div[class="title"]')\n                .its("length")\n                .then((finalCount) => {\n                cy.log("initCount :::#####:::: " + initCount);\n                cy.log("finalCount :::#####:::: " + finalCount);\n                var z = (0, utils_1.getWrappedNumber)(initCount) - 1;\n                expect(finalCount).to.equal(z);\n            });\n        }\n        else {\n            manage_apps_1.ManageApps.verifyDisplayingStartShoppingText();\n            manage_apps_1.ManageApps.verifyDisplayingRouterlinkAppStore();\n        }\n    });\n});*{}*false*false
2024-09-04T10:03:34.572Z*Manage Apps*7.Verify that the user can re Add to Cart a canceled App in the checkout screen*12681*slow*passed*true*0*0**cy.reload();\ncy.clickContinueAs();\nmanage_apps_1.ManageApps.clickAppStore();\ncy.wait(2000);\nmanage_apps_1.ManageApps.clickAppStore();\nmanage_apps_1.ManageApps.clickAddToCart(appIndex);\ncy.getLastItemInDropDownList("subdomain");\nmanage_apps_1.ManageApps.clickSave();\nmanage_apps_1.ManageApps.verifySuccessProcess();*{}*false*false
2024-09-04T10:03:34.572Z*Manage Apps*9.Verify that the Checklist Screen has all components*8667*medium*passed*true*0*0**cy.reload();\ncy.clickContinueAs();\nmanage_apps_1.ManageApps.clickCheckOutIcon();\ncy.wait(1000);\ncy.get(".p-menuitem-text").should("be.visible");\ncy.get(".p-menuitem-text").should("have.text", "Cart List");\ncy.get("span").should("include", /cart list/i);\ncy.get(".body_b16").should("have.text", " Enter an item number and press Enter to load the product inormation and variants . Tab to select variants and quantity . press on the quantity arrows to add the product to the list ");\ncy.get(".data_head > .grid > .col-4").should("have.text", "Product");\ncy.get(".data_head > .grid > :nth-child(2)").should("have.text", "Subdomain");\ncy.get(".data_head > .grid > :nth-child(3)").should("have.text", "Price");\ncy.get(".data_head > .grid > :nth-child(4)").should("have.text", "Total");\ncy.get("span").should("include", /cart list/i);\ncy.get(".text > :nth-child(2)").should("have.text", "Details");\ncy.get(".total_items > .title").contains(/items/i).should("be.visible");\ncy.get(".Check_out")\n    .should("be.visible")\n    .should("be.enabled")\n    .should("have.text", " Check out ");\ncy.get(".Cancel")\n    .should("be.visible")\n    .should("be.enabled")\n    .should("have.text", "Cancel");*{}*false*false
2024-09-04T10:03:34.572Z*Manage Apps*10.Verify That the Checkout Process is Finished Successfully*9280*medium*passed*true*0*0**cy.wait(500);\nmanage_apps_1.ManageApps.clickLastSubDomainManageApp();\nmanage_apps_1.ManageApps.clickShoppingCart();\nmanage_apps_1.ManageApps.clickCheckOut();\nmanage_apps_1.ManageApps.verifySuccessCheckOut();*{}*false*false
2024-09-04T10:03:34.572Z*Manage Apps*11.Verify that the Subdomain's App Management Screen has all Components*7072*medium*passed*true*0*0**cy.wait(1000);\nmanage_apps_1.ManageApps.clickLastSubDomainManageApp();\ncy.get(".p-menuitem-text").should("have.text", "Manage Apps");\ncy.get(".count_of_apps")\n    .contains(/app in store/i)\n    .should("be.visible");\ncy.get(".slider").should("have.class", "slider");*{}*false*false
2024-09-04T10:03:34.572Z*Manage Apps*12.Verify that the user can shift between Horizontal to vertical Listview Mode in the  Subdomain's App Management Screen*6612*medium*passed*true*0*0**cy.wait(1000);\nmanage_apps_1.ManageApps.clickLastSubDomainManageApp();\ncy.get('div[class="col-12 md:col-12"]').then(($body) => {\n    if ($body.find('div[class="card ng-star-inserted"]').length > 0) {\n        cy.get('div[class="card card_list"]').should("not.exist");\n        cy.get(".slider").click();\n        cy.get('div[class="card card_list"]').should("exist");\n    }\n});*{}*false*false
2024-09-04T10:07:05.897Z*General Setting*1.Verify that the user can shift between All Apps in the Subdomain*37193*slow*passed*true*0*0**general_setting_1.GeneralSetting.landing();\ncy.wait(2500);\ngeneral_setting_1.GeneralSetting.clickShifttingButton();\ngeneral_setting_1.GeneralSetting.shiftToAnotherApp("Accounting");\ncy.wait(500);\ngeneral_setting_1.GeneralSetting.verifyNavigatingToAnotherApp("accounting");\ngeneral_setting_1.GeneralSetting.clickShifttingButton();\ngeneral_setting_1.GeneralSetting.shiftToAnotherApp("purchase");\ncy.wait(1000);\ngeneral_setting_1.GeneralSetting.verifyNavigatingToAnotherApp("purchase");*{}*false*false
2024-09-04T10:07:05.897Z*General Setting*2.Verify that all components of taglist are exist successfully*16762*slow*passed*true*0*0**general_setting_1.GeneralSetting.landing();\n// Verify Table Column 's Header\ngeneral_setting_1.GeneralSetting.verifyColumnHeaders();*{}*false*false
2024-09-04T10:07:05.897Z*General Setting*3.Verify Required Validations*18895*slow*passed*true*0*0**general_setting_1.GeneralSetting.landing();\ncy.wait(2000);\ngeneral_setting_1.GeneralSetting.clickAddNewButton();\ngeneral_setting_1.GeneralSetting.clickDialogSaveButton();\ngeneral_setting_1.GeneralSetting.inputTagName(general_settings_data_1.GeneralSettingsData.tagName);\ngeneral_setting_1.GeneralSetting.validatePressenceRequiredMessage();\ncy.checkAllOptions();\ngeneral_setting_1.GeneralSetting.validateNoRequiredMessage();\ngeneral_setting_1.GeneralSetting.clearTagName();\ngeneral_setting_1.GeneralSetting.validatePressenceRequiredMessage();\ngeneral_setting_1.GeneralSetting.inputTagName(general_settings_data_1.GeneralSettingsData.tagName);\ngeneral_setting_1.GeneralSetting.validateNoRequiredMessage();\ngeneral_setting_1.GeneralSetting.clickDialogSaveButton();\ngeneral_setting_1.GeneralSetting.verifyAddNewTagDisAppearing();*{}*false*false
2024-09-04T10:07:05.897Z*General Setting*4.Verify that cancel Button cancel all changes in Add a new tag Dialog*23254*slow*passed*true*0*0**//  Visit the domain s\ngeneral_setting_1.GeneralSetting.landing();\ncy.wait(2000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ngeneral_setting_1.GeneralSetting.clickAddNewButton();\ncy.wait(500);\ncy.checkAllOptions();\ncy.wait(750);\ngeneral_setting_1.GeneralSetting.inputTagName(general_settings_data_1.GeneralSettingsData.tagName);\ngeneral_setting_1.GeneralSetting.clickDialogcancelButton();\ncy.increaseScreenItemsMaxCount(100);\ncy.get("@initCount").then((initCount) => {\n    cy.getAllItemsCount("table", "tr").then((finalCount) => {\n        expect(parseInt((0, utils_1.trimText)(finalCount.toString().trim()))).to.equal(parseInt((0, utils_1.trimText)(initCount.toString().trim())));\n    });\n});\ngeneral_setting_1.GeneralSetting.verifyThatNewTagNameIsNOTAddedtotheTable(general_settings_data_1.GeneralSettingsData.tagName);*{}*false*false
2024-09-04T10:07:05.897Z*General Setting*5.Verify that the user can Add a new tag*22020*slow*passed*true*0*0**//  Visit the domain s\ngeneral_setting_1.GeneralSetting.landing();\ncy.wait(2000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ngeneral_setting_1.GeneralSetting.clickAddNewButton();\ncy.checkAllOptions();\ngeneral_setting_1.GeneralSetting.inputTagName(general_settings_data_1.GeneralSettingsData.tagName);\ngeneral_setting_1.GeneralSetting.clickDialogSaveButton();\ncy.increaseScreenItemsMaxCount(100);\ncy.get("@initCount").then((initCount) => {\n    cy.getAllItemsCount("table", "tr").then((finalCount) => {\n        expect(parseInt((0, utils_1.trimText)(finalCount.toString().trim()))).to.equal(parseInt((0, utils_1.trimText)(initCount.toString().trim())) + 1);\n    });\n});\ncy.verifyFirstCellInTable(1, general_settings_data_1.GeneralSettingsData.tagName);*{}*false*false
2024-09-04T10:07:05.897Z*General Setting*6.Verify that cancel Button cancels all changes in Edit tag Dialog*26106*slow*passed*true*0*0**general_setting_1.GeneralSetting.landing();\ncy.wait(2000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.getFirstCellInTableValue(0).then((codeT1) => {\n    cy.wrap(codeT1).as("codeT1");\n});\ncy.getFirstCellInTableValue(1).then((nameT1) => {\n    cy.wrap(nameT1).as("nameT1");\n});\ncy.clickFirstEditActionButton();\ncy.wait(1000);\ncy.get('timescircleicon[data-pc-section="clearicon"]')\n    .first()\n    .click({ force: true });\ncy.get("@nameT1").then((nameT1) => {\n    general_setting_1.GeneralSetting.inputTagNameEditted("Edited " + (0, utils_1.trimText)(nameT1.toString().trim()));\n});\ngeneral_setting_1.GeneralSetting.clickDialogcancelButton();\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(3000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tr").then((finalCount) => {\n        expect(parseInt((0, utils_1.trimText)(finalCount.toString().trim()))).to.equal(parseInt((0, utils_1.trimText)(initCount.toString().trim())));\n    });\n});\ncy.get("@codeT1").then((codeT1) => {\n    cy.verifyFirstCellInTable(0, (0, utils_1.trimText)(codeT1.toString().trim()));\n});\ncy.get("@nameT1").then((nameT1) => {\n    cy.verifyFirstCellInTable(1, (0, utils_1.trimText)(nameT1.toString().trim()));\n});*{}*false*false
2024-09-04T10:07:05.897Z*General Setting*7.Verify that the user can Edit an existing tag*25312*slow*passed*true*0*0**general_setting_1.GeneralSetting.landing();\ncy.wait(2000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.getFirstCellInTableValue(0).then((codeT1) => {\n    cy.wrap(codeT1).as("codeT1");\n});\ncy.getFirstCellInTableValue(1).then((nameT1) => {\n    cy.wrap(nameT1).as("nameT1");\n});\ncy.clickFirstEditActionButton();\ncy.wait(1000);\ncy.get('timescircleicon[data-pc-section="clearicon"]')\n    .first()\n    .click({ force: true });\ncy.get("@nameT1").then((nameT1) => {\n    general_setting_1.GeneralSetting.inputTagNameEditted("Edited " + (0, utils_1.trimText)(nameT1.toString().trim()));\n});\ngeneral_setting_1.GeneralSetting.clickDialogSaveButton();\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(3000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tr").then((finalCount) => {\n        expect(parseInt((0, utils_1.trimText)(finalCount.toString().trim()))).to.equal(parseInt((0, utils_1.trimText)(initCount.toString().trim())));\n    });\n});\ncy.get("@codeT1").then((codeT1) => {\n    cy.verifyFirstCellInTable(0, (0, utils_1.trimText)(codeT1.toString().trim()));\n});\ncy.get("@nameT1").then((nameT1) => {\n    cy.verifyFirstCellInTable(1, "Edited " + (0, utils_1.trimText)(nameT1.toString().trim()));\n});*{}*false*false
2024-09-04T10:07:05.897Z*General Setting*8.should filter the table based on search input in the first two columns*19241*slow*passed*true*0*0**general_setting_1.GeneralSetting.landing();\ncy.wait(2000);\ncy.verifySearchFunctionality();*{}*false*false
2024-09-04T10:07:05.897Z*General Setting*9.Verify that the user can delete a new tag*20282*slow*passed*true*0*0**general_setting_1.GeneralSetting.landing();\ncy.wait(2000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.clickFirstDeleteActionButton();\ncy.confirmDeletePopUp();\ncy.increaseScreenItemsMaxCount(100);\ncy.get("@initCount").then((initCount) => {\n    cy.getAllItemsCount("table", "tr").then((finalCount) => {\n        expect(parseInt((0, utils_1.trimText)(finalCount.toString().trim()))).to.equal(parseInt((0, utils_1.trimText)(initCount.toString().trim())) - 1);\n    });\n});*{}*false*false
2024-09-04T10:08:45.134Z*Currency Definitions (Edit)*1.Verify All components are displaying*16102*slow*passed*true*0*0**currency_definition_1.CurrencyDefinitions.landing();\ncy.wait(1500);\ncy.clickFirstEditActionButton();\n// Verify Labels\ncy.verifyLabelText("code", /currency code/i);\ncy.verifyLabelText("name", /currency name/i);\ncy.verifyLabelText("subUnit", /currency subunit/i);\ncy.verifyLabelText("symbol", /currency symbol/i);\ncy.verifyLabelText("countryCode", /currency country/i);\ncy.verifyLabelText("differenceAccount", /difference account/i);*{}*false*false
2024-09-04T10:08:45.134Z*Currency Definitions (Edit)*2.Verify Submitting Editing an Existing Currency Definitions*19193*slow*passed*true*0*0**currency_definition_1.CurrencyDefinitions.landing();\ncy.clickFirstEditActionButton();\ncy.getLastElementDropDownList(2);\ncy.getByTestAttribute("name").clear().type(general_settings_data_1.GeneralSettingsData.newCurrency);\ncy.getByTestAttribute("subUnit")\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.cSubunitE);\ncy.selectCountryByIndex(1, "egy").then(($country1) => {\n    if ($country1 != null) {\n        cy.wrap($country1)\n            .invoke("text")\n            .then((country1Txt) => {\n            cy.log("country1Txt::: " + country1Txt);\n            cy.wrap(country1Txt).as("country1Txt");\n        });\n    }\n    else {\n        cy.wrap("").as("country1Txt");\n    }\n});\ncy.getByTestAttribute("symbol").clear().type(general_settings_data_1.GeneralSettingsData.cSymbolE);\ncurrency_definition_1.CurrencyDefinitions.clickSaveButton();\n// Assertion\ncy.wait(1000);\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.verifyFirstCellInTable(1, general_settings_data_1.GeneralSettingsData.newCurrency);\ncy.verifyFirstCellInTable(2, general_settings_data_1.GeneralSettingsData.cSymbolE);\ncy.verifyFirstCellInTable(3, general_settings_data_1.GeneralSettingsData.cSubunitE);\ncy.get("@country1Txt").then((country1) => {\n    cy.verifyFirstCellInTable(4, (0, utils_1.getWrappedString)(country1));\n});*{}*false*false
2024-09-04T10:08:45.134Z*Currency Definitions (Edit)*3.Verify canceling Editing an Existing Currency Definitions*21257**failed*0*true*0**currency_definition_1.CurrencyDefinitions.landing();\ncy.clickFirstEditActionButton();\ncy.getLastElementDropDownList(2);\ncy.getByTestAttribute("name").clear().type(general_settings_data_1.GeneralSettingsData.newCurrency);\ncy.getByTestAttribute("subUnit")\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.cSubunitE);\ncy.selectCountryByIndex(1, "egy").then(($country1) => {\n    if ($country1 != null) {\n        cy.wrap($country1)\n            .invoke("text")\n            .then((country1Txt) => {\n            cy.log("country1Txt::: " + country1Txt);\n            cy.wrap(country1Txt).as("country1Txt");\n        });\n    }\n    else {\n        cy.wrap("").as("country1Txt");\n    }\n});\ncy.getByTestAttribute("symbol").clear().type(general_settings_data_1.GeneralSettingsData.cSymbolE);\ncurrency_definition_1.CurrencyDefinitions.clickCancelButton();\n// Assertion\ncy.wait(1000);\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.verifyFirstCellInTableNotEqual(1, general_settings_data_1.GeneralSettingsData.newCurrency);\ncy.verifyFirstCellInTableNotEqual(3, general_settings_data_1.GeneralSettingsData.cSubunitE);*{"message":"AssertionError: expected 'currencyvGZIFnaPxzAH' to not equal 'currencyvGZIFnaPxzAH'","estack":"AssertionError: expected 'currencyvGZIFnaPxzAH' to not equal 'currencyvGZIFnaPxzAH'\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:548:0)","diff":""}*false*false
2024-09-04T10:08:45.134Z*Currency Definitions (Edit)*4.Verify Required Validation and The name Field is Required*17514*slow*passed*true*0*0**currency_definition_1.CurrencyDefinitions.landing();\ncy.clickFirstEditActionButton();\ncy.verifyNotExistanceTheRequiredValidation();\ncy.getByTestAttribute("name").clear();\ncy.verifyDisplayingTheRequiredValidationMsgsCount(1);\ncy.getByTestAttribute("symbol").clear();\ncy.verifyDisplayingTheRequiredValidationMsgsCount(2);\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\ncy.verifyDisplayingTheRequiredValidationMsgsCount(1);\ncurrency_definition_1.CurrencyDefinitions.clickSaveButton();\ncy.get('div[role="dialog"]').should("be.visible");\ncy.getByTestAttribute("symbol").clear().type(general_settings_data_1.GeneralSettingsData.cSymbolE);\ncy.verifyNotExistanceTheRequiredValidation();\ncurrency_definition_1.CurrencyDefinitions.clickSaveButton();\ncy.wait(1500);\ncy.get('div[role="dialog"]').should("not.exist");*{}*false*false
2024-09-04T10:09:33.502Z*Currency Definitions List View*1.Verify all the components are displayed on the Listview*15813*slow*passed*true*0*0**currency_definition_1.CurrencyDefinitions.landing();\ncy.wait(1500);\ncy.get("table").then((table) => {\n    if (table.find("th").first().is(":visible")) {\n        cy.wrap(table).find("th").eq(0).contains(/code/i).should("be.visible");\n        cy.wrap(table).find("th").eq(1).contains(/name/i).should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(2)\n            .contains(/sympol/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(3)\n            .contains(/subunit/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(4)\n            .contains(/country/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(5)\n            .contains(/actions/i)\n            .should("be.visible");\n    }\n    else {\n        cy.log("Table Header is not Visible");\n    }\n});*{}*false*false
2024-09-04T10:09:33.502Z*Currency Definitions List View*2.should filter the table based on search input in the first two columns*14764**failed*0*true*0**currency_definition_1.CurrencyDefinitions.landing();\ncy.wait(1000);\ncy.verifySearchFunctionality();*{"message":"AssertionError: expected 'QnumQsd' to equal 'SaudiRiyal'","estack":"AssertionError: expected 'QnumQsd' to equal 'SaudiRiyal'\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:485:0)","diff":"- 'QnumQsd'\n+ 'SaudiRiyal'\n"}*false*false
2024-09-04T10:12:51.387Z*Currency Conversion (Add)*1.Verify All components are displaying*17465*slow*passed*true*0*0**currency_conversion_1.CurrencyConversion.landing();\ncy.wait(1500);\ncurrency_conversion_1.CurrencyConversion.clickAddNewButton();\ncy.wait(1500);\ncy.verifyLabelText("fromCurrencyId", /from currency/i);\ncy.verifyLabelText("fromCurrencyRate", /currency rate/i);\ncy.verifyLabelText("toCurrencyId", /to currency/i);\ncy.verifyLabelText("reversedRate", /reversed rates/i);\ncy.verifyLabelText("note", /notes/i);*{}*false*false
2024-09-04T10:12:51.387Z*Currency Conversion (Add)*2.Verify Submitting new Currency Conversion*27984**failed*0*true*0**currency_conversion_1.CurrencyConversion.landing();\ncy.wait(1500);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncurrency_conversion_1.CurrencyConversion.clickAddNewButton();\ncy.wait(1000);\ncy.clickInputtedSearchDropDownList("toCurrencyId", general_settings_data_1.GeneralSettingsData.newCurrencySearch);\ncy.getByTestAttribute("note")\n    .scrollIntoView()\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.ccNote);\ncy.clickInputtedSearchDropDownList("fromCurrencyId", general_settings_data_1.GeneralSettingsData.currency1);\ncy.getByTestAttribute("fromCurrencyRate")\n    .scrollIntoView()\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.ccFromCurrencyRate);\ncurrency_conversion_1.CurrencyConversion.clickSaveButton();\n// Assertion\ncy.wait(1000);\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.increaseScreenItemsMaxCount(100);\ncy.get("@initCount").then((initCount) => {\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) + 1);\n    });\n});*{"message":"AssertionError: expected 1 to equal 2","estack":"AssertionError: expected 1 to equal 2\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/General_Setting/currency_conversion/tests/currency_conversion_add.cy.ts:50:0)","diff":"- 1\n+ 2\n"}*false*false
2024-09-04T10:12:51.387Z*Currency Conversion (Add)*3.Verify Cancelling Submitting new Currency Conversion*27893*slow*passed*true*0*0**currency_conversion_1.CurrencyConversion.landing();\ncy.wait(1500);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncurrency_conversion_1.CurrencyConversion.clickAddNewButton();\ncy.wait(1000);\ncy.clickInputtedSearchDropDownList("toCurrencyId", general_settings_data_1.GeneralSettingsData.currency1);\ncy.wait(1000);\ncy.getByTestAttribute("note")\n    .scrollIntoView()\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.ccNote);\ncy.clickInputtedSearchDropDownList("fromCurrencyId", general_settings_data_1.GeneralSettingsData.newCurrencySearch);\ncy.getByTestAttribute("fromCurrencyRate")\n    .scrollIntoView()\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.ccFromCurrencyRate);\ncurrency_conversion_1.CurrencyConversion.clickcancelButton();\n// Assertion\ncy.wait(1000);\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount));\n    });\n});*{}*false*false
2024-09-04T10:12:51.387Z*Currency Conversion (Add)*4.Verify Required Validation and The name Field is Required*33302**failed*0*true*0**currency_conversion_1.CurrencyConversion.landing();\ncy.wait(1500);\ncurrency_conversion_1.CurrencyConversion.clickAddNewButton();\ncy.wait(1500);\ncurrency_conversion_1.CurrencyConversion.clickSaveButton();\ncy.get('div[class="error ng-star-inserted"]').should("have.length", 3);\ncy.clickInputtedSearchDropDownList("toCurrencyId", general_settings_data_1.GeneralSettingsData.currency1);\ncy.get('div[class="error ng-star-inserted"]').should("have.length", 2);\ncy.getByTestAttribute("fromCurrencyRate")\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.ccFromCurrencyRate);\ncy.get('div[class="error ng-star-inserted"]').should("have.length", 1);\ncy.clickInputtedSearchDropDownList("fromCurrencyId", general_settings_data_1.GeneralSettingsData.newCurrencySearch);\ncy.get('div[class="error ng-star-inserted"]').should("not.exist");*{"message":"AssertionError: Timed out retrying after 12000ms: Expected <div.error.ng-star-inserted> not to exist in the DOM, but it was continuously found.","estack":"AssertionError: Timed out retrying after 12000ms: Expected <div.error.ng-star-inserted> not to exist in the DOM, but it was continuously found.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/General_Setting/currency_conversion/tests/currency_conversion_add.cy.ts:102:0)","diff":null}*false*false
2024-09-04T10:12:51.387Z*Currency Conversion (Add)*5.Verify Validation of the same From and To Currency*24917*slow*passed*true*0*0**currency_conversion_1.CurrencyConversion.landing();\ncy.wait(1500);\ncurrency_conversion_1.CurrencyConversion.clickAddNewButton();\ncy.wait(1500);\ncy.clickInputtedSearchDropDownList("fromCurrencyId", general_settings_data_1.GeneralSettingsData.currency1);\ncy.wait(1000);\ncy.getByTestAttribute("note")\n    .scrollIntoView()\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.ccNote);\ncy.clickInputtedSearchDropDownList("toCurrencyId", general_settings_data_1.GeneralSettingsData.currency1);\ncy.getByTestAttribute("fromCurrencyRate")\n    .scrollIntoView()\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.ccFromCurrencyRate);\ncy.contains("div", /different/i)\n    .first()\n    .scrollIntoView()\n    .should("be.visible");\ncy.contains("div", /different/i)\n    .last()\n    .scrollIntoView()\n    .should("be.visible");*{}*false*false
2024-09-04T10:13:46.134Z*Currency Conversion List View*1.Verify all the components are displayed on the Listview*15202*slow*passed*true*0*0**currency_conversion_1.CurrencyConversion.landing();\ncy.wait(1500);\ncy.get("table").then((table) => {\n    // Verify Table Column Headers\n    if (table.find("th").first().is(":visible")) {\n        cy.wrap(table)\n            .find("th")\n            .eq(0)\n            .contains(/from currency/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(1)\n            .contains(/currency rate/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(2)\n            .contains(/to currency/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(3)\n            .contains(/reversed rate/i)\n            .should("be.visible");\n        cy.wrap(table).find("th").eq(4).contains(/notes/i).should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(5)\n            .scrollIntoView()\n            .contains(/actions/i)\n            .should("be.visible");\n    }\n    else {\n        cy.log("Table Header is not Visible");\n    }\n});*{}*false*false
2024-09-04T10:13:46.134Z*Currency Conversion List View*2.should filter the table based on search input in the first two columns*13746*slow*passed*true*0*0**currency_conversion_1.CurrencyConversion.landing();\ncy.wait(1500);\ncy.verifySearchFunctionality();*{}*false*false
2024-09-04T10:13:46.134Z*Currency Conversion List View*3.Verify Deleting A Currency Conversion*21981*slow*passed*true*0*0**currency_conversion_1.CurrencyConversion.landing();\ncy.wait(1500);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.clickFirstDeleteActionButton();\ncy.confirmDeletePopUp();\n// Assertion\ncy.wait(1000);\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) - 1);\n    });\n});*{}*false*false
2024-09-04T10:18:21.917Z*Currency Conversion (Edit)*1.Verify All components are displaying*25578**failed*0*true*0**currency_conversion_1.CurrencyConversion.landing();\ncy.clickFirstEditActionButton();\ncy.wait(1500);\ncy.verifyLabelText("fromCurrencyId", /from currency/i);\ncy.verifyLabelText("fromCurrencyRate", /currency rate/i);\ncy.verifyLabelText("toCurrencyId", /to currency/i);\ncy.verifyLabelText("reversedRate", /reversed rates/i);\ncy.verifyLabelText("note", /notes/i);*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `label[for=fromCurrencyId]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `label[for=fromCurrencyId]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:83:0)","diff":null}*false*false
2024-09-04T10:18:21.917Z*Currency Conversion (Edit)*2.Verify Submitting Editted Currency Conversion*25021**failed*0*true*0**currency_conversion_1.CurrencyConversion.landing();\ncy.clickFirstEditActionButton();\ncy.wait(1000);\ncy.clickInputtedSearchDropDownList("toCurrencyId", general_settings_data_1.GeneralSettingsData.currency2).then(($toCurrencyId) => {\n    if ($toCurrencyId != null) {\n        cy.wrap($toCurrencyId)\n            .invoke("text")\n            .then((toCurrencyIdTxt) => {\n            cy.log("toCurrencyIdTxt::: " + toCurrencyIdTxt);\n            cy.wrap(toCurrencyIdTxt).as("toCurrencyIdTxt");\n        });\n    }\n    else {\n        cy.wrap("").as("toCurrencyIdTxt");\n    }\n});\ncy.wait(1000);\ncy.getByTestAttribute("note")\n    .scrollIntoView()\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.ccNote);\ncy.clickInputtedSearchDropDownList("fromCurrencyId", general_settings_data_1.GeneralSettingsData.newCurrencySearch).then(($fromCurrencyId) => {\n    if ($fromCurrencyId != null) {\n        cy.wrap($fromCurrencyId)\n            .invoke("text")\n            .then((fromCurrencyIdTxt) => {\n            cy.log("fromCurrencyIdTxt::: " + fromCurrencyIdTxt);\n            cy.wrap(fromCurrencyIdTxt).as("fromCurrencyIdTxt");\n        });\n    }\n    else {\n        cy.wrap("").as("fromCurrencyIdTxt");\n    }\n});\n// cy.getByTestAttribute("reversedRate").clear().type(GeneralSettingsData.ccReversedRate);\ncy.getByTestAttribute("fromCurrencyRate")\n    .scrollIntoView()\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.ccFromCurrencyRate);\ncurrency_conversion_1.CurrencyConversion.clickSaveButton();\ncurrency_conversion_1.CurrencyConversion.assertSuccesfulSaving();*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=toCurrencyId]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=toCurrencyId]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:103:0)","diff":null}*false*false
2024-09-04T10:18:21.917Z*Currency Conversion (Edit)*3.Verify Rejecting Submitting Editted Currency Conversion (2 Currencies has previous Conversion relation)*27584**failed*0*true*0**currency_conversion_1.CurrencyConversion.landing();\ncy.wait(1500);\ncy.clickFirstEditActionButton();\ncy.wait(1000);\ncy.clickInputtedSearchDropDownList("fromCurrencyId", general_settings_data_1.GeneralSettingsData.newCurrencySearch).then(($fromCurrencyId) => {\n    if ($fromCurrencyId != null) {\n        cy.wrap($fromCurrencyId)\n            .invoke("text")\n            .then((fromCurrencyIdTxt) => {\n            cy.log("fromCurrencyIdTxt::: " + fromCurrencyIdTxt);\n            cy.wrap(fromCurrencyIdTxt).as("fromCurrencyIdTxt");\n        });\n    }\n    else {\n        cy.wrap("").as("fromCurrencyIdTxt");\n    }\n});\ncy.wait(1000);\ncy.getByTestAttribute("note")\n    .scrollIntoView()\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.ccNote);\ncy.clickInputtedSearchDropDownList("toCurrencyId", general_settings_data_1.GeneralSettingsData.currency2).then(($toCurrencyId) => {\n    if ($toCurrencyId != null) {\n        cy.wrap($toCurrencyId)\n            .invoke("text")\n            .then((toCurrencyIdTxt) => {\n            cy.log("toCurrencyIdTxt::: " + toCurrencyIdTxt);\n            cy.wrap(toCurrencyIdTxt).as("toCurrencyIdTxt");\n        });\n    }\n    else {\n        cy.wrap("").as("toCurrencyIdTxt");\n    }\n});\n// cy.getByTestAttribute("reversedRate").clear().type(GeneralSettingsData.ccReversedRate);\ncy.getByTestAttribute("fromCurrencyRate")\n    .scrollIntoView()\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.ccFromCurrencyRate);\ncurrency_conversion_1.CurrencyConversion.clickSaveButton();\ncy.wait(2000);\ncy.contains("div[role='dialog']").should("be.visible");*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=fromCurrencyId]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=fromCurrencyId]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:103:0)","diff":null}*false*false
2024-09-04T10:18:21.917Z*Currency Conversion (Edit)*4.Verify Cancelling Editting Currency Conversion*31792**failed*0*true*0**currency_conversion_1.CurrencyConversion.landing();\ncy.wait(1500);\ncy.clickFirstEditActionButton();\ncy.wait(1000);\ncy.clickInputtedSearchDropDownList("toCurrencyId", general_settings_data_1.GeneralSettingsData.currency2).then(($toCurrencyId) => {\n    if ($toCurrencyId != null) {\n        cy.wrap($toCurrencyId)\n            .invoke("text")\n            .then((toCurrencyIdTxt) => {\n            cy.log("toCurrencyIdTxt::: " + toCurrencyIdTxt);\n            cy.wrap(toCurrencyIdTxt).as("toCurrencyIdTxt");\n        });\n    }\n    else {\n        cy.wrap("").as("toCurrencyIdTxt");\n    }\n});\ncy.wait(1000);\ncy.getByTestAttribute("note")\n    .scrollIntoView()\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.ccNote);\ncy.clickInputtedSearchDropDownList("fromCurrencyId", general_settings_data_1.GeneralSettingsData.newCurrencySearch).then(($fromCurrencyId) => {\n    if ($fromCurrencyId != null) {\n        cy.wrap($fromCurrencyId)\n            .invoke("text")\n            .then((fromCurrencyIdTxt) => {\n            cy.log("fromCurrencyIdTxt::: " + fromCurrencyIdTxt);\n            cy.wrap(fromCurrencyIdTxt).as("fromCurrencyIdTxt");\n        });\n    }\n    else {\n        cy.wrap("").as("fromCurrencyIdTxt");\n    }\n});\ncy.wait(1000);\n// cy.getByTestAttribute("reversedRate").clear().type(GeneralSettingsData.ccReversedRate);\ncy.getByTestAttribute("fromCurrencyRate")\n    .scrollIntoView()\n    .clear()\n    .type("1" + general_settings_data_1.GeneralSettingsData.ccFromCurrencyRate);\ncurrency_conversion_1.CurrencyConversion.clickcancelButton();\n// Assertion\ncy.wait(1000);\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.verifyFirstCellInTableNotEqual(1, "1" + general_settings_data_1.GeneralSettingsData.ccFromCurrencyRate);*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=toCurrencyId]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=toCurrencyId]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:103:0)","diff":null}*false*false
2024-09-04T10:18:21.917Z*Currency Conversion (Edit)*5.Verify Validation of the same From and To Currency*26670**failed*0*true*0**currency_conversion_1.CurrencyConversion.landing();\ncy.clickFirstEditActionButton();\ncy.wait(1500);\ncy.clickInputtedSearchDropDownList("fromCurrencyId", general_settings_data_1.GeneralSettingsData.currency2).then(($fromCurrencyId) => {\n    if ($fromCurrencyId != null) {\n        cy.wrap($fromCurrencyId)\n            .invoke("text")\n            .then((fromCurrencyIdTxt) => {\n            cy.log("fromCurrencyIdTxt::: " + fromCurrencyIdTxt);\n            cy.wrap(fromCurrencyIdTxt).as("fromCurrencyIdTxt");\n        });\n    }\n    else {\n        cy.wrap("").as("fromCurrencyIdTxt");\n    }\n});\ncy.wait(1000);\ncy.getByTestAttribute("note")\n    .scrollIntoView()\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.ccNote);\ncy.clickInputtedSearchDropDownList("toCurrencyId", general_settings_data_1.GeneralSettingsData.currency2).then(($toCurrencyId) => {\n    if ($toCurrencyId != null) {\n        cy.wrap($toCurrencyId)\n            .invoke("text")\n            .then((toCurrencyIdTxt) => {\n            cy.log("toCurrencyIdTxt::: " + toCurrencyIdTxt);\n            cy.wrap(toCurrencyIdTxt).as("toCurrencyIdTxt");\n        });\n    }\n    else {\n        cy.wrap("").as("toCurrencyIdTxt");\n    }\n});\ncy.getByTestAttribute("fromCurrencyRate")\n    .scrollIntoView()\n    .clear()\n    .type(general_settings_data_1.GeneralSettingsData.ccFromCurrencyRate);\n// CurrencyConversion.clickSaveButton();\ncy.contains("div", /different/i)\n    .first()\n    .scrollIntoView()\n    .should("be.visible");\ncy.contains("div", /different/i)\n    .last()\n    .scrollIntoView()\n    .should("be.visible");*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=fromCurrencyId]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=fromCurrencyId]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:103:0)","diff":null}*false*false
2024-09-04T10:20:15.978Z*Financial Calender*1.Verify All components are displaying*14611*slow*passed*true*0*0**financial_calender_1.FinancialCallender.landing();\ncy.wait(1500);\nfinancial_calender_1.FinancialCallender.clickAddNewButton();\ncy.verifyLabelText("year", /select year/i);\ncy.verifyLabelText("code", /code/i);\ncy.verifyLabelText("fromDate", /from date/i);\ncy.verifyLabelText("toDate", /to date/i);\ncy.verifyLabelText("name", /name/i);*{}*false*false
2024-09-04T10:20:15.978Z*Financial Calender*2.Verify All the Add Screen has not any casehed data After Landing*13464*slow*passed*true*0*0**financial_calender_1.FinancialCallender.landing();\nfinancial_calender_1.FinancialCallender.clickAddNewButton();\n// Select Year\ncy.get(".p-dropdown-label").should("have.class", "p-dropdown-label-empty");\ncy.get(".p-dropdown-label").should("have.text", " ");\n// Code\ncy.get('[data-testid="code"]').should("be.visible");\ncy.get('[data-testid="code"]').should("be.disabled");\ncy.get('[data-testid="code"]').should("not.be.checked");\n// From Date\ncy.get('input[role="combobox"]').eq(0).should("not.have.value");\n// To Date\ncy.get('input[role="combobox"]').eq(1).should("not.have.value");\n// Name\ncy.get('[data-testid="name"]').should("be.visible");\ncy.get('[data-testid="name"]').should("be.enabled");\ncy.get('[data-testid="name"]').should("not.be.checked");*{}*false*false
2024-09-04T10:20:15.978Z*Financial Calender*3.should display the text of the last item in the readonly input*12166*slow*passed*true*0*0**financial_calender_1.FinancialCallender.landing();\nfinancial_calender_1.FinancialCallender.clickAddNewButton();\nfinancial_calender_1.FinancialCallender.clickSelectYearDropDownList();\n// Open the dropdown\nfinancial_calender_1.FinancialCallender.clickSelectYearDropDownList();\nfinancial_calender_1.FinancialCallender.verifyYearIsDisplayedInDimmedInput();*{}*false*false
2024-09-04T10:20:15.978Z*Financial Calender*4.Verify Submitting new Financial Calender*29185*slow*passed*true*0*0**financial_calender_1.FinancialCallender.landing();\ncy.wait(3000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\nfinancial_calender_1.FinancialCallender.clickAddNewButton();\ncy.wait(1500);\n// Select Year\nfinancial_calender_1.FinancialCallender.clickSelectYearDropDownList();\nfinancial_calender_1.FinancialCallender.clearName();\ncy.contains('span', /required/i).should('be.visible');\nfinancial_calender_1.FinancialCallender.inputName();\ncy.get("@initCount").then((initCount) => {\n    var initCountVal = (0, utils_1.getWrappedNumber)(initCount);\n    if (initCountVal > 0) {\n        cy.log('\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* initCountVal > 0 111111111111111111111111\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*//');\n        financial_calender_1.FinancialCallender.inputFollowingToDate(1);\n    }\n    else {\n        cy.log('\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 22222222222222222222 \*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*//');\n        financial_calender_1.FinancialCallender.inputFollowingToDate(0);\n    }\n});\n// Verify the Presence of the Required Validation\nfinancial_calender_1.FinancialCallender.clickGeneratePeriods();\nfinancial_calender_1.FinancialCallender.clickSaveButton();\n// Assertion\ncy.wait(2500);\ncy.visit(general_settings_data_1.GeneralSettingsData.FinancialCalenderUrl);\ncy.clickContinueAs();\ncy.wait(1500);\ncy.zoomOut();\ncy.increaseScreenItemsMaxCount(100);\ncy.zoomIn();\ncy.wait(1500);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect((0, utils_1.getWrappedNumber)(initCount) + 1).to.equal(finalCount);\n    });\n});*{}*false*false
2024-09-04T10:20:15.978Z*Financial Calender*5.Displaying related data in ascending order based on Date from and Date To columns*21782*slow*passed*true*0*0**financial_calender_1.FinancialCallender.landing();\ncy.wait(3000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\nfinancial_calender_1.FinancialCallender.clickAddNewButton();\ncy.wait(3000);\ncy.get("@initCount").then((initCount) => {\n    var initCountVal = (0, utils_1.getWrappedNumber)(initCount);\n    if (initCountVal > 0) {\n        financial_calender_1.FinancialCallender.inputFollowingToDate(1);\n    }\n    else {\n        financial_calender_1.FinancialCallender.inputFollowingToDate(0);\n    }\n    financial_calender_1.FinancialCallender.clickGeneratePeriods();\n    // Wait for the table to update (adjust timeout as needed)\n    cy.wait(1000);\n    // Verify that the table rows are displayed correctly\n    cy.get('table').should('be.visible');\n    cy.increaseScreenItemsMaxCount(100);\n    cy.get('table').then(($table) => {\n        if ($table.find("tbody").is(":visible")) {\n            cy.wrap($table).find('tbody').then(($tbody) => {\n                if ($tbody.find("tr").is(":visible")) {\n                    cy.wrap($tbody).find('tr').then((rows) => {\n                        const dateFromValues = Cypress.$(rows)\n                            .map((i, row) => (0, utils_1.parseDate)(Cypress.$(row).find('td').eq(3).text().trim(), 'yyyy-mm-dd'))\n                            .get();\n                        const dateToValues = Cypress.$(rows)\n                            .map((i, row) => (0, utils_1.parseDate)(Cypress.$(row).find('td').eq(4).text().trim(), 'yyyy-mm-dd'))\n                            .get();\n                        // Check if both "Date from" and "Date To" columns are in ascending order\n                        expect((0, utils_1.isAscendingOrder)(dateFromValues)).to.be.true;\n                        expect((0, utils_1.isAscendingOrder)(dateToValues)).to.be.true;\n                    });\n                }\n                else {\n                    cy.log("No Any ROW");\n                }\n            });\n        }\n        else {\n            cy.log("The Table has not body");\n        }\n    });\n});*{}*false*false
2024-09-04T10:20:55.118Z*Financial Calander List View*1.Verify all the components are displayed on the Listview*19188*slow*passed*true*0*0**financial_calender_1.FinancialCallender.landing();\ncy.wait(1500);\n// Menu Item Text\ncy.get('span').should('be.visible').should('include', /financial calender/i);\ncy.get("table").then((table) => {\n    // Verify Table Column Headers\n    if (table.find("th").first().is(":visible")) {\n        cy.wrap(table).find("th").eq(0).contains(/code/i).should("be.visible");\n        cy.wrap(table).find("th").eq(1).contains(/name/i).should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(2)\n            .contains(/from date/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(3)\n            .contains(/to date/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(4)\n            .contains(/status/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(5)\n            .contains(/actions/i)\n            .should("be.visible");\n    }\n    else {\n        cy.log("Table Header is not Visible");\n    }\n});*{}*false*false
2024-09-04T10:20:55.118Z*Financial Calander List View*2.should filter the table based on search input in the first two columns*16091*slow*passed*true*0*0**financial_calender_1.FinancialCallender.landing();\ncy.wait(1000);\ncy.verifySearchFunctionality();*{}*false*false
2024-09-04T10:22:20.747Z*Add New Taxs Group*1.Verify all the components are displayed on the Add New Tax Group*16734*slow*passed*true*0*0**TaxsGroup_1.TaxsGroup.landing();\ncy.wait(1500);\nTaxsGroup_1.TaxsGroup.clickAddNewButton();\n// Code Label\ncy.get('label[for="code"]').contains(/code/i).should("be.visible");\n// Code Input\ncy.getByTestAttribute("code").should("be.visible");\n// Name Label\ncy.get('label[for="name"]').contains(/name/i).should("be.visible");\n// Name Input\ncy.getByTestAttribute("name").should("be.visible");\n// Save Button*{}*false*false
2024-09-04T10:22:20.747Z*Add New Taxs Group*2.Verify Displaying Of Required Messsages*19532*slow*passed*true*0*0**TaxsGroup_1.TaxsGroup.landing();\ncy.wait(2000);\nTaxsGroup_1.TaxsGroup.clickAddNewButton();\nTaxsGroup_1.TaxsGroup.submitDialog();\nTaxsGroup_1.TaxsGroup.verifyRequiredMessages("3");\ncy.get(".pop_up_footer").invoke("hide");\nTaxsGroup_1.TaxsGroup.selectCountry("egypt");\nTaxsGroup_1.TaxsGroup.verifyRequiredMessages("2");\nTaxsGroup_1.TaxsGroup.inputCode("123");\nTaxsGroup_1.TaxsGroup.verifyRequiredMessages("1");\nTaxsGroup_1.TaxsGroup.inputName("name");\nTaxsGroup_1.TaxsGroup.verifyInExistenceOfRequiredMessage();*{}*false*false
2024-09-04T10:22:20.747Z*Add New Taxs Group*3.Verify Adding New Taxes Group*21579*slow*passed*true*0*0**TaxsGroup_1.TaxsGroup.landing();\ncy.wait(2000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\nTaxsGroup_1.TaxsGroup.clickAddNewButton();\nTaxsGroup_1.TaxsGroup.inputCode(accounting_data_1.AccountingData.taxesGroupCode);\nTaxsGroup_1.TaxsGroup.inputName(accounting_data_1.AccountingData.taxesGroupName);\ncy.get(".pop_up_footer").invoke("hide");\nTaxsGroup_1.TaxsGroup.selectCountry("egypt");\ncy.get(".pop_up_footer").invoke("css", 'display', 'block');\nTaxsGroup_1.TaxsGroup.submitDialog();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal(parseInt((0, utils_1.trimText)(initCount.toString().trim())) + 1);\n    });\n});\ncy.verifyFirstCellInTable(0, accounting_data_1.AccountingData.taxesGroupCode);\ncy.verifyFirstCellInTable(1, accounting_data_1.AccountingData.taxesGroupName);*{}*false*false
2024-09-04T10:22:20.747Z*Add New Taxs Group*4.Verify canceling Adding New Taxes Group*24245*slow*passed*true*0*0**TaxsGroup_1.TaxsGroup.landing();\ncy.wait(2000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\nTaxsGroup_1.TaxsGroup.clickAddNewButton();\nTaxsGroup_1.TaxsGroup.inputCode(accounting_data_1.AccountingData.taxesGroupCode);\nTaxsGroup_1.TaxsGroup.inputName(accounting_data_1.AccountingData.taxesGroupName);\ncy.get(".pop_up_footer").invoke("hide");\nTaxsGroup_1.TaxsGroup.selectCountry("egypt");\ncy.get(".pop_up_footer").invoke("css", 'display', 'block');\nTaxsGroup_1.TaxsGroup.cancelDialog();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal(parseInt((0, utils_1.trimText)(initCount.toString().trim())));\n    });\n});*{}*false*false
2024-09-04T10:24:41.367Z*Edit New Taxs Group*1.Verify all the components are displayed on the Edit New Tax Group*22289*slow*passed*true*0*0**TaxsGroup_1.TaxsGroup.landing();\ncy.wait(2000);\ncy.clickFirstEditActionButton();\n// Code Label\ncy.get('label[for="code"]').contains(/code/i).should("be.visible");\n// Code Input\ncy.getByTestAttribute("code").should("be.visible");\n// Name Label\ncy.get('label[for="name"]').contains(/name/i).should("be.visible");\n// Name Input\ncy.getByTestAttribute("name").should("be.visible");*{}*false*false
2024-09-04T10:24:41.367Z*Edit New Taxs Group*2.Verify Displaying Of Required Messsages*15493*slow*passed*true*0*0**TaxsGroup_1.TaxsGroup.landing();\ncy.wait(2000);\ncy.clickFirstEditActionButton();\nTaxsGroup_1.TaxsGroup.clearName();\nTaxsGroup_1.TaxsGroup.verifyRequiredMessages("1");\nTaxsGroup_1.TaxsGroup.inputName("name");\nTaxsGroup_1.TaxsGroup.verifyInExistenceOfRequiredMessage();*{}*false*false
2024-09-04T10:24:41.367Z*Edit New Taxs Group*3.Verify Editting New Taxes Group*24320**failed*0*true*0**TaxsGroup_1.TaxsGroup.landing();\ncy.wait(2000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.getLastCellInTableValue(0).then((code1) => {\n    cy.wrap(code1).as("code1");\n});\ncy.getLastCellInTableValue(1).then((name1) => {\n    cy.wrap(name1).as("name1");\n});\ncy.clickFirstEditActionButton();\ncy.hideDialogFooter();\nTaxsGroup_1.TaxsGroup.selectCountry("saud");\ncy.get("@name1").then((name1) => {\n    TaxsGroup_1.TaxsGroup.inputName("Editted_" + (0, utils_1.getWrappedString)(name1));\n});\ncy.displayDialogFooter();\nTaxsGroup_1.TaxsGroup.submitDialog();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal(parseInt((0, utils_1.getWrappedString)(initCount)));\n    });\n});\ncy.get("@code1").then((code1) => {\n    cy.verifyFirstCellInTable(0, (0, utils_1.getWrappedString)(code1));\n});\ncy.get("@name1").then((name1) => {\n    cy.verifyFirstCellInTable(1, "Editted_" + (0, utils_1.getWrappedString)(name1));\n});*{"message":"AssertionError: expected '356' to equal '6900'","estack":"AssertionError: expected '356' to equal '6900'\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:485:0)","diff":"- '356'\n+ '6900'\n"}*false*false
2024-09-04T10:24:41.367Z*Edit New Taxs Group*4.Verify canceling Editting New Taxes Group*28129**failed*0*true*0**TaxsGroup_1.TaxsGroup.landing();\ncy.wait(2000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.getLastCellInTableValue(0).then((code1) => {\n    cy.wrap(code1).as("code1");\n});\ncy.getLastCellInTableValue(1).then((name1) => {\n    cy.wrap(name1).as("name1");\n});\ncy.clickFirstEditActionButton();\ncy.get("@name1").then((name1) => {\n    TaxsGroup_1.TaxsGroup.inputName("Editted_" + (0, utils_1.getWrappedString)(name1));\n});\ncy.get(".pop_up_footer").invoke("hide");\nTaxsGroup_1.TaxsGroup.selectCountry("saud");\ncy.get(".pop_up_footer").invoke("css", 'display', 'block');\nTaxsGroup_1.TaxsGroup.cancelDialog();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal(parseInt((0, utils_1.getWrappedString)(initCount)));\n    });\n});\ncy.get("@code1").then((code1) => {\n    cy.verifyFirstCellInTable(0, (0, utils_1.getWrappedString)(code1));\n});\ncy.get("@name1").then((name1) => {\n    cy.verifyFirstCellInTable(1, (0, utils_1.getWrappedString)(name1));\n});*{"message":"AssertionError: expected '356' to equal '6900'","estack":"AssertionError: expected '356' to equal '6900'\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:485:0)","diff":"- '356'\n+ '6900'\n"}*false*false
2024-09-04T10:26:18.386Z*Taxs Group List View*1.Verify all the components are displayed on the Listview*16459*slow*passed*true*0*0**TaxsGroup_1.TaxsGroup.landing();\ncy.wait(1500);\n// Verify Search Input\ncy.get('input[placeholder="Search"]')\n    .should("be.visible")\n    .should("be.enabled");\ncy.get("table").then((table) => {\n    // Verify Table Column Headers\n    if (table.find("th").first().is(":visible")) {\n        cy.wrap(table).find("th").eq(0).contains(/code/i).should("be.visible");\n        cy.wrap(table).find("th").eq(1).contains(/name/i).should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(2)\n            .contains(/country name/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(3)\n            .contains(/actions/i)\n            .should("be.visible");\n    }\n    else {\n        cy.log("Table Header is not Visible");\n    }\n});*{}*false*false
2024-09-04T10:26:18.386Z*Taxs Group List View*2.should filter the table based on search input in the first two columns*17877**failed*0*true*0**TaxsGroup_1.TaxsGroup.landing();\ncy.wait(2000);\ncy.verifySearchFunctionality();*{"message":"AssertionError: expected 'Editted_Editted_TG_neY' to equal 'Editted_TG_neY'","estack":"AssertionError: expected 'Editted_Editted_TG_neY' to equal 'Editted_TG_neY'\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:485:0)","diff":"- 'Editted_Editted_TG_neY'\n+ 'Editted_TG_neY'\n"}*false*false
2024-09-04T10:26:18.386Z*Taxs Group List View*3.Verify canceling Deleting an Existing Taxes Group*20991*slow*passed*true*0*0**TaxsGroup_1.TaxsGroup.landing();\ncy.wait(2000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.clickFirstDeleteActionButton();\nTaxsGroup_1.TaxsGroup.cancelDeleteAction();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal(parseInt((0, utils_1.trimText)(initCount.toString().trim())));\n    });\n});*{}*false*false
2024-09-04T10:26:18.386Z*Taxs Group List View*4.Verify Deleting an Existing Taxes Group*21531*slow*passed*true*0*0**TaxsGroup_1.TaxsGroup.landing();\ncy.wait(2000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.clickFirstDeleteActionButton();\nTaxsGroup_1.TaxsGroup.confirmDeleteAction();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal(parseInt((0, utils_1.trimText)(initCount.toString().trim())) - 1);\n    });\n});*{}*false*false
2024-09-04T10:27:36.846Z*Add New Taxs Definitions*1.Verify all the components are displayed on the Add New Tax Definitions*15425*slow*passed*true*0*0**Taxs_Definitions_1.TaxsDefinitions.landing();\ncy.wait(1500);\nTaxs_Definitions_1.TaxsDefinitions.clickAddNewButton();\n// cy.contains(".title", /add/i).should("be.visible");\n// Cancel Icon\n// cy.get('div[class="pi pi-times cancel"]').should("be.visible");\n// Code Label\ncy.get('label[for="code"]').contains(/code/i).should("be.visible");\n// Code Input\ncy.getByTestAttribute("code").should("be.visible");\n// Name Label\ncy.get('label[for="name"]').contains(/name/i).should("be.visible");\n// Name Input\ncy.getByTestAttribute("name").should("be.visible");\n// ratio Label\ncy.get('label[for="ratio"]').contains(/ratio/i).should("be.visible");\n// ratio Input\ncy.getByTestAttribute("ratio").should("be.visible");\n// accountId Label\ncy.get('label[for="accountId"]')\n    .scrollIntoView()\n    .contains(/gl account/i)\n    .should("be.visible");\n// accountId Input\ncy.getByTestAttribute("accountId").should("be.visible");\n// taxGroupId Label\ncy.get('label[for="taxGroupId"]')\n    .scrollIntoView()\n    .contains(/tax group/i)\n    .should("be.visible");\n// taxGroupId Input\ncy.getByTestAttribute("taxGroupId").should("be.visible");*{}*false*false
2024-09-04T10:27:36.846Z*Add New Taxs Definitions*2.Verify Displaying Of Required Messsages*15667*slow*passed*true*0*0**Taxs_Definitions_1.TaxsDefinitions.landing();\nTaxs_Definitions_1.TaxsDefinitions.clickAddNewButton();\nTaxs_Definitions_1.TaxsDefinitions.submitDialog();\nTaxs_Definitions_1.TaxsDefinitions.verifyRequiredMessages("5");\nTaxs_Definitions_1.TaxsDefinitions.inputCode("123");\nTaxs_Definitions_1.TaxsDefinitions.verifyRequiredMessages("4");\nTaxs_Definitions_1.TaxsDefinitions.inputName("name");\nTaxs_Definitions_1.TaxsDefinitions.verifyRequiredMessages("3");\nTaxs_Definitions_1.TaxsDefinitions.inputRatio(accounting_data_1.AccountingData.taxesDefinitionsRatio);\nTaxs_Definitions_1.TaxsDefinitions.verifyRequiredMessages("2");\nTaxs_Definitions_1.TaxsDefinitions.selectLastAccountId();\nTaxs_Definitions_1.TaxsDefinitions.verifyRequiredMessages("1");\nTaxs_Definitions_1.TaxsDefinitions.verifySlectTaxGroupId();*{}*false*false
2024-09-04T10:27:36.846Z*Add New Taxs Definitions*3.Verify canceling Adding New Taxes Definitions*19101*slow*passed*true*0*0**Taxs_Definitions_1.TaxsDefinitions.landing();\ncy.wait(1000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\nTaxs_Definitions_1.TaxsDefinitions.clickAddNewButton();\nTaxs_Definitions_1.TaxsDefinitions.inputCode(accounting_data_1.AccountingData.taxesDefinitionsCode);\nTaxs_Definitions_1.TaxsDefinitions.inputName(accounting_data_1.AccountingData.taxesDefinitionsName);\nTaxs_Definitions_1.TaxsDefinitions.inputRatio(accounting_data_1.AccountingData.taxesDefinitionsRatio);\nTaxs_Definitions_1.TaxsDefinitions.selectLastAccountId();\nTaxs_Definitions_1.TaxsDefinitions.selectLastTaxGroupId();\nTaxs_Definitions_1.TaxsDefinitions.cancelDialog();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal(parseInt((0, utils_1.trimText)(initCount.toString().trim())));\n    });\n});*{}*false*false
2024-09-04T10:27:36.846Z*Add New Taxs Definitions*4.Verify Adding New Taxes Definitions*23843*slow*passed*true*0*0**Taxs_Definitions_1.TaxsDefinitions.landing();\ncy.wait(1000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\nTaxs_Definitions_1.TaxsDefinitions.clickAddNewButton();\nTaxs_Definitions_1.TaxsDefinitions.inputCode(accounting_data_1.AccountingData.taxesDefinitionsCode);\nTaxs_Definitions_1.TaxsDefinitions.inputName(accounting_data_1.AccountingData.taxesDefinitionsName);\nTaxs_Definitions_1.TaxsDefinitions.inputRatio(accounting_data_1.AccountingData.taxesDefinitionsRatio);\nTaxs_Definitions_1.TaxsDefinitions.selectLastAccountId();\nTaxs_Definitions_1.TaxsDefinitions.selectLastTaxGroupId();\nTaxs_Definitions_1.TaxsDefinitions.submitDialog();\nTaxs_Definitions_1.TaxsDefinitions.assertSuccessfulSubmission(false);\n// cy.wait(1000);\n// cy.get("@initCount").then((initCount) => {\n//   cy.increaseScreenItemsMaxCount(100); cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n//     expect(finalCount).to.equal(\n//       parseInt(trimText(initCount.toString().trim())) + 1\n//     );\n//   });\n// });\n// cy.verifyFirstCellInTable(0, AccountingData.taxesDefinitionsCode);\n// cy.verifyFirstCellInTable(1, AccountingData.taxesDefinitionsName);*{}*false*false
2024-09-04T10:29:13.825Z*Edit Existing Taxs Definitions*1.Verify all the components are displayed on the Edit Existing Tax Definitions*17154*slow*passed*true*0*0**Taxs_Definitions_1.TaxsDefinitions.landing();\ncy.wait(1500);\ncy.clickFirstEditActionButton();\n// Code Label\ncy.get('label[for="code"]').contains(/code/i).should("be.visible");\n// Code Input\ncy.getByTestAttribute("code").should("be.visible");\n// Name Label\ncy.get('label[for="name"]').contains(/name/i).should("be.visible");\n// Name Input\ncy.getByTestAttribute("name").should("be.visible");\n// ratio Label\ncy.get('label[for="ratio"]').contains(/ratio/i).should("be.visible");\n// ratio Input\ncy.getByTestAttribute("ratio").should("be.visible");\n// accountId Label\ncy.get('label[for="accountId"]')\n    .scrollIntoView()\n    .contains(/gl account/i)\n    .should("be.visible");\n// accountId Input\ncy.getByTestAttribute("accountId").should("be.visible");\n// taxGroupId Label\ncy.get('label[for="taxGroupId"]')\n    .scrollIntoView()\n    .contains(/tax group/i)\n    .should("be.visible");\n// taxGroupId Input*{}*false*false
2024-09-04T10:29:13.825Z*Edit Existing Taxs Definitions*2.Verify Displaying Of Required Messsages*17803*slow*passed*true*0*0**Taxs_Definitions_1.TaxsDefinitions.landing();\ncy.wait(1500);\ncy.clickFirstEditActionButton();\nTaxs_Definitions_1.TaxsDefinitions.clearName();\nTaxs_Definitions_1.TaxsDefinitions.verifyRequiredMessages("1");\nTaxs_Definitions_1.TaxsDefinitions.inputName("name");\nTaxs_Definitions_1.TaxsDefinitions.verifyAbsenceRequiredMessages();\nTaxs_Definitions_1.TaxsDefinitions.clearRatio();\nTaxs_Definitions_1.TaxsDefinitions.verifyRequiredMessages("1");\nTaxs_Definitions_1.TaxsDefinitions.inputRatio(accounting_data_1.AccountingData.taxesDefinitionsRatio);\nTaxs_Definitions_1.TaxsDefinitions.verifyAbsenceRequiredMessages();*{}*false*false
2024-09-04T10:29:13.825Z*Edit Existing Taxs Definitions*3.Verify canceling Editting Existing Taxes Definitions*20977*slow*passed*true*0*0**Taxs_Definitions_1.TaxsDefinitions.landing();\ncy.wait(1500);\nTaxs_Definitions_1.TaxsDefinitions.preActions();\ncy.clickFirstEditActionButton();\n// TaxsDefinitions.inputCode(AccountingData.taxesDefinitionsCode);\nTaxs_Definitions_1.TaxsDefinitions.inputName(accounting_data_1.AccountingData.taxesDefinitionsName);\nTaxs_Definitions_1.TaxsDefinitions.inputRatio(accounting_data_1.AccountingData.taxesDefinitionsRatio);\nTaxs_Definitions_1.TaxsDefinitions.selectFirstAccountId();\nTaxs_Definitions_1.TaxsDefinitions.selectLastTaxGroupId();\nTaxs_Definitions_1.TaxsDefinitions.cancelDialog();\nTaxs_Definitions_1.TaxsDefinitions.assertNotSaving();*{}*false*false
2024-09-04T10:29:13.825Z*Edit Existing Taxs Definitions*4.Verify Editting Existing Taxes Definitions*20669*slow*passed*true*0*0**Taxs_Definitions_1.TaxsDefinitions.landing();\ncy.wait(1500);\nTaxs_Definitions_1.TaxsDefinitions.preActions();\ncy.clickFirstEditActionButton();\n// TaxsDefinitions.inputCode(AccountingData.taxesDefinitionsCode);\nTaxs_Definitions_1.TaxsDefinitions.inputName(accounting_data_1.AccountingData.taxesDefinitionsName);\nTaxs_Definitions_1.TaxsDefinitions.inputRatio(accounting_data_1.AccountingData.taxesDefinitionsRatio);\nTaxs_Definitions_1.TaxsDefinitions.selectFirstAccountId();\nTaxs_Definitions_1.TaxsDefinitions.selectLastTaxGroupId();\nTaxs_Definitions_1.TaxsDefinitions.submitDialog();\nTaxs_Definitions_1.TaxsDefinitions.assertSuccessfulSubmission(true);*{}*false*false
2024-09-04T10:29:13.825Z*Edit Existing Taxs Definitions*5.Verify That the  Editting Dialog has the correct Data after Landing*16098*slow*passed*true*0*0**Taxs_Definitions_1.TaxsDefinitions.landing();\ncy.wait(1500);\ncy.getFirstCellInTableValue(0).then((code1) => {\n    cy.wrap(code1).as("code1");\n});\ncy.getFirstCellInTableValue(1).then((name1) => {\n    cy.wrap(name1).as("name1");\n});\ncy.getFirstCellInTableValue(2).then((ratio1) => {\n    cy.wrap(ratio1).as("ratio1");\n});\ncy.getFirstCellInTableValue(3).then((account1) => {\n    cy.wrap(account1).as("account1");\n});\ncy.getFirstCellInTableValue(4).then((taxGroup1) => {\n    cy.wrap(taxGroup1).as("taxGroup1");\n});\ncy.clickFirstEditActionButton();\ncy.get("@code1").then((code1) => {\n    cy.getByTestAttribute("code")\n        .invoke("val")\n        .then((codeText) => {\n        expect(codeText).to.equal((0, utils_1.getWrappedString)(code1));\n    });\n});\ncy.get("@name1").then((name1) => {\n    cy.getByTestAttribute("name")\n        .invoke("val")\n        .then((nameText) => {\n        expect(nameText).to.equal((0, utils_1.removeSpacesBetween)((0, utils_1.getWrappedString)(name1)));\n    });\n});\ncy.get("@ratio1").then((ratio1) => {\n    cy.getByTestAttribute("ratio")\n        .invoke("val")\n        .then((ratioTxt) => {\n        expect(ratioTxt).to.equal((0, utils_1.removeSpacesBetween)((0, utils_1.getWrappedString)(ratio1)));\n    });\n});\ncy.get('span[role="combobox"]').eq(1).scrollIntoView();\ncy.get("@account1").then((account1) => {\n    var expextedTxt = (0, utils_1.removeSpacesBetween)((0, utils_1.getWrappedString)(account1));\n    cy.get('span[role="combobox"]')\n        .eq(1)\n        .invoke('attr', 'aria-label')\n        .then((ariaLabel) => {\n        expect((0, utils_1.removeSpacesBetween)(ariaLabel)).to.equal(expextedTxt); // Replace 'expected value' with the value you expect\n    });\n});\ncy.get('span[role="combobox"]').eq(2).scrollIntoView();\ncy.get("@taxGroup1").then((taxGroup1) => {\n    var expextedTxt = (0, utils_1.removeSpacesBetween)((0, utils_1.getWrappedString)(taxGroup1));\n    cy.get('span[role="combobox"]')\n        .eq(2)\n        .should("have.attr", "aria-label", expextedTxt);\n});*{}*false*false
2024-09-04T10:30:51.251Z*Taxs Definitions List View*1.Verify all the Column Headers are displayed on the Listview*16907*slow*passed*true*0*0**Taxs_Definitions_1.TaxsDefinitions.landing();\ncy.wait(1500);\ncy.get("table").then((table) => {\n    // Verify Table Column Headers\n    if (table.find("th").first().is(":visible")) {\n        cy.wrap(table).find("th").eq(0).contains(/id/i).should("be.visible");\n        cy.wrap(table).find("th").eq(1).contains(/name/i).should("be.visible");\n        cy.wrap(table).find("th").eq(2).contains(/ratio/i).should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(3)\n            .contains(/account/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(4)\n            .contains(/tax group/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(5)\n            .contains(/actions/i)\n            .should("be.visible");\n    }\n    else {\n        cy.log("Table Header is not Visible");\n    }\n});*{}*false*false
2024-09-04T10:30:51.251Z*Taxs Definitions List View*2.should filter the table based on search input in the first two columns*17765*slow*passed*true*0*0**Taxs_Definitions_1.TaxsDefinitions.landing();\ncy.wait(1000);\ncy.verifySearchFunctionality();*{}*false*false
2024-09-04T10:30:51.251Z*Taxs Definitions List View*3.Verify canceling Deleting an Existing Taxes Definitions*19036*slow*passed*true*0*0**Taxs_Definitions_1.TaxsDefinitions.landing();\ncy.wait(500);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.clickFirstDeleteActionButton();\nTaxs_Definitions_1.TaxsDefinitions.cancelDeleteAction();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal(parseInt((0, utils_1.trimText)(initCount.toString().trim())));\n    });\n});*{}*false*false
2024-09-04T10:30:51.251Z*Taxs Definitions List View*4.Verify Deleting an Existing Taxes Definitions*19858**failed*0*true*0**Taxs_Definitions_1.TaxsDefinitions.landing();\ncy.wait(500);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.clickFirstDeleteActionButton();\nTaxs_Definitions_1.TaxsDefinitions.confirmDeleteAction();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal(parseInt((0, utils_1.trimText)(initCount.toString().trim())) - 1);\n    });\n});*{"message":"AssertionError: expected 6 to equal 5","estack":"AssertionError: expected 6 to equal 5\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Accounting/Taxs Definition/tests/Taxes_definitions_listview.cy.ts:75:0)","diff":"- 6\n+ 5\n"}*false*false
2024-09-04T10:33:16.994Z*Configurations of Charts of Accounts*1.Verify Submitting Add A New Line *28142*slow*passed*true*0*0**const c = (0, utils_1.getRandomNumber)(10, 100);\ncharts_of_accounts_1.ChartOfAccounts.landing();\ncy.wait(1500);\n_0_configuration_1.ChartOfAccountsConfigurations.clickConfigurationButtonOnDisplayScreen();\ncy.wait(1000);\ncy.get(".pop_up_footer").invoke("hide");\ncy.get("tbody").find("tr").last().scrollIntoView();\ncy.get("tbody").find("tr").last().scrollIntoView();\ncy.get("tbody")\n    .find("tr")\n    .its("length")\n    .then((linesCountInit) => {\n    cy.wrap(linesCountInit).as("linesCountInit");\n});\n_0_configuration_1.ChartOfAccountsConfigurations.clickAddNewLine();\ncy.get("tbody").then(($tbody) => {\n    if ($tbody.find("tr").is(":visible")) {\n        cy.wait(500);\n        cy.wrap($tbody).find("tr").last().scrollIntoView().should("be.visible");\n        cy.wrap($tbody).find("tr").last().find("td").eq(0).click();\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(0)\n            .find("input")\n            .clear()\n            .type("" + c);\n        cy.wrap($tbody).find("tr").last().find("td").eq(1).click();\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(1)\n            .find("input")\n            .clear()\n            .type("Level " + c);\n        cy.wrap($tbody).find("tr").last().find("td").eq(2).click();\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(2)\n            .find("input")\n            .clear()\n            .type("" + c);\n    }\n});\ncy.get(".pop_up_footer").invoke("css", "display", "block");\n_0_configuration_1.ChartOfAccountsConfigurations.clickSaveButton();\ncy.wait(1000);\n_0_configuration_1.ChartOfAccountsConfigurations.clickConfigurationButtonOnDisplayScreen();\ncy.wait(1000);\ncy.get("tbody").find("tr").last().scrollIntoView();\ncy.get("@linesCountInit").then((linesCountInit) => {\n    cy.get(".pop_up_footer").invoke("hide");\n    cy.wait(1000);\n    cy.get("tbody").find("tr").last().scrollIntoView();\n    cy.get("tbody")\n        .find("tr")\n        .its("length")\n        .then((linesCountFinal) => {\n        expect(linesCountFinal).to.equal(parseInt((0, utils_1.trimText)(linesCountInit.toString().trim())) + 1);\n    });\n});*{}*false*false
2024-09-04T10:33:16.994Z*Configurations of Charts of Accounts*2.Verify cancel Add New Line *19654*slow*passed*true*0*0**const c = (0, utils_1.getRandomNumber)(10, 100);\ncharts_of_accounts_1.ChartOfAccounts.landing();\n_0_configuration_1.ChartOfAccountsConfigurations.clickConfigurationButtonOnDisplayScreen();\ncy.wait(1000);\ncy.get(".pop_up_footer").invoke("hide");\ncy.get("tbody").find("tr").last().scrollIntoView();\ncy.get("tbody").find("tr").last().scrollIntoView();\ncy.get("tbody")\n    .find("tr")\n    .its("length")\n    .then((linesCountInit) => {\n    cy.wrap(linesCountInit).as("linesCountInit");\n});\n_0_configuration_1.ChartOfAccountsConfigurations.clickAddNewLine();\ncy.get("tbody").then(($tbody) => {\n    if ($tbody.find("tr").is(":visible")) {\n        cy.wait(500);\n        cy.wrap($tbody).find("tr").last().scrollIntoView().should("be.visible");\n        cy.wrap($tbody).find("tr").last().find("td").eq(0).click();\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(0)\n            .find("input")\n            .clear()\n            .type("" + c);\n        cy.wrap($tbody).find("tr").last().find("td").eq(1).click();\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(1)\n            .find("input")\n            .clear()\n            .type("Level " + c);\n        cy.wrap($tbody).find("tr").last().find("td").eq(2).click();\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(2)\n            .find("input")\n            .clear()\n            .type("" + c);\n    }\n});\n_0_configuration_1.ChartOfAccountsConfigurations.clickcancelButton();\ncy.wait(1000);\n_0_configuration_1.ChartOfAccountsConfigurations.clickConfigurationButtonOnDisplayScreen();\ncy.wait(1000);\ncy.get("tbody").find("tr").last().scrollIntoView();\ncy.get("@linesCountInit").then((linesCountInit) => {\n    cy.get(".pop_up_footer").invoke("hide");\n    cy.wait(1000);\n    cy.get("tbody").find("tr").last().scrollIntoView();\n    cy.get("tbody")\n        .find("tr")\n        .its("length")\n        .then((linesCountFinal) => {\n        expect(linesCountFinal).to.equal(parseInt((0, utils_1.trimText)(linesCountInit.toString().trim())));\n    });\n});*{}*false*false
2024-09-04T10:33:16.994Z*Configurations of Charts of Accounts*3.Verify Submitting Add multiple New Lines *35329*slow*passed*true*0*0**const c = (0, utils_1.getRandomNumber)(10, 100);\ncharts_of_accounts_1.ChartOfAccounts.landing();\n_0_configuration_1.ChartOfAccountsConfigurations.clickConfigurationButtonOnDisplayScreen();\ncy.wait(1000);\ncy.get(".pop_up_footer").invoke("hide");\ncy.get("tbody").find("tr").last().scrollIntoView();\ncy.get("tbody").find("tr").last().scrollIntoView();\ncy.get("tbody")\n    .find("tr")\n    .its("length")\n    .then((linesCountInit) => {\n    cy.wrap(linesCountInit).as("linesCountInit");\n});\nfor (var i = 0; i < 5; i++) {\n    var m = c + i;\n    _0_configuration_1.ChartOfAccountsConfigurations.clickAddNewLine();\n    cy.get("tbody").then(($tbody) => {\n        if ($tbody.find("tr").is(":visible")) {\n            cy.wait(500);\n            cy.wrap($tbody)\n                .find("tr")\n                .last()\n                .scrollIntoView()\n                .should("be.visible");\n            cy.wrap($tbody).find("tr").last().find("td").eq(0).click();\n            cy.wrap($tbody)\n                .find("tr")\n                .last()\n                .find("td")\n                .eq(0)\n                .find("input")\n                .clear()\n                .type("" + m);\n            cy.wrap($tbody).find("tr").last().find("td").eq(1).click();\n            cy.wrap($tbody)\n                .find("tr")\n                .last()\n                .find("td")\n                .eq(1)\n                .find("input")\n                .clear()\n                .type("Level " + m);\n            cy.wrap($tbody).find("tr").last().find("td").eq(2).click();\n            cy.wrap($tbody)\n                .find("tr")\n                .last()\n                .find("td")\n                .eq(2)\n                .find("input")\n                .clear()\n                .type("" + m);\n        }\n    });\n}\ncy.get(".pop_up_footer").invoke("css", "display", "block");\n_0_configuration_1.ChartOfAccountsConfigurations.clickSaveButton();\ncy.wait(1000);\n_0_configuration_1.ChartOfAccountsConfigurations.clickConfigurationButtonOnDisplayScreen();\ncy.wait(1000);\ncy.get("tbody").find("tr").last().scrollIntoView();\ncy.get("@linesCountInit").then((linesCountInit) => {\n    cy.get(".pop_up_footer").invoke("hide");\n    cy.wait(1000);\n    cy.get("tbody").find("tr").last().scrollIntoView();\n    cy.get("tbody")\n        .find("tr")\n        .its("length")\n        .then((linesCountFinal) => {\n        expect(linesCountFinal).to.equal(parseInt((0, utils_1.trimText)(linesCountInit.toString().trim())) + 5);\n    });\n});*{}*false*false
2024-09-04T10:33:16.994Z*Configurations of Charts of Accounts*4.Verify All Components are displaying in their correct states*12467*slow*passed*true*0*0**charts_of_accounts_1.ChartOfAccounts.landing();\n_0_configuration_1.ChartOfAccountsConfigurations.clickConfigurationButtonOnDisplayScreen();\n// Verify the main Headers\ncy.contains(".add_line", /add new line/i).should("be.visible");\ncy.get(".add_line > .icon")\n    .should("be.visible")\n    .should("have.class", "fa-plus");\n// Verify the Column Headers\ncy.get(".p-datatable-thead > .ng-star-inserted > :nth-child(1)")\n    .should("be.visible")\n    .should("have.text", "level Number");\ncy.get(".p-datatable-thead > .ng-star-inserted > :nth-child(2)")\n    .should("be.visible")\n    .should("have.text", "level Name");\ncy.get(".p-datatable-thead > .ng-star-inserted > :nth-child(3)")\n    .should("be.visible")\n    .should("have.text", "Number Of Digits");\ncy.get("tbody").then(($tbody) => {\n    if ($tbody.find("tr").is(":visible")) {\n        for (var i = 0; i < 5; i++) {\n            var d = i == 4 ? 4 : i + 1;\n            cy.wait(500);\n            cy.wrap($tbody)\n                .find("tr")\n                .eq(i)\n                .find("td")\n                .eq(0)\n                .should("be.visible")\n                .should("have.text", " " + (i + 1) + " ");\n            cy.wrap($tbody)\n                .find("tr")\n                .eq(i)\n                .find("td")\n                .eq(1)\n                .should("be.visible")\n                .should("have.text", " Level" + " " + (i + 1) + " ");\n            cy.wrap($tbody)\n                .find("tr")\n                .eq(i)\n                .find("td")\n                .eq(2)\n                .should("be.visible")\n                .should("have.text", " " + d + " ");\n        }\n    }\n});\ncy.getByTestAttribute("cancel").scrollIntoView();\ncy.getByTestAttribute("cancel").scrollIntoView().click();*{}*false*false
2024-09-04T10:33:16.994Z*Configurations of Charts of Accounts*5.Verify that he System can edit the Level that is not used in accounts these are parents or enters in Transaction*22640*slow*passed*true*0*0**const c = (0, utils_1.getRandomNumber)(10, 100);\nconst l = "Editted Level " + c;\nconst v = c + 1;\ncharts_of_accounts_1.ChartOfAccounts.landing();\n_0_configuration_1.ChartOfAccountsConfigurations.clickConfigurationButtonOnDisplayScreen();\ncy.wait(1000);\ncy.get("tbody").find("tr").last().scrollIntoView();\ncy.get("tbody").then(($tbody) => {\n    if ($tbody.find("tr").is(":visible")) {\n        cy.wait(500);\n        cy.wrap($tbody).find("tr").last().scrollIntoView().should("be.visible");\n        cy.wrap($tbody).find("tr").last().scrollIntoView().should("be.visible");\n        cy.wrap($tbody).find("tr").last().find("td").eq(0).click();\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(0)\n            .find("input")\n            .clear()\n            .type("" + c);\n        cy.wrap($tbody).find("tr").last().find("td").eq(1).click();\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(1)\n            .find("input")\n            .clear()\n            .type(l);\n        cy.wrap($tbody).find("tr").last().find("td").eq(2).click();\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(2)\n            .find("input")\n            .clear()\n            .type("" + v);\n    }\n});\ncy.get(".pop_up_footer").invoke("css", "display", "block");\n_0_configuration_1.ChartOfAccountsConfigurations.clickSaveButton();\ncy.wait(1000);\n_0_configuration_1.ChartOfAccountsConfigurations.clickConfigurationButtonOnDisplayScreen();\ncy.wait(1000);\ncy.get("tbody").find("tr").last().scrollIntoView();\ncy.get(".pop_up_footer").invoke("hide");\ncy.get("tbody").then(($tbody) => {\n    if ($tbody.find("tr").is(":visible")) {\n        cy.wait(500);\n        cy.wrap($tbody).find("tr").last().scrollIntoView().should("be.visible");\n        cy.wrap($tbody).find("tr").last().scrollIntoView().should("be.visible");\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(0)\n            .find("p-celleditor")\n            .invoke("text")\n            .then((tdTxt1) => {\n            expect(tdTxt1).to.contain(c.toString());\n        });\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(1)\n            .find("p-celleditor")\n            .invoke("text")\n            .then((tdTxt2) => {\n            expect(tdTxt2).to.contain(l.toString());\n        });\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(2)\n            .find("p-celleditor")\n            .invoke("text")\n            .then((tdTxt3) => {\n            expect(tdTxt3).to.contain(v.toString());\n        });\n    }\n});*{}*false*false
2024-09-04T10:33:16.994Z*Configurations of Charts of Accounts*6.Verify that he System prevents editting the Level that is used in accounts these are parents or enters in Transaction*22866*slow*passed*true*0*0**const c = (0, utils_1.getRandomNumber)(10, 100);\nconst l = "Editted Level " + c;\nconst v = c + 1;\ncharts_of_accounts_1.ChartOfAccounts.landing();\n_0_configuration_1.ChartOfAccountsConfigurations.clickConfigurationButtonOnDisplayScreen();\ncy.get("tbody").then(($tbody) => {\n    if ($tbody.find("tr").is(":visible")) {\n        cy.wait(500);\n        cy.wrap($tbody)\n            .find("tr")\n            .first()\n            .scrollIntoView()\n            .should("be.visible");\n        cy.wrap($tbody).find("tr").first().find("td").eq(0).click();\n        cy.wrap($tbody)\n            .find("tr")\n            .first()\n            .find("td")\n            .eq(0)\n            .find("input")\n            .clear()\n            .type("" + c);\n        cy.wrap($tbody).find("tr").first().find("td").eq(1).click();\n        cy.wrap($tbody)\n            .find("tr")\n            .first()\n            .find("td")\n            .eq(1)\n            .find("input")\n            .clear()\n            .type(l);\n        cy.wrap($tbody).find("tr").first().find("td").eq(2).click();\n        cy.wrap($tbody)\n            .find("tr")\n            .first()\n            .find("td")\n            .eq(2)\n            .find("input")\n            .clear()\n            .type("" + v);\n    }\n});\ncy.get(".pop_up_footer").invoke("css", "display", "block");\n_0_configuration_1.ChartOfAccountsConfigurations.clickSaveButton();\ncy.wait(1000);\n_0_configuration_1.ChartOfAccountsConfigurations.clickConfigurationButtonOnDisplayScreen();\ncy.get(".pop_up_footer").invoke("hide");\ncy.get("tbody").then(($tbody) => {\n    if ($tbody.find("tr").is(":visible")) {\n        cy.wait(500);\n        cy.wrap($tbody).find("tr").last().scrollIntoView().should("be.visible");\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(0)\n            .find("p-celleditor")\n            .invoke("text")\n            .then((tdTxt1) => {\n            expect(tdTxt1).not.to.contain(c.toString());\n        });\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(1)\n            .find("p-celleditor")\n            .invoke("text")\n            .then((tdTxt2) => {\n            expect(tdTxt2).not.to.contain(l.toString());\n        });\n        cy.wrap($tbody)\n            .find("tr")\n            .last()\n            .find("td")\n            .eq(2)\n            .find("p-celleditor")\n            .invoke("text")\n            .then((tdTxt3) => {\n            expect(tdTxt3).not.to.contain(v.toString());\n        });\n    }\n});*{}*false*false
2024-09-04T10:35:01.976Z*Adding Chart of Account*1.Verify All Components are displaying in their correct states*17399*slow*passed*true*0*0**charts_of_accounts_1.ChartOfAccounts.landing();\ncy.wait(1500);\nadding_account_screen_1.AddingAccountScreen.clickAddNewButton();\n// Verify Labels\ncy.contains('[data-pc-section="legendtitle"]', "Account").should("be.visible");\ncy.contains('label[for="name"]', "Name").should("be.visible");\ncy.contains('label[for="natureId"]', "Account Nature").should("be.visible");\ncy.contains('label[for="accountSectionId"]', "Account Section").should("be.visible");\ncy.contains('label[for="accountTypeId"]', "Account Type").should("be.visible");\ncy.contains('label[for="tags"]', "Tags").should("be.visible");\ncy.contains('label[for="hasNoChild"]', "Details")\n    .scrollIntoView()\n    .should("be.visible");\ncy.contains('[data-pc-section="legendtitle"]', "Cost Center Configuration").should("not.exist");\nadding_account_screen_1.AddingAccountScreen.clickIsDetail();\ncy.contains('[data-pc-section="legendtitle"]', "Cost Center Configuration")\n    .scrollIntoView()\n    .should("be.visible");\ncy.contains('label[for="1"]', "Mandatory")\n    .scrollIntoView()\n    .should("be.visible");\ncy.contains('label[for="2"]', "Optional")\n    .scrollIntoView()\n    .should("be.visible");\ncy.contains('label[for="3"]', "Not Allow")\n    .scrollIntoView()\n    .should("be.visible");\ncy.contains('[data-pc-section="legendtitle"]', "Account Activation")\n    .scrollIntoView()\n    .should("be.visible");\ncy.contains('label[for="Active"]', "Active")\n    .scrollIntoView()\n    .should("be.visible");\ncy.contains('label[for="Inactive"]', "Inactive")\n    .scrollIntoView()\n    .should("be.visible");\ncy.getByTestAttribute("save")\n    .contains(/save/i)\n    .scrollIntoView()\n    .should("be.visible");\n// Verift the name Text Field\ncy.get('input[class="p-inputtext p-component p-element ng-star-inserted"]').should("have.length", 1);\ncy.get('span[class="p-element p-dropdown-label p-inputtext p-dropdown-label-empty ng-star-inserted"]')\n    .eq(1)\n    .click();\n// Verify The Visibility of One MultiSelect "Tags"\ncy.get('div[class="p-element p-multiselect-label-container"]').should("have.length", 1);\ncy.get(".p-inputswitch-slider").should("be.visible");\ncy.get("#Active").should("exist");\ncy.get("#Inactive").should("exist");\ncy.get(".p-radiobutton > .p-radiobutton-box").should("have.length", 6);\ncy.getByTestAttribute("save")\n    .contains(/save/i)\n    .scrollIntoView()\n    .should("be.visible");*{}*false*false
2024-09-04T10:35:01.976Z*Adding Chart of Account*2.Verify Adding new Parent Chart of Account HAS PARENT*28013*slow*passed*true*0*0**charts_of_accounts_1.ChartOfAccounts.landing();\ncy.wait(1500);\nadding_account_screen_1.AddingAccountScreen.clickAddNewButton();\ncy.getFirstItemInDropDownList("natureId").then(($natureId) => {\n    cy.wrap($natureId)\n        .invoke("text")\n        .then((natureTxt) => {\n        cy.log("natureTxt natureTxt natureTxt::: " + natureTxt);\n        cy.wrap(natureTxt).as("natureTxt");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.inputName(accounting_data_1.AccountingData.testParentAccountAddedd);\ncy.getLastItemInDropDownList("accountSectionId").then(($accountSectionId) => {\n    cy.wrap($accountSectionId)\n        .invoke("text")\n        .then((sectionTxt) => {\n        cy.log("sectionTxt::: " + sectionTxt);\n        cy.wrap(sectionTxt).as("sectionTxt");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.inputName(accounting_data_1.AccountingData.testParentAccountAddedd);\ncy.getLastItemInDropDownList("parentId").then(($parentId) => {\n    cy.wrap($parentId)\n        .invoke("text")\n        .then((parentTxt) => {\n        cy.log("parentTxt::: " + parentTxt);\n        cy.wrap(parentTxt).as("parentTxt");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.inputName(accounting_data_1.AccountingData.testParentAccountAddedd);\ncy.getFirstItemInDropDownList("accountTypeId").then(($accountTypeId) => {\n    cy.wrap($accountTypeId)\n        .invoke("text")\n        .then((typeTxt) => {\n        cy.log("typeTxt::: " + typeTxt);\n        cy.wrap(typeTxt).as("typeTxt");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.selectTags();\nadding_account_screen_1.AddingAccountScreen.checkPeriodicActiveAccountActivation();\nadding_account_screen_1.AddingAccountScreen.clickSaveButton();\ncy.wait(2000);\ncharts_of_accounts_1.ChartOfAccounts.SearchAnTreeAccount(accounting_data_1.AccountingData.testParentAccountAddedd);\ncy.get('div[class="description"]').last().scrollIntoView().click();\ncy.wait(1000);\ncy.verifyPlaceholderText(2, accounting_data_1.AccountingData.testParentAccountAddedd);\ncy.wait(1000);\ncy.get("@natureTxt").then((natureTxt) => {\n    cy.verifyPlaceholderText(5, (0, utils_1.getWrappedString)(natureTxt));\n});\ncy.get("@sectionTxt").then((sectionTxt) => {\n    cy.verifyPlaceholderText(6, (0, utils_1.getWrappedString)(sectionTxt));\n});\ncy.get("@parentTxt").then((parentTxt) => {\n    cy.verifyPlaceholderText(3, (0, utils_1.getWrappedString)(parentTxt));\n});\ncy.get("@typeTxt").then((typeTxt) => {\n    cy.verifyPlaceholderText(7, (0, utils_1.getWrappedString)(typeTxt));\n});*{}*false*false
2024-09-04T10:35:01.976Z*Adding Chart of Account*3.Verify Adding new Parent Chart of Account WITHOUT PARENT*24820*slow*passed*true*0*0**charts_of_accounts_1.ChartOfAccounts.landing();\ncy.wait(1500);\nadding_account_screen_1.AddingAccountScreen.clickAddNewButton();\ncy.getFirstItemInDropDownList("natureId").then(($natureId) => {\n    cy.wrap($natureId)\n        .invoke("text")\n        .then((natureTxt) => {\n        cy.log("natureTxt natureTxt natureTxt::: " + natureTxt);\n        cy.wrap(natureTxt).as("natureTxt");\n    });\n});\ncy.getLastItemInDropDownList("accountSectionId").then(($accountSectionId) => {\n    cy.wrap($accountSectionId)\n        .invoke("text")\n        .then((sectionTxt) => {\n        cy.log("sectionTxt::: " + sectionTxt);\n        cy.wrap(sectionTxt).as("sectionTxt");\n    });\n});\ncy.getLastItemInDropDownList("parentId").then(($parentId) => {\n    cy.wrap($parentId)\n        .invoke("text")\n        .then((parentTxt) => {\n        cy.log("parentTxt::: " + parentTxt);\n        cy.wrap(parentTxt).as("parentTxt");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.inputName(accounting_data_1.AccountingData.testParentAccountEditted);\ncy.getFirstItemInDropDownList("accountTypeId").then(($accountTypeId) => {\n    cy.wrap($accountTypeId)\n        .invoke("text")\n        .then((typeTxt) => {\n        cy.log("typeTxt::: " + typeTxt);\n        cy.wrap(typeTxt).as("typeTxt");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.selectTags();\nadding_account_screen_1.AddingAccountScreen.checkActiveAccountActivation();\nadding_account_screen_1.AddingAccountScreen.clickSaveButton();\ncy.wait(2000);\ncharts_of_accounts_1.ChartOfAccounts.SearchAnTreeAccount(accounting_data_1.AccountingData.testParentAccountEditted);\ncy.get('div[class="description"]').last().scrollIntoView().click();\ncy.wait(1000);\ncy.verifyPlaceholderText(2, accounting_data_1.AccountingData.testParentAccountEditted);\ncy.get("@natureTxt").then((natureTxt) => {\n    cy.verifyPlaceholderText(5, (0, utils_1.getWrappedString)(natureTxt));\n});\ncy.get("@sectionTxt").then((sectionTxt) => {\n    cy.verifyPlaceholderText(6, (0, utils_1.getWrappedString)(sectionTxt));\n});\ncy.get("@parentTxt").then((parentTxt) => {\n    cy.verifyPlaceholderText(3, (0, utils_1.getWrappedString)(parentTxt));\n});\ncy.get("@typeTxt").then((typeTxt) => {\n    cy.verifyPlaceholderText(7, (0, utils_1.getWrappedString)(typeTxt));\n});*{}*false*false
2024-09-04T10:35:01.976Z*Adding Chart of Account*4.Verify Adding new Detail Chart of Account*30252*slow*passed*true*0*0**charts_of_accounts_1.ChartOfAccounts.landing();\ncy.wait(1500);\nadding_account_screen_1.AddingAccountScreen.clickAddNewButton();\ncy.getFirstItemInDropDownList("natureId").then(($natureId) => {\n    cy.wrap($natureId)\n        .invoke("text")\n        .then((natureTxt) => {\n        cy.log("natureTxt natureTxt natureTxt::: " + natureTxt);\n        cy.wrap(natureTxt).as("natureTxt");\n    });\n});\ncy.getLastItemInDropDownList("accountSectionId").then(($accountSectionId) => {\n    cy.wrap($accountSectionId)\n        .invoke("text")\n        .then((sectionTxt) => {\n        cy.log("sectionTxt::: " + sectionTxt);\n        cy.wrap(sectionTxt).as("sectionTxt");\n    });\n});\ncy.clickInputtedSearchDropDownList("parentId", accounting_data_1.AccountingData.testParentAccountAddedSearch).then(($parentId) => {\n    cy.wrap($parentId)\n        .invoke("text")\n        .then((parentTxt) => {\n        cy.log("parentTxt::: " + parentTxt);\n        cy.wrap(parentTxt).as("parentTxt");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.inputName(accounting_data_1.AccountingData.ChartOfAccountName);\ncy.getFirstItemInDropDownList("accountTypeId").then(($accountTypeId) => {\n    cy.wrap($accountTypeId)\n        .invoke("text")\n        .then((typeTxt) => {\n        cy.log("typeTxt::: " + typeTxt);\n        cy.wrap(typeTxt).as("typeTxt");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.selectTags();\nadding_account_screen_1.AddingAccountScreen.checkPeriodicActiveAccountActivation();\nadding_account_screen_1.AddingAccountScreen.clickIsDetail();\nadding_account_screen_1.AddingAccountScreen.checkOptionalCostCenterConfiguration();\ncy.clickInputtedSearchDropDownList("currencyId", accounting_data_1.AccountingData.currencySrch);\nadding_account_screen_1.AddingAccountScreen.clickSaveButton();\ncy.wait(2000);\ncharts_of_accounts_1.ChartOfAccounts.SearchAnTreeAccount(accounting_data_1.AccountingData.ChartOfAccountName);\ncy.get("span#label_tree.ng-star-inserted")\n    .last()\n    .scrollIntoView()\n    .click({ force: true });\ncy.wait(1000);\ncy.verifyPlaceholderText(2, accounting_data_1.AccountingData.ChartOfAccountName);\ncy.get("@natureTxt").then((natureTxt) => {\n    cy.verifyPlaceholderText(5, (0, utils_1.getWrappedString)(natureTxt));\n});\ncy.get("@sectionTxt").then((sectionTxt) => {\n    cy.verifyPlaceholderText(6, (0, utils_1.getWrappedString)(sectionTxt));\n});\ncy.get("@parentTxt").then((parentTxt) => {\n    cy.verifyPlaceholderText(3, (0, utils_1.getWrappedString)(parentTxt));\n});\ncy.get("@typeTxt").then((typeTxt) => {\n    cy.verifyPlaceholderText(7, (0, utils_1.getWrappedString)(typeTxt));\n});*{}*false*false
2024-09-04T10:35:52.070Z*Editting Chart of Account*1.  Verify All Components are displaying in their correct states*20498*slow*passed*true*0*0**charts_of_accounts_1.ChartOfAccounts.landing();\ncy.wait(1500);\ncharts_of_accounts_1.ChartOfAccounts.SearchAnTreeAccount(accounting_data_1.AccountingData.searchAccount);\ncharts_of_accounts_1.ChartOfAccounts.clickEditButtonDetailAccount();\ndisplaying_account_screen_1.DisplayingAccountScreen.verifyDisplayingTheCorrectDataInAccountEditting();*{}*false*false
2024-09-04T10:35:52.070Z*Editting Chart of Account*2.  Verify Editting an Detail Chart of Account*25672*slow*passed*true*0*0**charts_of_accounts_1.ChartOfAccounts.landing();\ncy.wait(1500);\ncharts_of_accounts_1.ChartOfAccounts.SearchAnTreeAccount(accounting_data_1.AccountingData.searchAccount);\ncharts_of_accounts_1.ChartOfAccounts.clickEditButtonDetailAccount();\ncy.verifyDimmidItemDropDownList("natureId");\ncy.verifyDimmidItemDropDownList("accountSectionId");\ncy.clickInputtedSearchDropDownList("parentId", accounting_data_1.AccountingData.testParentAccountEdittedSearch).then(($parentId) => {\n    cy.wrap($parentId)\n        .invoke("text")\n        .then((parentTxtEdited) => {\n        cy.log("parentTxtEdited::: " + parentTxtEdited);\n        cy.wrap(parentTxtEdited).as("parentTxtEdited");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.inputName(accounting_data_1.AccountingData.edittedChartOfAccountName);\ncy.getLastItemInDropDownList("accountTypeId").then(($accountTypeId) => {\n    cy.wrap($accountTypeId)\n        .invoke("text")\n        .then((typeTxtEditted) => {\n        cy.log("typeTxtEditted::: " + typeTxtEditted);\n        cy.wrap(typeTxtEditted).as("typeTxtEditted");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.clickSaveButton();\nfor (var i = 0; i < 7; i++) {\n    cy.log("<<<<<\*\*\*\*\* Viewing \*\*\*\*\* Viewing \*\*\*\*\* Viewing \*\*\*\*\* Viewing \*\*\*\*\*>>>");\n}\ncy.wait(2000);\ncy.log("<<<<<\*\*\*\*\* Verification in Tree View \*\*\*\*\*>>>>>>");\ncharts_of_accounts_1.ChartOfAccounts.SearchAnTreeAccount(accounting_data_1.AccountingData.edittedChartOfAccountName);\ncy.get("span#label_tree.ng-star-inserted").last().scrollIntoView().click();\ncy.wait(1000);\ncy.verifyPlaceholderText(2, accounting_data_1.AccountingData.edittedChartOfAccountName);\ncy.get("@parentTxtEdited").then((parentTxtEdited) => {\n    cy.verifyPlaceholderText(3, (0, utils_1.getWrappedString)(parentTxtEdited));\n});\ncy.get("@typeTxtEditted").then((typeTxtEditted) => {\n    cy.verifyPlaceholderText(7, (0, utils_1.getWrappedString)(typeTxtEditted));\n});*{}*false*false
2024-09-04T10:36:13.101Z*Displaying Chart of Account*Verify All Components are displaying in their correct states*17852*slow*passed*true*0*0**charts_of_accounts_1.ChartOfAccounts.landing();\ncy.wait(1500);\ncy.get('div[class="description"]').last().scrollIntoView().click();\ncy.wait(1000);\ndisplaying_account_screen_1.DisplayingAccountScreen.verifyDisplayingTheCorrectDataInAccountView();*{}*false*false
2024-09-04T10:37:14.962Z*Displaying Chart of Account*1. Verify All Components are displaying in their correct states*21261*slow*passed*true*0*0**charts_of_accounts_1.ChartOfAccounts.landing();\ncy.wait(1500);\ncy.reload();\ncy.wait(1500);\ncy.clickContinueAs();\ncy.wait(1500);\ndisplaying_main_screen_1.DisplayingMainScreen.verifyEmptyViewPanal();\ndisplaying_main_screen_1.DisplayingMainScreen.verifyTHeTreeHeaders();\ndisplaying_main_screen_1.DisplayingMainScreen.verifySearchTextField();\ndisplaying_main_screen_1.DisplayingMainScreen.verifyTheMainParentAccounts();*{}*false*false
2024-09-04T10:37:14.962Z*Displaying Chart of Account*Verify Shiftting between Tree and List view*14138*slow*passed*true*0*0**charts_of_accounts_1.ChartOfAccounts.landing();\ncharts_of_accounts_1.ChartOfAccounts.switchingToListView();\ncharts_of_accounts_1.ChartOfAccounts.switchingToTreeView();*{}*false*false
2024-09-04T10:37:14.962Z*Displaying Chart of Account*Verify Tree and List views have the same data*22733*slow*passed*true*0*0**charts_of_accounts_1.ChartOfAccounts.landing();\ncy.wait(2000);\ncharts_of_accounts_1.ChartOfAccounts.SearchAnTreeAccount(accounting_data_1.AccountingData.accountCOde);\ncy.wait(1000);\ncy.get('div[class="description"]').last().scrollIntoView().click();\ncy.wait(1000);\ncy.wrapDisabledPlaceholderValue(0).then((codeT) => {\n    cy.wrap(codeT).as("codeT");\n});\ncy.wrapDisabledPlaceholderValue(2).then((nameText) => {\n    cy.wrap(nameText).as("nameText");\n});\ncy.wrapDisabledPlaceholderValue(5).then((natureTxt) => {\n    cy.wrap(natureTxt).as("natureTxt");\n});\ncy.wrapDisabledPlaceholderValue(6).then((sectionTxt) => {\n    cy.wrap(sectionTxt).as("sectionTxt");\n});\ncy.wrapDisabledPlaceholderValue(7).then((typeText) => {\n    cy.wrap(typeText).as("typeText");\n});\ncy.wait(2000);\ncharts_of_accounts_1.ChartOfAccounts.switchingToListView();\ncharts_of_accounts_1.ChartOfAccounts.SearchAListAccount(accounting_data_1.AccountingData.accountCOde);\ncy.wait(2000);\ncy.get("@codeT").then((codeT) => {\n    cy.verifyFirstCellInTable(0, (0, utils_1.getWrappedString)(codeT));\n});\ncy.get("@nameText").then((nameText) => {\n    cy.verifyFirstCellInTable(1, (0, utils_1.getWrappedString)(nameText));\n});\ncy.get("@sectionTxt").then((sectionTxt) => {\n    cy.verifyFirstCellInTable(3, (0, utils_1.getWrappedString)(sectionTxt));\n});\ncy.get("@typeText").then((typeText) => {\n    cy.verifyFirstCellInTable(4, (0, utils_1.getWrappedString)(typeText));\n});\ncy.get("@natureTxt").then((natureTxt) => {\n    cy.verifyFirstCellInTable(5, (0, utils_1.getWrappedString)(natureTxt));\n});*{}*false*false
2024-09-04T10:42:31.715Z*Journal Entry*1.Verify Walk Through*30348*slow*passed*true*0*0**journal_entry_1.JournalEntry.landing();\ncy.wait(2000);\njournal_entry_1.JournalEntry.addNewJournalEntry();\ncy.wait(1000);\njournal_entry_1.JournalEntry.clickWalkTrough();\njournal_entry_1.JournalEntry.verifyWalkThroughStep(/Step 1/i, /Fill In Reference Number/i, /next   1\/4/i);\njournal_entry_1.JournalEntry.clickNextWalkThroughStep();\njournal_entry_1.JournalEntry.verifyWalkThroughStep(/Step 2/i, /Select Date/i, /next   2\/4/i);\njournal_entry_1.JournalEntry.clickNextWalkThroughStep();\njournal_entry_1.JournalEntry.verifyWalkThroughStep(/Step 3/i, /Add Journal Entry Description/i, /next   3\/4/i);\njournal_entry_1.JournalEntry.clickNextWalkThroughStep();\njournal_entry_1.JournalEntry.verifyWalkThroughStep(/Step 4/i, /Select To Add New Journal Entry/i, /done/i);\njournal_entry_1.JournalEntry.clickNextWalkThroughStep();\njournal_entry_1.JournalEntry.verifyDisAppearingWalkthroughPopUps();*{}*false*false
2024-09-04T10:42:31.715Z*Journal Entry*2.Verify that all components are displayed in Journal Entry Main Screen*16113*slow*passed*true*0*0**journal_entry_1.JournalEntry.landing();\ncy.wait(1500);\n//  Verify that The Search Input Text field is displayed in Header\njournal_entry_1.JournalEntry.verifySearchInputTextField();\n//  Verify that the Column headers are displayed successfully\njournal_entry_1.JournalEntry.verifyTheColumnHeadersAreDisplayed();*{}*false*false
2024-09-04T10:42:31.715Z*Journal Entry*3.Verify that all components are displayed in Add New Screen*14175*slow*passed*true*0*0**journal_entry_1.JournalEntry.landing();\ncy.wait(1500);\n// Click Add New Button\njournal_entry_1.JournalEntry.addNewJournalEntry();\n// Verify that 'walk through' is displayed in the Header\njournal_entry_1.JournalEntry.verifyWalkThroughISDisplayedOnHeader();\n// verify that the  Reference Number Text field is displayed in the Header\njournal_entry_1.JournalEntry.verifyReferenceNumberTextFieldOnHeader();\n// verify that the  Date Picker Text field is displayed in the Header\njournal_entry_1.JournalEntry.verifyDatePickerTextFieldOnHeader();\n// verify that the  Attach Button is displayed in the Header\njournal_entry_1.JournalEntry.verifyAttachButton();\n// verify that the  Description Text field is displayed in the Header\njournal_entry_1.JournalEntry.verifyDescriptionTextFieldOnHeader();\n// Verify That the Save Button is displayed in the bottom\njournal_entry_1.JournalEntry.verifySaveButtonIsDisplayedOnBottom();\n// Verify That the 'Add Template' is displayed in the bottom of the Table\n// Verify That the ' Add New Line ' is displayed in the bottom of the Table\njournal_entry_1.JournalEntry.verifyAddNewLineOnBottom();\n//  Verify That Column Headers are displayed successfully in the Table\njournal_entry_1.JournalEntry.verifyColumnHeadersAddNewScreen();*{}*false*false
2024-09-04T10:42:31.715Z*Journal Entry*4.should filter the table based on search input in the first two columns*12303*slow*passed*true*0*0**journal_entry_1.JournalEntry.landing();\ncy.wait(1500);\ncy.verifySearchFunctionality();*{}*false*false
2024-09-04T10:42:31.715Z*Journal Entry*5.Verify Add New Template in Add New Screen*0**pending*0*0*true**journal_entry_1.JournalEntry.landing();\ncy.wait(1500);\n// Click Add New Button\njournal_entry_1.JournalEntry.addNewJournalEntry();\n//  Click Add New Templete\njournal_entry_1.JournalEntry.clickAddNewTemplate();\ncy.zoomOut();\n// Click Close Icon\njournal_entry_1.JournalEntry.clickCloseIcon();\ncy.reload();\ncy.wait(2000);\ncy.clickContinueAs();\n//  Click Add New Templete\ncy.zoomIn();\njournal_entry_1.JournalEntry.clickAddNewTemplate();\njournal_entry_1.JournalEntry.verifyNewTemplateDialog();*{}*false*false
2024-09-04T10:42:31.715Z*Journal Entry*6.Verify The System Can Add Delete new Lines*16664*slow*passed*true*0*0**journal_entry_1.JournalEntry.landing();\ncy.wait(1500);\njournal_entry_1.JournalEntry.addNewJournalEntry();\njournal_entry_1.JournalEntry.verifyNumberOfRowsInTable(1);\njournal_entry_1.JournalEntry.addNewLine();\ncy.get("tbody")\n    .find("tr")\n    .eq(0)\n    .find("td")\n    .eq(1)\n    .then(($vCell) => {\n    cy.wrap($vCell).find("p-celleditor").click({ force: true });\n    cy.getFirstElementDropDownList(0);\n});\njournal_entry_1.JournalEntry.addNewLine();\njournal_entry_1.JournalEntry.verifyNumberOfRowsInTable(2);\ncy.get("tbody")\n    .find("tr")\n    .eq(1)\n    .find("td")\n    .eq(1)\n    .then(($vCell) => {\n    cy.wrap($vCell).find("p-celleditor").click({ force: true });\n    cy.getFirstElementDropDownList(0);\n});\njournal_entry_1.JournalEntry.addNewLine();\njournal_entry_1.JournalEntry.verifyNumberOfRowsInTable(3);\njournal_entry_1.JournalEntry.clickDeleteLine(0);\njournal_entry_1.JournalEntry.verifyNumberOfRowsInTable(2);\njournal_entry_1.JournalEntry.clickDeleteLine(0);\njournal_entry_1.JournalEntry.verifyNumberOfRowsInTable(1);*{}*false*false
2024-09-04T10:42:31.715Z*Journal Entry*7.Verify canceling Balanced Journal Entry in Add New Screen*17231*slow*passed*true*0*0**var i = (0, utils_1.getRandomNumber)(7, 77);\njournal_entry_1.JournalEntry.landing();\ncy.wait(1500);\njournal_entry_1.JournalEntry.addNewJournalEntry();\njournal_entry_1.JournalEntry.addHeaderReferenceNumber(i);\njournal_entry_1.JournalEntry.inputHeaderDescriptionData(i);\ncy.wait(1500);\ncy.get("tbody")\n    .find("tr")\n    .eq(0)\n    .find("td")\n    .eq(1)\n    .then(($vCell) => {\n    cy.wrap($vCell).find("p-celleditor").click({ force: true });\n    cy.getFirstElementDropDownList(0);\n});\n// Debit\ncy.get("tbody")\n    .find("tr")\n    .eq(0)\n    .find("td")\n    .eq(4)\n    .then(($vCell) => {\n    cy.wrap($vCell).find("p-celleditor").click({ force: true });\n    cy.wrap($vCell)\n        .find("input")\n        .clear()\n        .type(accounting_data_1.AccountingData.corDebitAmount.toString());\n});\njournal_entry_1.JournalEntry.addNewLine();\ncy.get("tbody")\n    .find("tr")\n    .eq(1)\n    .find("td")\n    .eq(1)\n    .then(($vCell) => {\n    cy.wrap($vCell).find("p-celleditor").click({ force: true });\n    cy.getLastElementDropDownList(0);\n});\n// Credit\ncy.get("tbody")\n    .find("tr")\n    .eq(1)\n    .find("td")\n    .eq(5)\n    .then(($vCell) => {\n    cy.wrap($vCell).find("p-celleditor").click({ force: true });\n    cy.wrap($vCell)\n        .find("input")\n        .clear()\n        .type(accounting_data_1.AccountingData.corCreditAmount.toString());\n});\njournal_entry_1.JournalEntry.clickcancelButton();\ncy.url().should("not.include", "add");*{}*false*false
2024-09-04T10:42:31.715Z*Journal Entry*8.Verify saving UnBalanced Journal Entry in Add New Screen The Account With cost center Mandatory or Optional*36024**failed*0*true*0**var i = (0, utils_1.getRandomNumber)(7, 77);\njournal_entry_1.JournalEntry.landing();\ncy.wait(1500);\njournal_entry_1.JournalEntry.addNewJournalEntry();\njournal_entry_1.JournalEntry.addHeaderReferenceNumber(i);\njournal_entry_1.JournalEntry.inputHeaderDescriptionData(i);\ncy.wait(1500);\ncy.get("tbody")\n    .find("tr")\n    .eq(0)\n    .find("td")\n    .eq(1)\n    .then(($vCell) => {\n    cy.wrap($vCell).find("p-celleditor").click({ force: true });\n    cy.getFirstElementDropDownList(0);\n});\n// Debit\ncy.get("tbody")\n    .find("tr")\n    .eq(0)\n    .find("td")\n    .eq(4)\n    .then(($vCell) => {\n    cy.wrap($vCell).find("p-celleditor").click({ force: true });\n    cy.wrap($vCell)\n        .find("input")\n        .clear()\n        .type(accounting_data_1.AccountingData.corDebitAmount.toString());\n});\njournal_entry_1.JournalEntry.addNewLine();\ncy.get("tbody")\n    .find("tr")\n    .eq(1)\n    .find("td")\n    .eq(1)\n    .then(($vCell) => {\n    cy.wrap($vCell).find("p-celleditor").click({ force: true });\n    cy.getLastElementDropDownList(0);\n});\n// Credit\ncy.get("tbody")\n    .find("tr")\n    .eq(1)\n    .find("td")\n    .eq(5)\n    .then(($vCell) => {\n    cy.wrap($vCell).find("p-celleditor").click({ force: true });\n    cy.wrap($vCell)\n        .find("input")\n        .clear()\n        .type(accounting_data_1.AccountingData.corCreditAmount.toString());\n});\njournal_entry_1.JournalEntry.addCostCenter(1);\ncy.wait(2000);\njournal_entry_1.JournalEntry.clickSaveButton();\ncy.wait(3000);\ncy.url().should("not.include", "add");*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=\"save\"]`, but never found it. Queried from:\n\n              > cy.get(div[role=\"dialog\"])","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=\"save\"]`, but never found it. Queried from:\n\n              > cy.get(div[role=\"dialog\"])\n    at JournalEntry.clickSaveCostCenter (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Accounting/journal_entry/pages/journal_entry.ts:501:0)\n    at JournalEntry.addCostCenter (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Accounting/journal_entry/pages/journal_entry.ts:520:0)\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Accounting/journal_entry/tests/Journal_entry.cy.ts:223:0)","diff":null}*false*false
2024-09-04T10:42:31.715Z*Journal Entry*9.Verify That The System can not save the date if any required data is missing*25881*slow*passed*true*0*0**var i = (0, utils_1.getRandomNumber)(8, 88);\njournal_entry_1.JournalEntry.landing();\ncy.wait(1500);\njournal_entry_1.JournalEntry.addNewJournalEntry();\njournal_entry_1.JournalEntry.clickSaveButton();\njournal_entry_1.JournalEntry.verifyIsRequiedMessage(4);\ncy.wait(1500);\n// Line Description\ncy.get("tbody")\n    .find("tr")\n    .eq(0)\n    .find("td")\n    .eq(3)\n    .then(($vCell) => {\n    cy.wrap($vCell).find("p-celleditor").click({ force: true });\n    cy.wrap($vCell)\n        .find("input")\n        .clear()\n        .type(accounting_data_1.AccountingData.corDebitAmount.toString());\n});\njournal_entry_1.JournalEntry.verifyIsRequiedMessage(3);\ncy.get("tbody")\n    .find("tr")\n    .eq(0)\n    .find("td")\n    .eq(1)\n    .then(($vCell) => {\n    cy.wrap($vCell).find("p-celleditor").click({ force: true });\n    cy.getFirstElementDropDownList(0);\n});\njournal_entry_1.JournalEntry.verifyIsRequiedMessage(2);\njournal_entry_1.JournalEntry.inputHeaderDescriptionData(i);\njournal_entry_1.JournalEntry.verifyIsRequiedMessage(1);\njournal_entry_1.JournalEntry.addHeaderReferenceNumber(i);\njournal_entry_1.JournalEntry.verifyIsRequiedMessage(0);*{}*false*false
2024-09-04T10:42:31.715Z*Journal Entry*10.Verify canceling Changes in Journal Entry in Edit Screen*28775**failed*0*true*0**journal_entry_1.JournalEntry.landing();\ncy.wait(1500);\ncy.zoomOut();\njournal_entry_1.JournalEntry.clickEditButton();\nedit_screeen_1.JDEditScreen.verifycancelButton();\njournal_entry_1.JournalEntry.clickcancelButton();\nedit_screeen_1.JDEditScreen.verifycancelButtonDisAppearing();*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=cancel]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=cancel]`, but never found it.\n    at JDEditScreen.verifycancelButton (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Accounting/journal_entry/pages/edit_screeen.ts:92:0)\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Accounting/journal_entry/tests/Journal_entry.cy.ts:283:0)","diff":null}*false*false
2024-09-04T10:42:31.715Z*Journal Entry*11.Verify posting a Submitted balanced Journal Entry in Edit Screen*29374**failed*0*true*0**journal_entry_1.JournalEntry.landing();\ncy.wait(1500);\ncy.zoomOut();\njournal_entry_1.JournalEntry.clickEditButton();\n// Adding the Credit Amount of the First Line to The Debit Amount of Second Line\ncy.get("tbody")\n    .find("tr")\n    .eq(1)\n    .find("td")\n    .eq(4)\n    .then(($vCell5) => {\n    cy.get('td[peditablecolumnfield="creditAmount"]')\n        .last()\n        .find("p-celleditor")\n        .click({ force: true });\n    cy.getByTestAttribute("creditAmount")\n        .last()\n        .clear()\n        .type(accounting_data_1.AccountingData.corDebitAmount.toString());\n});\njournal_entry_1.JournalEntry.clickSaveButton();\ncy.wait(1000);\njournal_entry_1.JournalEntry.clickPostButton();\nedit_screeen_1.JDEditScreen.verifyAfterPosting();\njournal_entry_1.JournalEntry.clickcancelButton();\ncy.wait(500);*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `tr`, but never found it. Queried from:\n\n              > cy.get(tbody)","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `tr`, but never found it. Queried from:\n\n              > cy.get(tbody)\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Accounting/journal_entry/tests/Journal_entry.cy.ts:294:0)","diff":null}*false*false
2024-09-04T10:42:31.715Z*Journal Entry* 14.Verify posting a Submitted balanced Journal Entry in Edit Screen For Automation DB Seeding*0**pending*0*0*true**journal_entry_1.JournalEntry.landing();\ncy.increaseScreenItemsMaxCount(30);\njournal_entry_1.JournalEntry.clickEditButton();\ncy.wait(500);\njournal_entry_1.JournalEntry.clickSaveButton();\ncy.wait(500);\njournal_entry_1.JournalEntry.clickSubmitButton();\ncy.wait(1000);\njournal_entry_1.JournalEntry.clickPostButton();\nedit_screeen_1.JDEditScreen.verifyAfterPosting();\ncy.wait(500);\njournal_entry_1.JournalEntry.clickcancelButton();\ncy.wait(500);\ncy.verifyCustomCellInTable(0, 9, /posted/i);*{}*false*false
2024-09-04T10:46:45.188Z*Treasury Definition (Add)*1.Verify All components are displaying*17546*slow*passed*true*0*0**treasury_definition_1.TreasuryDefinition.landing();\ncy.wait(1500);\ntreasury_definition_1.TreasuryDefinition.clickAddNewButton();\ncy.verifyDimmidInput("code");\n// Verify Labels\ncy.verifyLabelText("code", /code/i);\ncy.verifyLabelText("name", /name/i);\ncy.verifyLabelText("currencyId", /currency/i);\ncy.verifyLabelText("branches", /branches/i);\ncy.verifyLabelText("accountId", /gl account/i);\ncy.get('label[for="openingBalance"]')\n    .first()\n    .should("include", /opening account balance/i);\ncy.get('label[for="openingBalance"]')\n    .last()\n    .should("include", /treasury opening balance/i);*{}*false*false
2024-09-04T10:46:45.188Z*Treasury Definition (Add)*2.Verify Submitting new Treasury Definition*23942**failed*0*true*0**treasury_definition_1.TreasuryDefinition.landing();\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ntreasury_definition_1.TreasuryDefinition.clickAddNewButton();\ncy.getFirstItemInDropDownList("accountId");\ncy.clickInputtedSearchDropDownList("currencyId", finance_data_1.FinanceData.correctCurrency);\ncy.checkAllOptions();\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.get('input[data-testid="accountBalance"]')\n    .invoke("val")\n    .then((text) => {\n    cy.log("Opening Account Balance:", text);\n    cy.getByTestAttribute("openingBalance")\n        .last()\n        .scrollIntoView()\n        .clear()\n        .type(text.toString());\n});\ntreasury_definition_1.TreasuryDefinition.clickSaveButton();\n// Assertion\ncy.wait(1000);\ncy.get('div[role="dialog"]').should("not.exist");\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) + 1);\n    });\n});*{"message":"CypressError: `cy.type()` cannot accept an empty string. You need to actually type something.\n\nhttps://on.cypress.io/type","estack":"CypressError: `cy.type()` cannot accept an empty string. You need to actually type something.\n\nhttps://on.cypress.io/type\n    at Context.type (https://mohamedsaid.microtecdev.com:2050/__cypress/runner/cypress_runner.js:115334:68)\n    at wrapped (https://mohamedsaid.microtecdev.com:2050/__cypress/runner/cypress_runner.js:138450:19)\nFrom Your Spec Code:\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Finance/treasury_definition/tests/treasury_definition_add.cy.ts:47:0)","diff":null}*false*false
2024-09-04T10:46:45.188Z*Treasury Definition (Add)*3.Verify Required Validation and The name Field is Required*32779**failed*0*true*0**treasury_definition_1.TreasuryDefinition.landing();\ntreasury_definition_1.TreasuryDefinition.clickAddNewButton();\ntreasury_definition_1.TreasuryDefinition.clickSaveButton();\ncy.get('span[class="errorMessage ng-star-inserted"]').should("have.length", 3);\ncy.clickInputtedSearchDropDownList("currencyId", finance_data_1.FinanceData.correctCurrency);\ncy.get('span[class="errorMessage ng-star-inserted"]').should("have.length", 2);\ncy.checkAllOptions();\ncy.get('span[class="errorMessage ng-star-inserted"]').should("have.length", 1);\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.contains("span", /required/i).should("not.exist");\ntreasury_definition_1.TreasuryDefinition.clickSaveButton();\ncy.wait(500);\ntreasury_definition_1.TreasuryDefinition.submitSaving();\ncy.wait(1500);\ncy.get('div[role="dialog"]').should("not.exist");*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find content: '/submit/i' within the element: <button.btn.save.body_b16> but never did.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find content: '/submit/i' within the element: <button.btn.save.body_b16> but never did.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Finance/treasury_definition/pages/treasury_definition.ts:20:0)","diff":null}*false*false
2024-09-04T10:46:45.188Z*Treasury Definition (Add)*4.Verify Different Currency Validation*22525**failed*0*true*0**treasury_definition_1.TreasuryDefinition.landing();\ntreasury_definition_1.TreasuryDefinition.clickAddNewButton();\ncy.getFirstItemInDropDownList("accountId");\ncy.clickInputtedSearchDropDownList("currencyId", finance_data_1.FinanceData.wrongCurrency);\ncy.checkAllOptions();\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.get('input[data-testid="accountBalance"]')\n    .invoke("val")\n    .then((text) => {\n    cy.log("Opening Account Balance:", text);\n    cy.getByTestAttribute("openingBalance")\n        .last()\n        .scrollIntoView()\n        .clear()\n        .type(text.toString());\n});\ntreasury_definition_1.TreasuryDefinition.clickSaveButton();\n// Assertion\ncy.wait(3000);\ncy.get('div[role="dialog"]').should("be.visible");*{"message":"CypressError: `cy.type()` cannot accept an empty string. You need to actually type something.\n\nhttps://on.cypress.io/type","estack":"CypressError: `cy.type()` cannot accept an empty string. You need to actually type something.\n\nhttps://on.cypress.io/type\n    at Context.type (https://mohamedsaid.microtecdev.com:2050/__cypress/runner/cypress_runner.js:115334:68)\n    at wrapped (https://mohamedsaid.microtecdev.com:2050/__cypress/runner/cypress_runner.js:138450:19)\nFrom Your Spec Code:\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Finance/treasury_definition/tests/treasury_definition_add.cy.ts:96:0)","diff":null}*false*false
2024-09-04T10:46:45.188Z*Treasury Definition (Add)*5.Verify Different openingBalance Confirmation*38897**failed*0*true*0**treasury_definition_1.TreasuryDefinition.landing();\ntreasury_definition_1.TreasuryDefinition.clickAddNewButton();\ncy.getFirstItemInDropDownList("accountId");\ncy.clickInputtedSearchDropDownList("currencyId", finance_data_1.FinanceData.correctCurrency);\ncy.checkAllOptions();\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.get('input[data-testid="accountBalance"]')\n    .invoke("val")\n    .then((text) => {\n    cy.log("Opening Account Balance:", text);\n    cy.getByTestAttribute("openingBalance")\n        .last()\n        .scrollIntoView()\n        .clear()\n        .type("1" + text.toString());\n});\ntreasury_definition_1.TreasuryDefinition.clickSaveButton();\n// Assertion\ncy.wait(500);\ncy.get('div[role="dialog"]').should("be.visible");\ncy.wait(500);\ntreasury_definition_1.TreasuryDefinition.submitSaving();\ncy.wait(1500);\ncy.get('div[role="dialog"]').should("not.exist");*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find content: '/submit/i' within the element: <button.btn.save.body_b16> but never did.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find content: '/submit/i' within the element: <button.btn.save.body_b16> but never did.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Finance/treasury_definition/pages/treasury_definition.ts:20:0)","diff":null}*false*false
2024-09-04T12:59:44.821Z*Treasury Definition (Add)*1.Verify All components are displaying*24228*slow*passed*true*0*0**treasury_definition_1.TreasuryDefinition.landing();\ncy.wait(1500);\ntreasury_definition_1.TreasuryDefinition.clickAddNewButton();\ncy.verifyDimmidInput("code");\n// Verify Labels\ncy.verifyLabelText("code", /code/i);\ncy.verifyLabelText("name", /name/i);\ncy.verifyLabelText("currencyId", /currency/i);\ncy.verifyLabelText("branches", /branches/i);\ncy.verifyLabelText("accountId", /gl account/i);\ncy.get('label[for="openingBalance"]')\n    .first()\n    .should("include", /opening account balance/i);\ncy.get('label[for="openingBalance"]')\n    .last()\n    .should("include", /treasury opening balance/i);*{}*false*false
2024-09-04T12:59:44.821Z*Treasury Definition (Add)*2.Verify Submitting new Treasury Definition*24041**failed*0*true*0**treasury_definition_1.TreasuryDefinition.landing();\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ntreasury_definition_1.TreasuryDefinition.clickAddNewButton();\ncy.getFirstItemInDropDownList("accountId");\ncy.clickInputtedSearchDropDownList("currencyId", finance_data_1.FinanceData.correctCurrency);\ncy.checkAllOptions();\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.get('input[data-testid="accountBalance"]')\n    .invoke("val")\n    .then((text) => {\n    cy.log("Opening Account Balance:", text);\n    cy.getByTestAttribute("openingBalance")\n        .last()\n        .scrollIntoView()\n        .clear()\n        .type(text.toString());\n});\ntreasury_definition_1.TreasuryDefinition.clickSaveButton();\n// Assertion\ncy.wait(1000);\ncy.get('div[role="dialog"]').should("not.exist");\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) + 1);\n    });\n});*{"message":"CypressError: `cy.type()` cannot accept an empty string. You need to actually type something.\n\nhttps://on.cypress.io/type","estack":"CypressError: `cy.type()` cannot accept an empty string. You need to actually type something.\n\nhttps://on.cypress.io/type\n    at Context.type (https://mohamedsaid.microtecdev.com:2050/__cypress/runner/cypress_runner.js:115334:68)\n    at wrapped (https://mohamedsaid.microtecdev.com:2050/__cypress/runner/cypress_runner.js:138450:19)\nFrom Your Spec Code:\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Finance/treasury_definition/tests/treasury_definition_add.cy.ts:47:0)","diff":null}*false*false
2024-09-04T12:59:44.821Z*Treasury Definition (Add)*3.Verify Required Validation and The name Field is Required*34580**failed*0*true*0**treasury_definition_1.TreasuryDefinition.landing();\ntreasury_definition_1.TreasuryDefinition.clickAddNewButton();\ntreasury_definition_1.TreasuryDefinition.clickSaveButton();\ncy.get('span[class="errorMessage ng-star-inserted"]').should("have.length", 3);\ncy.clickInputtedSearchDropDownList("currencyId", finance_data_1.FinanceData.correctCurrency);\ncy.get('span[class="errorMessage ng-star-inserted"]').should("have.length", 2);\ncy.checkAllOptions();\ncy.get('span[class="errorMessage ng-star-inserted"]').should("have.length", 1);\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.contains("span", /required/i).should("not.exist");\ntreasury_definition_1.TreasuryDefinition.clickSaveButton();\ncy.wait(500);\ntreasury_definition_1.TreasuryDefinition.submitSaving();\ncy.wait(1500);\ncy.get('div[role="dialog"]').should("not.exist");*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find content: '/submit/i' within the element: <button.btn.save.body_b16> but never did.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find content: '/submit/i' within the element: <button.btn.save.body_b16> but never did.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Finance/treasury_definition/pages/treasury_definition.ts:20:0)","diff":null}*false*false
2024-09-04T12:59:44.821Z*Treasury Definition (Add)*4.Verify Different Currency Validation*23672**failed*0*true*0**treasury_definition_1.TreasuryDefinition.landing();\ntreasury_definition_1.TreasuryDefinition.clickAddNewButton();\ncy.getFirstItemInDropDownList("accountId");\ncy.clickInputtedSearchDropDownList("currencyId", finance_data_1.FinanceData.wrongCurrency);\ncy.checkAllOptions();\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.get('input[data-testid="accountBalance"]')\n    .invoke("val")\n    .then((text) => {\n    cy.log("Opening Account Balance:", text);\n    cy.getByTestAttribute("openingBalance")\n        .last()\n        .scrollIntoView()\n        .clear()\n        .type(text.toString());\n});\ntreasury_definition_1.TreasuryDefinition.clickSaveButton();\n// Assertion\ncy.wait(3000);\ncy.get('div[role="dialog"]').should("be.visible");*{"message":"CypressError: `cy.type()` cannot accept an empty string. You need to actually type something.\n\nhttps://on.cypress.io/type","estack":"CypressError: `cy.type()` cannot accept an empty string. You need to actually type something.\n\nhttps://on.cypress.io/type\n    at Context.type (https://mohamedsaid.microtecdev.com:2050/__cypress/runner/cypress_runner.js:115334:68)\n    at wrapped (https://mohamedsaid.microtecdev.com:2050/__cypress/runner/cypress_runner.js:138450:19)\nFrom Your Spec Code:\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Finance/treasury_definition/tests/treasury_definition_add.cy.ts:96:0)","diff":null}*false*false
2024-09-04T12:59:44.821Z*Treasury Definition (Add)*5.Verify Different openingBalance Confirmation*38539**failed*0*true*0**treasury_definition_1.TreasuryDefinition.landing();\ntreasury_definition_1.TreasuryDefinition.clickAddNewButton();\ncy.getFirstItemInDropDownList("accountId");\ncy.clickInputtedSearchDropDownList("currencyId", finance_data_1.FinanceData.correctCurrency);\ncy.checkAllOptions();\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.get('input[data-testid="accountBalance"]')\n    .invoke("val")\n    .then((text) => {\n    cy.log("Opening Account Balance:", text);\n    cy.getByTestAttribute("openingBalance")\n        .last()\n        .scrollIntoView()\n        .clear()\n        .type("1" + text.toString());\n});\ntreasury_definition_1.TreasuryDefinition.clickSaveButton();\n// Assertion\ncy.wait(500);\ncy.get('div[role="dialog"]').should("be.visible");\ncy.wait(500);\ntreasury_definition_1.TreasuryDefinition.submitSaving();\ncy.wait(1500);\ncy.get('div[role="dialog"]').should("not.exist");*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find content: '/submit/i' within the element: <button.btn.save.body_b16> but never did.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find content: '/submit/i' within the element: <button.btn.save.body_b16> but never did.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Finance/treasury_definition/pages/treasury_definition.ts:20:0)","diff":null}*false*false
2024-09-04T13:03:26.608Z*Treasury Definition (edit)*1.Verify All components are displaying*17114*slow*passed*true*0*0**treasury_definition_1.TreasuryDefinition.landing();\ncy.wait(1500);\ncy.clickFirstEditActionButton();\ncy.verifyDimmidInput('code');\n// Verify Labels\ncy.verifyLabelText('code', /code/i);\ncy.verifyLabelText('name', /name/i);\ncy.verifyLabelText('currencyId', /currency/i);\ncy.verifyLabelText('branches', /branches/i);\ncy.verifyLabelText('accountId', /gl account/i);\ncy.get('label[for="openingBalance"]').first().should("include", /opening account balance/i);\ncy.get('label[for="openingBalance"]').last().should("include", /treasury opening balance/i);*{}*false*false
2024-09-04T13:03:26.608Z*Treasury Definition (edit)*2.Verify Submitting new Treasury Definition*20921**failed*0*true*0**treasury_definition_1.TreasuryDefinition.landing();\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.clickFirstEditActionButton();\ncy.clickInputtedSearchDropDownList("accountId", finance_data_1.FinanceData.edittedAccount);\ncy.clickInputtedSearchDropDownList("currencyId", finance_data_1.FinanceData.edittedCurrency);\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.get('input[data-testid="accountBalance"]')\n    .invoke('val')\n    .then((text) => {\n    cy.log('Opening Account Balance:', text);\n    cy.getByTestAttribute("openingBalance").last().scrollIntoView().clear().type(text.toString());\n    cy.wrap(text.toString()).as("openingBalanceTxt");\n});\ntreasury_definition_1.TreasuryDefinition.clickSaveButton();\n// Assertion\ncy.wait(1000);\ncy.get('div[role="dialog"]').should('not.exist');\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount));\n    });\n});\ncy.verifyFirstCellInTable(1, finance_data_1.FinanceData.bdName);\ncy.get("table tbody")\n    .find("tr")\n    .first()\n    .find("td")\n    .eq(2)\n    .then(($el) => {\n    cy.wrap($el)\n        .invoke("text")\n        .then((txtEx) => {\n        expect(txtEx.trim().split(" ").join("")).to.include(finance_data_1.FinanceData.edittedCurrency.substring(1));\n    });\n});\ncy.verifyFirstCellInTable(3, finance_data_1.FinanceData.edittedAccount);*{"message":"CypressError: `cy.type()` cannot accept an empty string. You need to actually type something.\n\nhttps://on.cypress.io/type","estack":"CypressError: `cy.type()` cannot accept an empty string. You need to actually type something.\n\nhttps://on.cypress.io/type\n    at Context.type (https://mohamedsaid.microtecdev.com:2050/__cypress/runner/cypress_runner.js:115334:68)\n    at wrapped (https://mohamedsaid.microtecdev.com:2050/__cypress/runner/cypress_runner.js:138450:19)\nFrom Your Spec Code:\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Finance/treasury_definition/tests/treasury_definition_edit.cy.ts:38:0)","diff":null}*false*false
2024-09-04T13:03:26.608Z*Treasury Definition (edit)*3.Verify Required Validation and The name Field is Required*26634**failed*0*true*0**treasury_definition_1.TreasuryDefinition.landing();\ncy.clickFirstEditActionButton();\ncy.contains('span', /required/i).should('not.exist');\ncy.getByTestAttribute("name").clear();\ncy.contains('span', /required/i).should('be.visible');\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.contains('span', /required/i).should('not.exist');*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=name]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=name]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:103:0)","diff":null}*false*false
2024-09-04T13:03:26.608Z*Treasury Definition (edit)*4.Verify Different Currency Validation*27247**failed*0*true*0**treasury_definition_1.TreasuryDefinition.landing();\ncy.clickFirstEditActionButton();\ncy.clickInputtedSearchDropDownList("currencyId", finance_data_1.FinanceData.wrongCurrency);\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.clickInputtedSearchDropDownList("accountId", finance_data_1.FinanceData.edittedAccount);\ncy.get('input[data-testid="accountBalance"]')\n    .invoke('val')\n    .then((text) => {\n    cy.log('Opening Account Balance:', text);\n    cy.getByTestAttribute("openingBalance").last().scrollIntoView().clear().type(text.toString());\n});\ntreasury_definition_1.TreasuryDefinition.clickSaveButton();\n// Assertion\ncy.wait(3000);\ncy.get('div[role="dialog"]').should('be.visible');*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=currencyId]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=currencyId]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:103:0)","diff":null}*false*false
2024-09-04T13:03:26.608Z*Treasury Definition (edit)*5.Verify Different openingBalance Confirmation*26855**failed*0*true*0**treasury_definition_1.TreasuryDefinition.landing();\ncy.clickFirstEditActionButton();\ncy.clickInputtedSearchDropDownList("accountId", finance_data_1.FinanceData.edittedAccount);\ncy.clickInputtedSearchDropDownList("currencyId", finance_data_1.FinanceData.edittedCurrency);\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.get('input[data-testid="accountBalance"]')\n    .invoke('val')\n    .then((text) => {\n    cy.log('Opening Account Balance:', text);\n    cy.getByTestAttribute("openingBalance").last().scrollIntoView().clear().type("1" + text.toString());\n});\ntreasury_definition_1.TreasuryDefinition.clickSaveButton();\n// Assertion\ncy.wait(500);\ncy.get('div[role="dialog"]').should('be.visible');\ncy.wait(500);\ntreasury_definition_1.TreasuryDefinition.submitSaving();\ncy.wait(1500);\ncy.get('div[role="dialog"]').should("not.exist");*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=accountId]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=accountId]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:103:0)","diff":null}*false*false
2024-09-04T13:04:31.822Z*Treasury definition List View*1.Verify all the Column Headers are displayed on the Listview*16111*slow*passed*true*0*0**treasury_definition_1.TreasuryDefinition.landing();\ncy.wait(1500);\ncy.get("table").then((table) => {\n    // Verify Table Column Headers\n    if (table.find("th").first().is(":visible")) {\n        cy.wrap(table)\n            .find("th")\n            .eq(0)\n            .contains(/treasury code/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(1)\n            .contains(/treasury name/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(2)\n            .contains(/currency/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(3)\n            .contains(/gl account/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(4)\n            .contains(/balance/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(5)\n            .contains(/actions/i)\n            .should("be.visible");\n    }\n    else {\n        cy.log("Table Header is not Visible");\n    }\n});\n// Verify Paginator\ncy.get('div[data-pc-section="root"]')\n    .should("be.visible")\n    .should("have.class", "p-paginator")\n    .should("have.class", "p-component");*{}*false*false
2024-09-04T13:04:31.822Z*Treasury definition List View*2.should filter the table based on search input in the first two columns*20373*slow*passed*true*0*0**treasury_definition_1.TreasuryDefinition.landing();\ncy.wait(1000);\ncy.verifySearchFunctionality();*{}*false*false
2024-09-04T13:04:31.822Z*Treasury definition List View*3.Verify Deleting A Treasury definition*24553*slow*passed*true*0*0**treasury_definition_1.TreasuryDefinition.landing();\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.clickFirstDeleteActionButton();\ncy.confirmDeletePopUp();\n// Assertion\ncy.wait(1000);\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) - 1);\n    });\n});*{}*false*false
2024-09-04T13:08:22.344Z*Bank Definition (Add)*1.Verify All components are displaying*19707*slow*passed*true*0*0**bank_definition_1.BankDefinition.landing();\ncy.wait(3000);\nbank_definition_1.BankDefinition.clickAddNewButton();\n// Verify Header\n// cy.contains("span", /add Bank Definition/i).should("be.visible");\n// Table  Column Headers\ncy.get("th")\n    .eq(0)\n    .contains(/account number/i)\n    .should("be.visible");\ncy.get("th")\n    .eq(1)\n    .contains(/gl account code/i)\n    .should("be.visible");\ncy.get("th")\n    .eq(2)\n    .contains(/gl account name/i)\n    .should("be.visible");\ncy.get("th")\n    .eq(3)\n    .contains(/branch/i)\n    .should("be.visible");\ncy.get("th").eq(4).contains(/iban/i).should("be.visible");\ncy.get("th")\n    .eq(5)\n    .contains(/currency/i)\n    .should("be.visible");\ncy.get("th")\n    .eq(6)\n    .contains(/current balance/i)\n    .should("be.visible");\ncy.get("th")\n    .eq(7)\n    .contains(/user permission/i)\n    .should("be.visible");\ncy.get("th")\n    .eq(8)\n    .contains(/opening balance/i)\n    .should("be.visible");\ncy.get("th")\n    .eq(9)\n    .contains(/actions/i)\n    .should("be.visible");*{}*false*false
2024-09-04T13:08:22.344Z*Bank Definition (Add)*2.Verify Submitting new Bank Definition*55746**failed*0*true*0**bank_definition_1.BankDefinition.landing();\ncy.wait(3000);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\nbank_definition_1.BankDefinition.clickAddNewButton();\ncy.wait(2000);\ncy.getByTestAttribute("code").clear().type(finance_data_1.FinanceData.code);\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.getByTestAttribute("shortName").clear().type(finance_data_1.FinanceData.shortName);\ncy.getByTestAttribute("bankAddress").clear().type(finance_data_1.FinanceData.bankAddress);\ncy.getByTestAttribute("contactName").clear().type(finance_data_1.FinanceData.contactName);\ncy.getByTestAttribute("bankEmail").clear().type(finance_data_1.FinanceData.bankEmail);\ncy.getByTestAttribute("phone").clear().type(finance_data_1.FinanceData.phone);\ncy.getByTestAttribute("fax").clear().type(finance_data_1.FinanceData.fax);\nbank_definition_1.BankDefinition.addAccountNumber();\nbank_definition_1.BankDefinition.addAccountCode();\ncy.get('body').click();\nbank_definition_1.BankDefinition.addOpeningBalance();\nbank_definition_1.BankDefinition.selectAllBranches();\nbank_definition_1.BankDefinition.addIBN();\nbank_definition_1.BankDefinition.addCurrency();\nbank_definition_1.BankDefinition.selectUserPermission();\ncy.wait(1000);\nbank_definition_1.BankDefinition.clickSaveButton();\n// Assertion\ncy.wait(1000);\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.increaseScreenItemsMaxCount(100);\ncy.get("@initCount").then((initCount) => {\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) + 1);\n    });\n});*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=save]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=save]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:103:0)","diff":null}*false*false
2024-09-04T13:08:22.344Z*Bank Definition (Add)*3.Verify Required Validation and The name Field is Required*27075**failed*0*true*0**bank_definition_1.BankDefinition.landing();\nbank_definition_1.BankDefinition.clickAddNewButton();\ncy.contains("span", /required/i).should("not.exist");\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.contains("span", /required/i).should("not.exist");\ncy.getByTestAttribute("name").clear();\ncy.contains("span", /required/i).should("be.visible");\nbank_definition_1.BankDefinition.clickSaveButton();\ncy.get('span').should("include", /add/i);\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\nbank_definition_1.BankDefinition.clickSaveButton();\ncy.wait(1500);\ncy.get('span').should("not.include", /add/i);*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=save]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=save]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:103:0)","diff":null}*false*false
2024-09-04T13:08:22.344Z*Bank Definition (Add)*4.Verify Inputting Invalid Bank Email Address*18685*slow*passed*true*0*0**bank_definition_1.BankDefinition.landing();\nbank_definition_1.BankDefinition.clickAddNewButton();\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.getByTestAttribute("bankEmail").clear().type(finance_data_1.FinanceData.bankAddress);\ncy.contains("span", /invalid email address, the pattern should be :ABC@cba.com/i).should("be.visible");\ncy.getByTestAttribute("bankEmail").clear().type(finance_data_1.FinanceData.bankEmail);\ncy.contains("span", /invalid email address, the pattern should be :ABC@cba.com/i).should("not.exist");*{}*false*false
2024-09-04T13:08:22.344Z*Bank Definition (Add)*5.Verify Inputting very Long Bank Short Name*19456*slow*passed*true*0*0**bank_definition_1.BankDefinition.landing();\nbank_definition_1.BankDefinition.clickAddNewButton();\ncy.getByTestAttribute("name").clear().type(finance_data_1.FinanceData.bdName);\ncy.getByTestAttribute("shortName").clear().type(finance_data_1.FinanceData.bdName);\ncy.contains("span", /the minimum length must be 0, and the maximum length must be 5/i).should("be.visible");\ncy.getByTestAttribute("shortName").clear().type(finance_data_1.FinanceData.shortName);\ncy.contains("span", /the minimum length must be 0, and the maximum length must be 5/i).should("not.exist");*{}*false*false
2024-09-04T13:12:08.546Z*Vendor Category (Add)*1.Verify All components are displaying*24712*slow*passed*true*0*0**Vendor_category_1.VendorCategory.landing();\ncy.wait(1500);\nVendor_category_1.VendorCategory.clickAddNewButton();\n// Verify Labels\ncy.verifyLabelText("code", /category code/i);\ncy.verifyLabelText("name", /category name/i);\ncy.verifyLabelText("payableAccountId", /paypal gl account/i);\ncy.verifyLabelText("purchaseAccountId", /purchase gl account/i);\ncy.verifyLabelText("purchaseReturnAccountId", /purchase return gl account/i);\ncy.verifyLabelText("discountAccountId", /discount gl account/i);\ncy.verifyLabelText("priceListId", /price list/i);\ncy.verifyLabelText("paymentTermId", /payment terms/i);\ncy.verifyLabelText("marketType", /market type/i);\n// Verify The Dimmed Code\ncy.getByTestAttribute("code").should("have.attr", "readonly");\ncy.getByTestAttribute("code").should("have.attr", "disabled");\n// Verify All Dropdown Buttons\ncy.get('span[role="combobox"]').should('have.length', 7);*{}*false*false
2024-09-04T13:12:08.546Z*Vendor Category (Add)*2.Verify Submitting new Vendor Category*47166*slow*passed*true*0*0**Vendor_category_1.VendorCategory.landing();\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\nVendor_category_1.VendorCategory.clickAddNewButton();\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\ncy.getFirstItemInDropDownList("payableAccountId");\ncy.getFirstItemInDropDownList("purchaseAccountId");\ncy.getFirstItemInDropDownList("purchaseReturnAccountId");\ncy.getFirstItemInDropDownList("discountAccountId");\ncy.getFirstItemInDropDownList("priceListId");\ncy.getFirstItemInDropDownList("paymentTermId");\ncy.getFirstItemInDropDownList("marketType");\nVendor_category_1.VendorCategory.clickSaveButton();\n// Assertion\ncy.wait(1000);\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.get("tbody tr").last().scrollIntoView().should('be.visible');\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) + 1);\n    });\n});*{}*false*false
2024-09-04T13:12:08.546Z*Vendor Category (Add)*3.Verify Required Validation and The name Field is Required*18893*slow*passed*true*0*0**Vendor_category_1.VendorCategory.landing();\nVendor_category_1.VendorCategory.clickAddNewButton();\ncy.contains('span', /required/i).should('not.exist');\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\ncy.contains('span', /required/i).should('not.exist');\ncy.getByTestAttribute("name").clear();\ncy.contains('span', /required/i).should('be.visible');\nVendor_category_1.VendorCategory.clickSaveButton();\ncy.get('span').should("include", /add/i);\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\nVendor_category_1.VendorCategory.clickSaveButton();\ncy.wait(1500);*{}*false*false
2024-09-04T13:13:24.696Z*Vendor Category (Edit)*1.Verify All components are displaying*21903*slow*passed*true*0*0**Vendor_category_1.VendorCategory.landing();\ncy.wait(1500);\ncy.clickFirstEditActionButton();\n// Verify Labels\ncy.verifyLabelText("code", /category code/i);\ncy.verifyLabelText("name", /category name/i);\ncy.verifyLabelText("payableAccountId", /paypal gl account/i);\ncy.verifyLabelText("purchaseAccountId", /purchase gl account/i);\ncy.verifyLabelText("purchaseReturnAccountId", /purchase return gl account/i);\ncy.verifyLabelText("discountAccountId", /discount gl account/i);\ncy.verifyLabelText("priceListId", /price list/i);\ncy.verifyLabelText("paymentTermId", /payment terms/i);\ncy.verifyLabelText("marketType", /market type/i);\n// Verify The Dimmed Code\ncy.getByTestAttribute("code").should("have.attr", "readonly");\ncy.getByTestAttribute("code").should("have.attr", "disabled");\n// Verify All Dropdown Buttons\ncy.get('span[role="combobox"]').should("have.length", 7);*{}*false*false
2024-09-04T13:13:24.696Z*Vendor Category (Edit)*2.Verify Submitting Editted Vendor Category*33233*slow*passed*true*0*0**Vendor_category_1.VendorCategory.landing();\ncy.wait(3000);\ncy.clickFirstEditActionButton();\nVendor_category_1.VendorCategory.InputAllFields();\nVendor_category_1.VendorCategory.clickSaveButton();\n// Assertion\nVendor_category_1.VendorCategory.assertSuccesfulSaving();*{}*false*false
2024-09-04T13:13:24.696Z*Vendor Category (Edit)*3.Verify Required Validation and The name Field is Required*16206*slow*passed*true*0*0**Vendor_category_1.VendorCategory.landing();\ncy.clickFirstEditActionButton();\ncy.contains("span", /required/i).should("not.exist");\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\ncy.contains("span", /required/i).should("not.exist");\ncy.getByTestAttribute("name").clear();\ncy.contains("span", /required/i).should("be.visible");\nVendor_category_1.VendorCategory.clickSaveButton();\ncy.get("span").should("include", /edit/i);\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\nVendor_category_1.VendorCategory.clickSaveButton();\ncy.wait(1500);\ncy.get("span").should("not.include", /edit/i);*{}*false*false
2024-09-04T13:14:00.665Z*Customer Category (Add)*1.Verify All components are displaying*38313*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\ncy.wait(1500);\nCustomer_category_1.CustomerCategory.clickAddNewButton();\n// Verify Header\n// cy.contains("span", /add customer category/i).should("be.visible");\n// Verify Labels\ncy.verifyLabelText("code", /category code/i);\ncy.verifyLabelText("name", /category name/i);\ncy.verifyLabelText("receivableAccountId", /recievable gl account/i);\ncy.verifyLabelText("salesAccountId", /sales gl account/i);\ncy.verifyLabelText("salesReturnAccountId", /sales return gl account/i);\ncy.verifyLabelText("discountAccountId", /discount gl account/i);\ncy.verifyLabelText("priceListId", /price list/i);\ncy.verifyLabelText("paymentTermId", /payment terms/i);\ncy.verifyLabelText("marketType", /market type/i);\n// Verify The Dimmed Code\ncy.getByTestAttribute("code").should("have.attr", "readonly");\ncy.getByTestAttribute("code").should("have.attr", "disabled");\n// Verify All Dropdown Buttons\ncy.get('span[role="combobox"]').should("have.length", 7);*{}*false*false
2024-09-04T13:14:00.665Z*Customer Category (Add)*2.Verify Submitting new Customer Category*36948**failed*0*true*0**Customer_category_1.CustomerCategory.landing();\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\nCustomer_category_1.CustomerCategory.clickAddNewButton();\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\ncy.getFirstItemInDropDownList("receivableAccountId");\ncy.getFirstItemInDropDownList("salesAccountId");\ncy.getFirstItemInDropDownList("salesReturnAccountId");\ncy.getFirstItemInDropDownList("discountAccountId");\ncy.getFirstItemInDropDownList("priceListId");\ncy.getFirstItemInDropDownList("paymentTermId");\ncy.getFirstItemInDropDownList("marketType");\nCustomer_category_1.CustomerCategory.clickSaveButton();\n// Assertion\ncy.wait(1000);\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) + 1);\n    });\n});*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=save]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=save]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:103:0)","diff":null}*false*false
2024-09-04T13:14:00.665Z*Customer Category (Add)*3.Verify Required Validation and The name Field is Required*30375**failed*0*true*0**Customer_category_1.CustomerCategory.landing();\nCustomer_category_1.CustomerCategory.clickAddNewButton();\ncy.contains("span", /required/i).should("not.exist");\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\ncy.contains("span", /required/i).should("not.exist");\ncy.getByTestAttribute("name").clear();\ncy.contains("span", /required/i).should("be.visible");\nCustomer_category_1.CustomerCategory.clickSaveButton();\ncy.get('span').should("include", /add/i);\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\nCustomer_category_1.CustomerCategory.clickSaveButton();\ncy.wait(1500);\ncy.get('span').should("not.include", /add/i);*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=save]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `[data-testid=save]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:103:0)","diff":null}*false*false
2024-09-04T13:14:29.359Z*Vendor Category List View*1.Verify all the components are displayed on the Listview*18859*slow*passed*true*0*0**Vendor_category_1.VendorCategory.landing();\ncy.wait(1500);\n// Menu Item Text\ncy.get("table").then((table) => {\n    // Verify Table Column Headers\n    cy.zoomOut();\n    if (table.find("th").first().is(":visible")) {\n        cy.wrap(table)\n            .find("th")\n            .eq(0)\n            .contains(/category code/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(1)\n            .contains(/category name/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(2)\n            .contains(/payable gl account/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(3)\n            .contains(/purchase gl account /i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(4)\n            .contains(/purchase return gl account/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(5)\n            .contains(/discount gl account/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(6)\n            .scrollIntoView()\n            .contains(/price list/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(7)\n            .scrollIntoView()\n            .contains(/payment terms/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(8)\n            .scrollIntoView()\n            .contains(/market type/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(9)\n            .scrollIntoView()\n            .contains(/actions/i)\n            .should("be.visible");\n    }\n    else {\n        cy.log("Table Header is not Visible");\n    }\n});*{}*false*false
2024-09-04T13:14:29.359Z*Vendor Category List View*2.should filter the table based on search input in the first two columns*19068*slow*passed*true*0*0**Vendor_category_1.VendorCategory.landing();\ncy.wait(3000);\ncy.verifySearchFunctionalityDots();*{}*false*false
2024-09-04T13:14:29.359Z*Vendor Category List View*3.Verify Deleting A Vendor Category*22662*slow*passed*true*0*0**Vendor_category_1.VendorCategory.landing();\ncy.zoomOut();\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.clickFirstDeleteActionButton();\ncy.confirmDeletePopUp();\n// Assertion\ncy.wait(500);\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.increaseScreenItemsMaxCount(100);\ncy.get("@initCount").then((initCount) => {\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) - 1);\n    });\n});*{}*false*false
2024-09-04T13:17:12.399Z*Vendor Definition (Add)*1.Verify Adding new Vendor Definition (All fields are filled)*61689*slow*passed*true*0*0**vendor_Definition_1.VendorDefinition.landing();\ncy.wait(1500);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.clickAddNewButton();\n// Essential Header Data\nvendor_Definition_1.VendorDefinition.setName(purchase_data_1.PurchaseData.vName);\ncy.wait(750);\nvendor_Definition_1.VendorDefinition.setVendorCategoryId();\ncy.wait(750);\nvendor_Definition_1.VendorDefinition.setBirthDate();\ncy.wait(750);\nvendor_Definition_1.VendorDefinition.checkAllVendorTagIds();\ncy.wait(750);\n// VendorDefinition.uploadAttachment(PurchaseData.attachPath);\n// Information Tab\nvendor_Definition_1.VendorDefinition.setContactMobileCountryCode();\nvendor_Definition_1.VendorDefinition.setContactMobile(purchase_data_1.PurchaseData.vContactMobil);\nvendor_Definition_1.VendorDefinition.setContactPhone(purchase_data_1.PurchaseData.vContactPhone);\nvendor_Definition_1.VendorDefinition.setContactFax(purchase_data_1.PurchaseData.vContactFax);\nvendor_Definition_1.VendorDefinition.setContactEmail(purchase_data_1.PurchaseData.vContactEmail);\nvendor_Definition_1.VendorDefinition.setContactWebsite(purchase_data_1.PurchaseData.vContactWebsite);\nvendor_Definition_1.VendorDefinition.setContactPersonName(purchase_data_1.PurchaseData.vContactPersonName);\nvendor_Definition_1.VendorDefinition.setContactPersonalMobileCountryCode();\nvendor_Definition_1.VendorDefinition.setContactPersonMobile(purchase_data_1.PurchaseData.vContactPersonMobile);\nvendor_Definition_1.VendorDefinition.setContactPersonPhone(purchase_data_1.PurchaseData.vContactPersonPhone);\nvendor_Definition_1.VendorDefinition.setContactPersonEmail();\n// Address Tab\nvendor_Definition_1.VendorDefinition.switchToAddressTab();\nvendor_Definition_1.VendorDefinition.setCountryId();\ncy.wait(750);\nvendor_Definition_1.VendorDefinition.setState(purchase_data_1.PurchaseData.vState);\nvendor_Definition_1.VendorDefinition.setCityId();\ncy.wait(750);\nvendor_Definition_1.VendorDefinition.setStreet(purchase_data_1.PurchaseData.vStrat);\nvendor_Definition_1.VendorDefinition.setLongitude(purchase_data_1.PurchaseData.vLongitude);\nvendor_Definition_1.VendorDefinition.setLatitude(purchase_data_1.PurchaseData.vLatitude);\nvendor_Definition_1.VendorDefinition.setRadius(purchase_data_1.PurchaseData.vRadius);\n//Legal\nvendor_Definition_1.VendorDefinition.switchToLegalTab();\nvendor_Definition_1.VendorDefinition.setCommercialId(purchase_data_1.PurchaseData.vCommercialId);\nvendor_Definition_1.VendorDefinition.setTaxId(purchase_data_1.PurchaseData.vTaxId);\n// Financial\nvendor_Definition_1.VendorDefinition.switchToFinancialTab();\nvendor_Definition_1.VendorDefinition.setPaymentTermId();\nvendor_Definition_1.VendorDefinition.setPriceListId();\nvendor_Definition_1.VendorDefinition.setCreditLimit(purchase_data_1.PurchaseData.vCreditLimit);\nvendor_Definition_1.VendorDefinition.setCurrencyId();\n// Accounting\nvendor_Definition_1.VendorDefinition.switchToAccountingTab();\nvendor_Definition_1.VendorDefinition.setPayableAccountId();\nvendor_Definition_1.VendorDefinition.setPurchaseAccountId();\nvendor_Definition_1.VendorDefinition.setPurchaseReturnAccountId();\nvendor_Definition_1.VendorDefinition.setDiscountAccountId();\nvendor_Definition_1.VendorDefinition.clickSaveButton2();\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) + 1);\n    });\n});*{}*false*false
2024-09-04T13:17:12.399Z*Vendor Definition (Add)*2.Verify Requird Validation*20319*slow*passed*true*0*0**vendor_Definition_1.VendorDefinition.landing();\ncy.wait(1000);\ncy.clickAddNewButton();\ncy.get('div[class="error ng-star-inserted"]').should("not.exist");\nvendor_Definition_1.VendorDefinition.clickSaveButton2();\ncy.get('div[class="error ng-star-inserted"]').should("be.visible");\nvendor_Definition_1.VendorDefinition.setName(purchase_data_1.PurchaseData.vName);\nvendor_Definition_1.VendorDefinition.clearName();\ncy.get('div[class="error ng-star-inserted"]').should("be.visible");\nvendor_Definition_1.VendorDefinition.setName(purchase_data_1.PurchaseData.vName);\ncy.get('div[class="error ng-star-inserted"]').should("not.exist");*{}*false*false
2024-09-04T13:17:12.399Z*Vendor Definition (Add)*3.Verify Labels*18965*slow*passed*true*0*0**vendor_Definition_1.VendorDefinition.landing();\ncy.wait(1000);\ncy.clickAddNewButton();\n// Information Tab\ncy.verifyLabelText("code", /vendor code/i);\ncy.verifyLabelText("name", /vendor name/i);\ncy.verifyLabelText("vendorCategoryId", /category/i);\ncy.verifyLabelText("VendorTagIds", /vendor tag/i);\ncy.verifyLabelText("birthDate", /birth date/i);\ncy.verifyLabelText("ContactMobileCode", /code/i);\ncy.verifyLabelText("contactMobile", /contact mobile/i);\ncy.verifyLabelText("contactPhone", /contact phone/i);\ncy.verifyLabelText("contactFax", /contact fax/i);\ncy.verifyLabelText("contactEmail", /contact email/i);\ncy.verifyLabelText("contactWebsite", /contact website/i);\ncy.verifyLabelText("contactPersonName", /contact person name/i);\ncy.verifyLabelText("ContactPersonMobileCode", /code/i);\ncy.verifyLabelText("contactPersonMobile", /contact person mobile/i);\ncy.verifyLabelText("contactPersonPhone", /contact person phone/i);\ncy.verifyLabelText("contactPersonEmail", /contact person email/i);\n// Address Tab\nvendor_Definition_1.VendorDefinition.switchToAddressTab();\ncy.verifyLabelText("countryId", /country/i);\ncy.verifyLabelText("state", /state/i);\ncy.verifyLabelText("cityId", /city/i);\ncy.verifyLabelText("street", /street/i);\ncy.verifyLabelText("longitude", /longitude/i);\ncy.verifyLabelText("latitude", /latitude/i);\ncy.verifyLabelText("radius", /radius/i);\n//Legal\nvendor_Definition_1.VendorDefinition.switchToLegalTab();\ncy.verifyLabelText("commercialId", /commercial id/i);\ncy.verifyLabelText("taxId", /tax id/i);\n// Financial\nvendor_Definition_1.VendorDefinition.switchToFinancialTab();\ncy.verifyLabelText("paymentTermId", /payment term/i);\ncy.verifyLabelText("priceListId", /price list/i);\ncy.verifyLabelText("creditLimit", /credit limit/i);\ncy.verifyLabelText("currencyId", /currency/i);\n// Accounting\nvendor_Definition_1.VendorDefinition.switchToAccountingTab();\ncy.verifyLabelText("payableAccountId", /receivable account/i);\ncy.verifyLabelText("purchaseAccountId", /purchase account/i);\ncy.verifyLabelText("purchaseReturnAccountId", /purchase return account/i);\ncy.verifyLabelText("discountAccountId", /discount account/i);*{}*false*false
2024-09-04T13:19:54.175Z*Vendor Definition (Edit)*1.Verify Editing Existing Vendor Definition (All fields are filled)*67274*slow*passed*true*0*0**vendor_Definition_1.VendorDefinition.landing();\ncy.wait(1500);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.clickFirstEditActionButton();\n// Essential Header Data\nvendor_Definition_1.VendorDefinition.setName(purchase_data_1.PurchaseData.vName);\ncy.wait(750);\nvendor_Definition_1.VendorDefinition.setVendorCategoryId();\ncy.wait(750);\nvendor_Definition_1.VendorDefinition.setBirthDate();\n// cy.wait(750);\n// VendorDefinition.unCheckAllVendorTagIds();\ncy.wait(750);\n// VendorDefinition.uploadAttachment(PurchaseData.attachPath);\n// Information Tab\nvendor_Definition_1.VendorDefinition.setContactMobileCountryCode();\nvendor_Definition_1.VendorDefinition.setContactMobile(purchase_data_1.PurchaseData.vContactMobil);\nvendor_Definition_1.VendorDefinition.setContactPhone(purchase_data_1.PurchaseData.vContactPhone);\nvendor_Definition_1.VendorDefinition.setContactFax(purchase_data_1.PurchaseData.vContactFax);\nvendor_Definition_1.VendorDefinition.setContactEmail(purchase_data_1.PurchaseData.vContactEmail);\nvendor_Definition_1.VendorDefinition.setContactWebsite(purchase_data_1.PurchaseData.vContactWebsite);\nvendor_Definition_1.VendorDefinition.setContactPersonName(purchase_data_1.PurchaseData.vContactPersonName);\nvendor_Definition_1.VendorDefinition.setContactPersonalMobileCountryCode();\nvendor_Definition_1.VendorDefinition.setContactPersonMobile(purchase_data_1.PurchaseData.vContactPersonMobile);\nvendor_Definition_1.VendorDefinition.setContactPersonPhone(purchase_data_1.PurchaseData.vContactPersonPhone);\nvendor_Definition_1.VendorDefinition.setContactPersonEmail();\n// Address Tab\nvendor_Definition_1.VendorDefinition.switchToAddressTab();\nvendor_Definition_1.VendorDefinition.setCountryId();\ncy.wait(750);\nvendor_Definition_1.VendorDefinition.setState(purchase_data_1.PurchaseData.vState);\nvendor_Definition_1.VendorDefinition.setCityId();\ncy.wait(750);\nvendor_Definition_1.VendorDefinition.setStreet(purchase_data_1.PurchaseData.vStrat);\nvendor_Definition_1.VendorDefinition.setLongitude(purchase_data_1.PurchaseData.vLongitude);\nvendor_Definition_1.VendorDefinition.setLatitude(purchase_data_1.PurchaseData.vLatitude);\nvendor_Definition_1.VendorDefinition.setRadius(purchase_data_1.PurchaseData.vRadius);\n//Legal\nvendor_Definition_1.VendorDefinition.switchToLegalTab();\nvendor_Definition_1.VendorDefinition.setCommercialId(purchase_data_1.PurchaseData.vCommercialId);\nvendor_Definition_1.VendorDefinition.setTaxId(purchase_data_1.PurchaseData.vTaxId);\n// Financial\nvendor_Definition_1.VendorDefinition.switchToFinancialTab();\nvendor_Definition_1.VendorDefinition.setPaymentTermId();\nvendor_Definition_1.VendorDefinition.setCreditLimit(purchase_data_1.PurchaseData.vCreditLimit);\nvendor_Definition_1.VendorDefinition.setPriceListId();\nvendor_Definition_1.VendorDefinition.setCurrencyId();\n// Accounting\nvendor_Definition_1.VendorDefinition.switchToAccountingTab();\nvendor_Definition_1.VendorDefinition.setPayableAccountId();\nvendor_Definition_1.VendorDefinition.setPurchaseAccountId();\nvendor_Definition_1.VendorDefinition.setPurchaseReturnAccountId();\nvendor_Definition_1.VendorDefinition.setDiscountAccountId();\nvendor_Definition_1.VendorDefinition.clickSaveButton();\ncy.increaseScreenItemsMaxCount(100);\ncy.get("@initCount").then((initCount) => {\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount));\n    });\n});\ncy.verifyFirstCellInTable(1, purchase_data_1.PurchaseData.vName);\ncy.verifyFirstCellInTable(3, purchase_data_1.PurchaseData.vContactEmail);\ncy.get("@paymentTermIdTxt").then((paymentTermIdTxt) => {\n    cy.verifyFirstCellInTable(5, (0, utils_1.getWrappedString)(paymentTermIdTxt));\n});\ncy.verifyFirstCellInTable(6, purchase_data_1.PurchaseData.vCreditLimit);*{}*false*false
2024-09-04T13:19:54.175Z*Vendor Definition (Edit)*2.Verify Requird Validation*14601*slow*passed*true*0*0**vendor_Definition_1.VendorDefinition.landing();\ncy.wait(1000);\ncy.clickFirstEditActionButton();\ncy.get('span[class="errorMessage ng-star-inserted"]').should("not.exist");\nvendor_Definition_1.VendorDefinition.clearName();\ncy.get('span[class="errorMessage ng-star-inserted"]').should("be.visible");\nvendor_Definition_1.VendorDefinition.setName(purchase_data_1.PurchaseData.vName);\ncy.get('span[class="errorMessage ng-star-inserted"]').should("not.exist");*{}*false*false
2024-09-04T13:19:54.175Z*Vendor Definition (Edit)*3.Verify Labels*21186*slow*passed*true*0*0**vendor_Definition_1.VendorDefinition.landing();\ncy.wait(1000);\ncy.clickFirstEditActionButton();\n// // cy.contains("span", /edit vendor definition/i).should("be.visible");\n// Information Tab\ncy.verifyLabelText("code", /vendor code/i);\ncy.verifyLabelText("name", /vendor name/i);\ncy.verifyLabelText("vendorCategoryId", /category/i);\ncy.verifyLabelText("VendorTagIds", /vendor tag/i);\ncy.verifyLabelText("birthDate", /birth date/i);\ncy.verifyLabelText("ContactMobileCode", /code/i);\ncy.verifyLabelText("contactMobile", /contact mobile/i);\ncy.verifyLabelText("contactPhone", /contact phone/i);\ncy.verifyLabelText("contactFax", /contact fax/i);\ncy.verifyLabelText("contactEmail", /contact email/i);\ncy.verifyLabelText("contactWebsite", /contact website/i);\ncy.verifyLabelText("contactPersonName", /contact person name/i);\ncy.verifyLabelText("ContactPersonMobileCode", /code/i);\ncy.verifyLabelText("contactPersonMobile", /contact person mobile/i);\ncy.verifyLabelText("contactPersonPhone", /contact person phone/i);\ncy.verifyLabelText("contactPersonEmail", /contact person email/i);\n// Address Tab\nvendor_Definition_1.VendorDefinition.switchToAddressTab();\ncy.verifyLabelText("countryId", /country/i);\ncy.verifyLabelText("state", /state/i);\ncy.verifyLabelText("cityId", /city/i);\ncy.verifyLabelText("street", /street/i);\ncy.verifyLabelText("longitude", /longitude/i);\ncy.verifyLabelText("latitude", /latitude/i);\ncy.verifyLabelText("radius", /radius/i);\n//Legal\nvendor_Definition_1.VendorDefinition.switchToLegalTab();\ncy.verifyLabelText("commercialId", /commercial id/i);\ncy.verifyLabelText("taxId", /tax id/i);\n// Financial\nvendor_Definition_1.VendorDefinition.switchToFinancialTab();\ncy.verifyLabelText("paymentTermId", /payment term/i);\ncy.verifyLabelText("priceListId", /price list/i);\ncy.verifyLabelText("creditLimit", /credit limit/i);\ncy.verifyLabelText("currencyId", /currency/i);\n// Accounting\nvendor_Definition_1.VendorDefinition.switchToAccountingTab();\ncy.verifyLabelText("payableAccountId", /receivable account/i);\ncy.verifyLabelText("purchaseAccountId", /purchase account/i);\ncy.verifyLabelText("purchaseReturnAccountId", /purchase return account/i);\ncy.verifyLabelText("discountAccountId", /discount account/i);*{}*false*false
2024-09-04T13:20:55.313Z*Vendor Definition (Delete)*1.Verify all the components are displayed on the Listview*18249*slow*passed*true*0*0**vendor_Definition_1.VendorDefinition.landing();\ncy.wait(1500);\ncy.zoomOut();\ncy.get("table").then((table) => {\n    // Verify Table Column Headers\n    if (table.find("th").first().is(":visible")) {\n        cy.wrap(table)\n            .find("th")\n            .eq(0)\n            .contains(/vendor code/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(1)\n            .contains(/vendor name/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(2)\n            .contains(/vendor category/i)\n            .should("be.visible");\n        cy.wrap(table).find("th").eq(3).contains(/email/i).should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(4)\n            .contains(/country/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(5)\n            .contains(/payment term/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(6)\n            .scrollIntoView()\n            .contains(/credit limit/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(7)\n            .scrollIntoView()\n            .contains(/actions/i)\n            .should("be.visible");\n    }\n    else {\n        cy.log("Table Header is not Visible");\n    }\n});*{}*false*false
2024-09-04T13:20:55.313Z*Vendor Definition (Delete)*2.should filter the table based on search input in the first two columns*16422*slow*passed*true*0*0**vendor_Definition_1.VendorDefinition.landing();\ncy.wait(500);\ncy.verifySearchFunctionalityDots();*{}*false*false
2024-09-04T13:20:55.313Z*Vendor Definition (Delete)*3.Verify Deleting An Existing Vendor Definition (All fields are filled)*21726*slow*passed*true*0*0**vendor_Definition_1.VendorDefinition.landing();\ncy.wait(500);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.clickFirstDeleteActionButton();\ncy.confirmDeletePopUp();\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) - 1);\n    });\n});*{}*false*false
2024-09-04T13:29:17.648Z*Customer Category (Add)*1.Verify All components are displaying*21680*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\ncy.wait(1500);\nCustomer_category_1.CustomerCategory.clickAddNewButton();\n// Verify Header\n// Verify Labels\ncy.verifyLabelText("code", /category code/i);\ncy.verifyLabelText("name", /category name/i);\ncy.verifyLabelText("receivableAccountId", /recievable gl account/i);\ncy.verifyLabelText("salesAccountId", /sales gl account/i);\ncy.verifyLabelText("salesReturnAccountId", /sales return gl account/i);\ncy.verifyLabelText("discountAccountId", /discount gl account/i);\ncy.verifyLabelText("priceListId", /price list/i);\ncy.verifyLabelText("paymentTermId", /payment terms/i);\ncy.verifyLabelText("marketType", /market type/i);\n// Verify The Dimmed Code\ncy.getByTestAttribute("code").should("have.attr", "readonly");\ncy.getByTestAttribute("code").should("have.attr", "disabled");\n// Verify All Dropdown Buttons\ncy.get('span[role="combobox"]').should("have.length", 7);*{}*false*false
2024-09-04T13:29:17.648Z*Customer Category (Add)*2.Verify Submitting new Customer Category*32127*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\nCustomer_category_1.CustomerCategory.clickAddNewButton();\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\ncy.getFirstItemInDropDownList("receivableAccountId");\ncy.getFirstItemInDropDownList("salesAccountId");\ncy.getFirstItemInDropDownList("salesReturnAccountId");\ncy.getFirstItemInDropDownList("discountAccountId");\ncy.getFirstItemInDropDownList("priceListId");\ncy.getFirstItemInDropDownList("paymentTermId");\ncy.getFirstItemInDropDownList("marketType");\nCustomer_category_1.CustomerCategory.clickSaveButton();\n// Assertion\ncy.wait(1000);\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) + 1);\n    });\n});*{}*false*false
2024-09-04T13:29:17.648Z*Customer Category (Add)*3.Verify Required Validation and The name Field is Required*17723*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\nCustomer_category_1.CustomerCategory.clickAddNewButton();\ncy.contains("span", /required/i).should("not.exist");\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\ncy.contains("span", /required/i).should("not.exist");\ncy.getByTestAttribute("name").clear();\ncy.contains("span", /required/i).should("be.visible");\nCustomer_category_1.CustomerCategory.clickSaveButton();\ncy.get('span').should("include", /add/i);\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\nCustomer_category_1.CustomerCategory.clickSaveButton();\ncy.wait(1500);\ncy.get('span').should("not.include", /add/i);*{}*false*false
2024-09-04T13:31:06.541Z*Customer Category (Edit)*1.Verify All components are displaying*23590*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\ncy.wait(1500);\ncy.clickFirstEditActionButton();\n// Verify Labels\ncy.verifyLabelText("code", /category code/i);\ncy.verifyLabelText("name", /category name/i);\ncy.verifyLabelText("receivableAccountId", /recievable gl account/i);\ncy.verifyLabelText("salesAccountId", /sales gl account/i);\ncy.verifyLabelText("salesReturnAccountId", /sales return gl account/i);\ncy.verifyLabelText("discountAccountId", /discount gl account/i);\ncy.verifyLabelText("priceListId", /price list/i);\ncy.verifyLabelText("paymentTermId", /payment terms/i);\ncy.verifyLabelText("marketType", /market type/i);\n// Verify The Dimmed Code\ncy.getByTestAttribute("code").should("have.attr", "readonly");\ncy.getByTestAttribute("code").should("have.attr", "disabled");\n// Verify All Dropdown Buttons\ncy.get('span[role="combobox"]').should("have.length", 7);*{}*false*false
2024-09-04T13:31:06.541Z*Customer Category (Edit)*2.Verify Submitting Editted Customer Category*32373**failed*0*true*0**Customer_category_1.CustomerCategory.landing();\ncy.clickFirstEditActionButton();\nCustomer_category_1.CustomerCategory.InputAllFields();\nCustomer_category_1.CustomerCategory.clickSaveButton();\n// Assertion\nCustomer_category_1.CustomerCategory.assertSuccesfulSaving();*{"message":"AssertionError: expected '' to equal 'payment_terma1'","estack":"AssertionError: expected '' to equal 'payment_terma1'\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:485:0)","diff":"+ 'payment_terma1'\n"}*false*false
2024-09-04T13:31:06.541Z*Customer Category (Edit)*3.Verify Required Validation and The name Field is Required*21805*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\nCustomer_category_1.CustomerCategory.reloadAgain();\ncy.clickFirstEditActionButton();\ncy.contains("span", /required/i).should("not.exist");\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\ncy.contains("span", /required/i).should("not.exist");\ncy.getByTestAttribute("name").clear();\ncy.contains("span", /required/i).should("be.visible");\nCustomer_category_1.CustomerCategory.clickSaveButton();\ncy.get("span").should("include", /edit/i);\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\nCustomer_category_1.CustomerCategory.clickSaveButton();\ncy.wait(1500);\ncy.get("span").should("not.include", /edit/i);*{}*false*false
2024-09-04T13:32:17.026Z*Customer Category List View*1.Verify all the Column Headers are displayed on the Listview*22318*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\ncy.wait(1500);\ncy.zoomOut();\ncy.get("table").then((table) => {\n    // Verify Table Column Headers\n    if (table.find("th").first().is(":visible")) {\n        cy.wrap(table)\n            .find("th")\n            .eq(0)\n            .contains(/category code/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(1)\n            .contains(/category name/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(2)\n            .contains(/recievable gl account/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(3)\n            .contains(/sales gl account/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(4)\n            .contains(/sales return gl account/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(5)\n            .contains(/discount gl account/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(6)\n            .scrollIntoView()\n            .contains(/price list/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(7)\n            .scrollIntoView()\n            .contains(/payment terms/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(8)\n            .scrollIntoView()\n            .contains(/market type/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(9)\n            .scrollIntoView()\n            .contains(/actions/i)\n            .should("be.visible");\n    }\n    else {\n        cy.log("Table Header is not Visible");\n    }\n});*{}*false*false
2024-09-04T13:32:17.026Z*Customer Category List View*2.Verify Deleting A Customer Category*24970*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.clickFirstDeleteActionButton();\ncy.confirmDeletePopUp();\n// Assertion\ncy.wait(500);\ncy.reload();\ncy.wait(500);\ncy.clickContinueAs();\ncy.wait(500);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) - 1);\n    });\n});*{}*false*false
2024-09-04T13:32:17.026Z*Customer Category List View*3.should filter the table based on search input in the first two columns*18894*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\ncy.wait(500);\ncy.verifySearchFunctionalityDots();*{}*false*false
2024-09-04T13:35:38.846Z*Customer Definition (Add)*1.Verify Adding new Customer Definition (All fields are filled)*62135*slow*passed*true*0*0**customer_Definition_1.CustomerDefinition.landing();\ncy.wait(1500);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncustomer_Definition_1.CustomerDefinition.clickAddNewButton();\n// Essential Header Data\ncustomer_Definition_1.CustomerDefinition.setName(sales_data_1.SalesData.cName);\ncy.wait(750);\ncustomer_Definition_1.CustomerDefinition.setCustomerCategoryId();\ncy.wait(750);\ncustomer_Definition_1.CustomerDefinition.setBirthDate();\ncy.wait(750);\ncustomer_Definition_1.CustomerDefinition.setCustomerTagIds();\n// CustomerDefinition.uploadAttachment(SalesData.attachPath);\n// Information Tab\ncustomer_Definition_1.CustomerDefinition.setContactMobileCountryCode();\ncustomer_Definition_1.CustomerDefinition.setContactMobile(sales_data_1.SalesData.cContactMobil);\ncustomer_Definition_1.CustomerDefinition.setContactPhone(sales_data_1.SalesData.cContactPhone);\ncustomer_Definition_1.CustomerDefinition.setContactFax(sales_data_1.SalesData.cContactFax);\ncustomer_Definition_1.CustomerDefinition.setContactEmail(sales_data_1.SalesData.cContactEmail);\ncustomer_Definition_1.CustomerDefinition.setContactWebsite(sales_data_1.SalesData.cContactWebsite);\ncustomer_Definition_1.CustomerDefinition.setContactPersonName(sales_data_1.SalesData.cContactPersonName);\ncustomer_Definition_1.CustomerDefinition.setContactPersonalMobileCountryCode();\ncustomer_Definition_1.CustomerDefinition.setContactPersonMobile(sales_data_1.SalesData.cContactPersonMobile);\ncustomer_Definition_1.CustomerDefinition.setContactPersonPhone(sales_data_1.SalesData.cContactPersonPhone);\n// CustomerDefinition.setContactPersonEmail();\n// Address Tab\ncustomer_Definition_1.CustomerDefinition.switchToAddressTab();\ncustomer_Definition_1.CustomerDefinition.setCountryId();\ncy.wait(500);\ncustomer_Definition_1.CustomerDefinition.setState(sales_data_1.SalesData.cState);\ncustomer_Definition_1.CustomerDefinition.setCityId();\ncy.wait(500);\ncustomer_Definition_1.CustomerDefinition.setStreet(sales_data_1.SalesData.cStrat);\ncustomer_Definition_1.CustomerDefinition.setLongitude(sales_data_1.SalesData.cLongitude);\ncustomer_Definition_1.CustomerDefinition.setLatitude(sales_data_1.SalesData.cLatitude);\ncustomer_Definition_1.CustomerDefinition.setRadius(sales_data_1.SalesData.cRadius);\n//Legal\ncustomer_Definition_1.CustomerDefinition.switchToLegalTab();\ncustomer_Definition_1.CustomerDefinition.setCommercialId(sales_data_1.SalesData.cCommercialId);\ncustomer_Definition_1.CustomerDefinition.setTaxId(sales_data_1.SalesData.cTaxId);\n// Financial\ncustomer_Definition_1.CustomerDefinition.switchToFinancialTab();\ncustomer_Definition_1.CustomerDefinition.setPaymentTermId();\ncustomer_Definition_1.CustomerDefinition.setPriceListId();\ncustomer_Definition_1.CustomerDefinition.setCreditLimit(sales_data_1.SalesData.cCreditLimit);\ncustomer_Definition_1.CustomerDefinition.setCurrencyId();\n// Accounting\ncustomer_Definition_1.CustomerDefinition.switchToAccountingTab();\ncustomer_Definition_1.CustomerDefinition.setReceivableAccountId();\ncustomer_Definition_1.CustomerDefinition.setSalesAccountId();\ncustomer_Definition_1.CustomerDefinition.setSalesReturnAccountId();\ncustomer_Definition_1.CustomerDefinition.setDiscountAccountId();\ncustomer_Definition_1.CustomerDefinition.clickSaveButton();\ncy.wait(6000);\ncy.increaseScreenItemsMaxCount(100);\ncy.get("@initCount").then((initCount) => {\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) + 1);\n    });\n});*{}*false*false
2024-09-04T13:35:38.846Z*Customer Definition (Add)*2.Verify Requird Validation*19746*slow*passed*true*0*0**customer_Definition_1.CustomerDefinition.landing();\ncy.wait(1000);\ncustomer_Definition_1.CustomerDefinition.clickAddNewButton();\ncy.verifyNotExistanceTheRequiredValidation();\ncustomer_Definition_1.CustomerDefinition.setName(sales_data_1.SalesData.cName);\ncustomer_Definition_1.CustomerDefinition.clearName();\ncy.verifyDisplayingTheRequiredValidationMsgsCount(1);\ncustomer_Definition_1.CustomerDefinition.setName(sales_data_1.SalesData.cName);\ncy.verifyNotExistanceTheRequiredValidation();*{}*false*false
2024-09-04T13:35:38.846Z*Customer Definition (Add)*3.Verify Labels*27586**failed*0*true*0**customer_Definition_1.CustomerDefinition.landing();\ncy.wait(1000);\ncustomer_Definition_1.CustomerDefinition.clickAddNewButton();\n// Information Tab\ncy.verifyLabelText("code", /Customer code/i);\ncy.verifyLabelText("name", /Customer name/i);\ncy.verifyLabelText("categoryId", /category/i);\ncy.verifyLabelText("tagIds", /Customer tag/i);\ncy.verifyLabelText("birthdate", /birth date/i);\ncy.verifyLabelText("ContactMobileCode", /code/i);\ncy.verifyLabelText("contactMobile", /contact mobile/i);\ncy.verifyLabelText("contactPhone", /contact phone/i);\ncy.verifyLabelText("contactFax", /contact fax/i);\ncy.verifyLabelText("contactEmail", /contact email/i);\ncy.verifyLabelText("contactWebsite", /contact website/i);\ncy.verifyLabelText("contactPersonName", /contact person name/i);\ncy.verifyLabelText("ContactPersonMobileCode", /code/i);\ncy.verifyLabelText("contactPersonMobile", /contact person mobile/i);\ncy.verifyLabelText("contactPersonPhone", /contact person phone/i);\ncy.verifyLabelText("contactEmail", /contact person email/i);\n// Address Tab\ncustomer_Definition_1.CustomerDefinition.switchToAddressTab();\ncy.verifyLabelText("countryId", /country/i);\ncy.verifyLabelText("state", /state/i);\ncy.verifyLabelText("cityId", /city/i);\ncy.verifyLabelText("street", /street/i);\ncy.verifyLabelText("longitude", /longitude/i);\ncy.verifyLabelText("latitude", /latitude/i);\ncy.verifyLabelText("errorRadius", /error radius/i);\n//Legal\ncustomer_Definition_1.CustomerDefinition.switchToLegalTab();\ncy.verifyLabelText("commercialId", /commercial id/i);\ncy.verifyLabelText("taxId", /tax id/i);\n// Financial\ncustomer_Definition_1.CustomerDefinition.switchToFinancialTab();\ncy.verifyLabelText("paymentTermId", /payment term/i);\ncy.verifyLabelText("priceListId", /price list/i);\ncy.verifyLabelText("creditLimit", /credit limit/i);\ncy.verifyLabelText("currencyId", /currency/i);\n// Accounting\ncustomer_Definition_1.CustomerDefinition.switchToAccountingTab();\ncy.verifyLabelText("receivableAccountId", /receivable account/i);\ncy.verifyLabelText("salesAccountId", /purchase account/i);\ncy.verifyLabelText("salesReturnAccountId", /purchase return account/i);\ncy.verifyLabelText("discountAccountId", /discount account/i);*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `label[for=ContactMobileCode]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `label[for=ContactMobileCode]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:83:0)","diff":null}*false*false
2024-09-04T13:37:54.746Z*Customer Definition (Edit)*1.Verify Editing Existing Customer Definition (All fields are filled)*34163**failed*0*true*0**customer_Definition_1.CustomerDefinition.landing();\ncustomer_Definition_1.CustomerDefinition.prepare();\ncy.clickFirstEditActionButton();\n// Essential Header Data\ncustomer_Definition_1.CustomerDefinition.setName(sales_data_1.SalesData.cName);\ncy.wait(750);\ncustomer_Definition_1.CustomerDefinition.setCustomerCategoryId();\ncy.wait(750);\ncustomer_Definition_1.CustomerDefinition.setBirthDate();\ncy.wait(750);\ncustomer_Definition_1.CustomerDefinition.setCustomerTagIds();\n// CustomerDefinition.uploadAttachment(SalesData.attachPath);\n// Information Tab\ncustomer_Definition_1.CustomerDefinition.setContactMobileCountryCode();\ncustomer_Definition_1.CustomerDefinition.setContactMobile(sales_data_1.SalesData.cContactMobil);\ncustomer_Definition_1.CustomerDefinition.setContactPhone(sales_data_1.SalesData.cContactPhone);\ncustomer_Definition_1.CustomerDefinition.setContactFax(sales_data_1.SalesData.cContactFax);\ncustomer_Definition_1.CustomerDefinition.setContactEmail(sales_data_1.SalesData.cContactEmail);\ncustomer_Definition_1.CustomerDefinition.setContactWebsite(sales_data_1.SalesData.cContactWebsite);\ncustomer_Definition_1.CustomerDefinition.setContactPersonName(sales_data_1.SalesData.cContactPersonName);\ncustomer_Definition_1.CustomerDefinition.setContactPersonalMobileCountryCode();\ncustomer_Definition_1.CustomerDefinition.setContactPersonMobile(sales_data_1.SalesData.cContactPersonMobile);\ncustomer_Definition_1.CustomerDefinition.setContactPersonPhone(sales_data_1.SalesData.cContactPersonPhone);\n// CustomerDefinition.setContactPersonEmail();\n// Address Tab\ncustomer_Definition_1.CustomerDefinition.switchToAddressTab();\ncustomer_Definition_1.CustomerDefinition.setCountryId();\ncy.wait(500);\ncustomer_Definition_1.CustomerDefinition.setState(sales_data_1.SalesData.cState);\ncustomer_Definition_1.CustomerDefinition.setCityId();\ncy.wait(500);\ncustomer_Definition_1.CustomerDefinition.setStreet(sales_data_1.SalesData.cStrat);\ncustomer_Definition_1.CustomerDefinition.setLongitude(sales_data_1.SalesData.cLongitude);\ncustomer_Definition_1.CustomerDefinition.setLatitude(sales_data_1.SalesData.cLatitude);\ncustomer_Definition_1.CustomerDefinition.setRadius(sales_data_1.SalesData.cRadius);\n//Legal\ncustomer_Definition_1.CustomerDefinition.switchToLegalTab();\ncustomer_Definition_1.CustomerDefinition.setCommercialId(sales_data_1.SalesData.cCommercialId);\ncustomer_Definition_1.CustomerDefinition.setTaxId(sales_data_1.SalesData.cTaxId);\n// Financial\ncustomer_Definition_1.CustomerDefinition.switchToFinancialTab();\ncustomer_Definition_1.CustomerDefinition.setPaymentTermId();\ncustomer_Definition_1.CustomerDefinition.setPriceListId();\ncustomer_Definition_1.CustomerDefinition.setCreditLimit(sales_data_1.SalesData.cCreditLimit);\ncustomer_Definition_1.CustomerDefinition.setCurrencyId();\n// Accounting\ncustomer_Definition_1.CustomerDefinition.switchToAccountingTab();\ncustomer_Definition_1.CustomerDefinition.setReceivableAccountId();\ncustomer_Definition_1.CustomerDefinition.setSalesAccountId();\ncustomer_Definition_1.CustomerDefinition.setSalesReturnAccountId();\ncustomer_Definition_1.CustomerDefinition.setDiscountAccountId();\ncustomer_Definition_1.CustomerDefinition.clickSaveButton();\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount));\n    });\n});\ncy.verifyFirstCellInTable(1, sales_data_1.SalesData.cName);\n// cy.get('@CustomerCategoryId').then((CustomerCategoryId) => {\n//   cy.verifyFirstCellInTable(2, getWrappedString(CustomerCategoryId));\n// });\ncy.verifyFirstCellInTable(3, sales_data_1.SalesData.cContactEmail);\n// cy.get('@countryId').then((countryId) => {\n//   cy.verifyFirstCellInTable(4, getWrappedString(countryId));\n// });\n// cy.get('@paymentTermId').then((paymentTermId) => {\n//   cy.verifyFirstCellInTable(5, getWrappedString(paymentTermId));\n// });\ncy.verifyFirstCellInTable(6, sales_data_1.SalesData.cCreditLimit);*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `div[class=\"p-multiselect-label p-placeholder\"]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `div[class=\"p-multiselect-label p-placeholder\"]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:39:0)","diff":null}*false*false
2024-09-04T13:37:54.746Z*Customer Definition (Edit)*2.Verify Requird Validation*18594*slow*passed*true*0*0**customer_Definition_1.CustomerDefinition.landing();\ncy.wait(1000);\ncy.clickFirstEditActionButton();\ncy.get("lib-form-group")\n    .find('span[class="errorMessage ng-star-inserted"]')\n    .should("not.exist");\ncustomer_Definition_1.CustomerDefinition.clearName();\ncy.get("lib-form-group")\n    .find('span[class="errorMessage ng-star-inserted"]')\n    .should("be.visible");\ncustomer_Definition_1.CustomerDefinition.setName(sales_data_1.SalesData.cName);\ncy.get("lib-form-group")\n    .find('span[class="errorMessage ng-star-inserted"]')\n    .should("not.exist");*{}*false*false
2024-09-04T13:37:54.746Z*Customer Definition (Edit)*3.Verify Labels*15918*slow*passed*true*0*0**customer_Definition_1.CustomerDefinition.landing();\ncy.wait(1000);\ncy.clickFirstEditActionButton();\n// Information Tab\ncy.verifyLabelText("code", /Customer code/i);\ncy.verifyLabelText("name", /Customer name/i);\ncy.verifyLabelText("categoryId", /category/i);\ncy.verifyLabelText("tagIds", /Customer tag/i);\ncy.verifyLabelText("birthdate", /birth date/i);\ncy.verifyLabelText("contactMobileCode", /code/i);\ncy.verifyLabelText("contactMobile", /contact mobile/i);\ncy.verifyLabelText("contactPhone", /contact phone/i);\ncy.verifyLabelText("contactFax", /contact fax/i);\ncy.verifyLabelText("contactEmail", /contact email/i);\ncy.verifyLabelText("contactWebsite", /contact website/i);\ncy.verifyLabelText("contactPersonName", /contact person name/i);\ncy.verifyLabelText("contactPersonMobileCode", /code/i);\ncy.verifyLabelText("contactPersonMobile", /contact person mobile/i);\ncy.verifyLabelText("contactPersonPhone", /contact person phone/i);\ncy.verifyLabelText("contactEmail", /contact person email/i);\n// Address Tab\ncustomer_Definition_1.CustomerDefinition.switchToAddressTab();\ncy.verifyLabelText("countryId", /country/i);\ncy.verifyLabelText("state", /state/i);\ncy.verifyLabelText("cityId", /city/i);\ncy.verifyLabelText("street", /street/i);\ncy.verifyLabelText("longitude", /longitude/i);\ncy.verifyLabelText("latitude", /latitude/i);\ncy.verifyLabelText("errorRadius", /error radius/i);\n//Legal\ncustomer_Definition_1.CustomerDefinition.switchToLegalTab();\ncy.verifyLabelText("commercialId", /commercial id/i);\ncy.verifyLabelText("taxId", /tax id/i);\n// Financial\ncustomer_Definition_1.CustomerDefinition.switchToFinancialTab();\ncy.verifyLabelText("paymentTermId", /payment term/i);\ncy.verifyLabelText("priceListId", /price list/i);\ncy.verifyLabelText("creditLimit", /credit limit/i);\ncy.verifyLabelText("currencyId", /currency/i);\n// Accounting\ncustomer_Definition_1.CustomerDefinition.switchToAccountingTab();\ncy.verifyLabelText("receivableAccountId", /receivable account/i);\ncy.verifyLabelText("salesAccountId", /purchase account/i);\ncy.verifyLabelText("salesReturnAccountId", /purchase return account/i);\ncy.verifyLabelText("discountAccountId", /discount account/i);*{}*false*false
2024-09-04T13:39:44.970Z*Customer Definition (Delete)*1.Verify all the components are displayed on the Listview*21099*slow*passed*true*0*0**customer_Definition_1.CustomerDefinition.landing();\ncy.wait(1500);\ncy.zoomOut();\ncy.get("table").then((table) => {\n    if (table.find("th").first().is(":visible")) {\n        cy.wrap(table)\n            .find("th")\n            .eq(0)\n            .contains(/Customer code/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(1)\n            .contains(/Customer name/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(2)\n            .contains(/Customer category/i)\n            .should("be.visible");\n        cy.wrap(table).find("th").eq(3).contains(/email/i).should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(4)\n            .contains(/country/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(5)\n            .contains(/payment term/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(6)\n            .scrollIntoView()\n            .contains(/credit limit/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(7)\n            .scrollIntoView()\n            .contains(/actions/i)\n            .should("be.visible");\n    }\n    else {\n        cy.log("Table Header is not Visible");\n    }\n});*{}*false*false
2024-09-04T13:39:44.970Z*Customer Definition (Delete)*2.should filter the table based on search input in the first two columns*19338**failed*0*true*0**customer_Definition_1.CustomerDefinition.landing();\ncy.wait(1000);\ncy.verifySearchFunctionalityDots();*{"message":"AssertionError: expected 'NameWvgXk' to equal 'CA1'","estack":"AssertionError: expected 'NameWvgXk' to equal 'CA1'\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:485:0)","diff":"- 'NameWvgXk'\n+ 'CA1'\n"}*false*false
2024-09-04T13:39:44.970Z*Customer Definition (Delete)*3.Verify Deleting An Existing Customer Definition (All fields are filled)*25600**failed*0*true*0**customer_Definition_1.CustomerDefinition.landing();\ncustomer_Definition_1.CustomerDefinition.prepare();\ncy.clickFirstDeleteActionButton();\ncustomer_Definition_1.CustomerDefinition.confirmDeleteDialog();\ncustomer_Definition_1.CustomerDefinition.assertSuccessfulDeletion();*{"message":"ReferenceError: getWrappedNumber is not defined","estack":"ReferenceError: getWrappedNumber is not defined\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Sales/customer_definition/pages/customer_Definition.ts:76:0)","diff":null}*false*false
2024-09-04T14:33:46.138Z*Customer Category (Add)*1.Verify All components are displaying*21151*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\ncy.wait(1500);\nCustomer_category_1.CustomerCategory.clickAddNewButton();\n// Verify Header\n// Verify Labels\ncy.verifyLabelText("code", /category code/i);\ncy.verifyLabelText("name", /category name/i);\ncy.verifyLabelText("receivableAccountId", /recievable gl account/i);\ncy.verifyLabelText("salesAccountId", /sales gl account/i);\ncy.verifyLabelText("salesReturnAccountId", /sales return gl account/i);\ncy.verifyLabelText("discountAccountId", /discount gl account/i);\ncy.verifyLabelText("priceListId", /price list/i);\ncy.verifyLabelText("paymentTermId", /payment terms/i);\ncy.verifyLabelText("marketType", /market type/i);\n// Verify The Dimmed Code\ncy.getByTestAttribute("code").should("have.attr", "readonly");\ncy.getByTestAttribute("code").should("have.attr", "disabled");\n// Verify All Dropdown Buttons\ncy.get('span[role="combobox"]').should("have.length", 7);*{}*false*false
2024-09-04T14:33:46.138Z*Customer Category (Add)*2.Verify Submitting new Customer Category*31836*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\nCustomer_category_1.CustomerCategory.clickAddNewButton();\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\ncy.getFirstItemInDropDownList("receivableAccountId");\ncy.getFirstItemInDropDownList("salesAccountId");\ncy.getFirstItemInDropDownList("salesReturnAccountId");\ncy.getFirstItemInDropDownList("discountAccountId");\ncy.getFirstItemInDropDownList("priceListId");\ncy.getFirstItemInDropDownList("paymentTermId");\ncy.getFirstItemInDropDownList("marketType");\nCustomer_category_1.CustomerCategory.clickSaveButton();\n// Assertion\ncy.wait(1000);\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.wait(1000);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) + 1);\n    });\n});*{}*false*false
2024-09-04T14:33:46.138Z*Customer Category (Add)*3.Verify Required Validation and The name Field is Required*16840*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\nCustomer_category_1.CustomerCategory.clickAddNewButton();\ncy.contains("span", /required/i).should("not.exist");\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\ncy.contains("span", /required/i).should("not.exist");\ncy.getByTestAttribute("name").clear();\ncy.contains("span", /required/i).should("be.visible");\nCustomer_category_1.CustomerCategory.clickSaveButton();\ncy.get('span').should("include", /add/i);\ncy.getByTestAttribute("name").clear().type((0, utils_1.generateRandomString)(7));\nCustomer_category_1.CustomerCategory.clickSaveButton();\ncy.wait(1500);\ncy.get('span').should("not.include", /add/i);*{}*false*false
2024-09-04T14:34:47.095Z*Customer Category (Edit)*2.Verify Submitting Editted Customer Category*28412*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\ncy.clickFirstEditActionButton();\nCustomer_category_1.CustomerCategory.InputAllFieldsEdit();\nCustomer_category_1.CustomerCategory.clickSaveButton();\n// Assertion\nCustomer_category_1.CustomerCategory.assertSuccesfulSaving();*{}*false*false
2024-09-04T14:36:18.044Z*Customer Category List View*1.Verify all the Column Headers are displayed on the Listview*30080*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\ncy.wait(1500);\ncy.zoomOut();\ncy.get("table").then((table) => {\n    // Verify Table Column Headers\n    if (table.find("th").first().is(":visible")) {\n        cy.wrap(table)\n            .find("th")\n            .eq(0)\n            .contains(/category code/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(1)\n            .contains(/category name/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(2)\n            .contains(/recievable gl account/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(3)\n            .contains(/sales gl account/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(4)\n            .contains(/sales return gl account/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(5)\n            .contains(/discount gl account/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(6)\n            .scrollIntoView()\n            .contains(/price list/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(7)\n            .scrollIntoView()\n            .contains(/payment terms/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(8)\n            .scrollIntoView()\n            .contains(/market type/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(9)\n            .scrollIntoView()\n            .contains(/actions/i)\n            .should("be.visible");\n    }\n    else {\n        cy.log("Table Header is not Visible");\n    }\n});*{}*false*false
2024-09-04T14:36:18.044Z*Customer Category List View*2.Verify Deleting A Customer Category*31767*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncy.clickFirstDeleteActionButton();\ncy.confirmDeletePopUp();\n// Assertion\ncy.wait(500);\ncy.reload();\ncy.wait(500);\ncy.clickContinueAs();\ncy.wait(500);\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) - 1);\n    });\n});*{}*false*false
2024-09-04T14:36:18.044Z*Customer Category List View*3.should filter the table based on search input in the first two columns*25023*slow*passed*true*0*0**Customer_category_1.CustomerCategory.landing();\ncy.wait(500);\ncy.verifySearchFunctionalityDots();*{}*false*false
2024-09-04T14:38:52.305Z*Customer Definition (Add)*1.Verify Adding new Customer Definition (All fields are filled)*56500*slow*passed*true*0*0**customer_Definition_1.CustomerDefinition.landing();\ncy.wait(1500);\ncy.increaseScreenItemsMaxCount(100);\ncy.getAllItemsCount("table", "tbody tr").then((initCount) => {\n    cy.wrap(initCount).as("initCount");\n});\ncustomer_Definition_1.CustomerDefinition.clickAddNewButton();\n// Essential Header Data\ncustomer_Definition_1.CustomerDefinition.setName(sales_data_1.SalesData.cName);\ncy.wait(750);\ncustomer_Definition_1.CustomerDefinition.setCustomerCategoryId();\ncy.wait(750);\ncustomer_Definition_1.CustomerDefinition.setBirthDate();\ncy.wait(750);\ncustomer_Definition_1.CustomerDefinition.setCustomerTagIds();\n// CustomerDefinition.uploadAttachment(SalesData.attachPath);\n// Information Tab\ncustomer_Definition_1.CustomerDefinition.setContactMobileCountryCode();\ncustomer_Definition_1.CustomerDefinition.setContactMobile(sales_data_1.SalesData.cContactMobil);\ncustomer_Definition_1.CustomerDefinition.setContactPhone(sales_data_1.SalesData.cContactPhone);\ncustomer_Definition_1.CustomerDefinition.setContactFax(sales_data_1.SalesData.cContactFax);\ncustomer_Definition_1.CustomerDefinition.setContactEmail(sales_data_1.SalesData.cContactEmail);\ncustomer_Definition_1.CustomerDefinition.setContactWebsite(sales_data_1.SalesData.cContactWebsite);\ncustomer_Definition_1.CustomerDefinition.setContactPersonName(sales_data_1.SalesData.cContactPersonName);\ncustomer_Definition_1.CustomerDefinition.setContactPersonalMobileCountryCode();\ncustomer_Definition_1.CustomerDefinition.setContactPersonMobile(sales_data_1.SalesData.cContactPersonMobile);\ncustomer_Definition_1.CustomerDefinition.setContactPersonPhone(sales_data_1.SalesData.cContactPersonPhone);\n// CustomerDefinition.setContactPersonEmail();\n// Address Tab\ncustomer_Definition_1.CustomerDefinition.switchToAddressTab();\ncustomer_Definition_1.CustomerDefinition.setCountryId();\ncy.wait(500);\ncustomer_Definition_1.CustomerDefinition.setState(sales_data_1.SalesData.cState);\ncustomer_Definition_1.CustomerDefinition.setCityId();\ncy.wait(500);\ncustomer_Definition_1.CustomerDefinition.setStreet(sales_data_1.SalesData.cStrat);\ncustomer_Definition_1.CustomerDefinition.setLongitude(sales_data_1.SalesData.cLongitude);\ncustomer_Definition_1.CustomerDefinition.setLatitude(sales_data_1.SalesData.cLatitude);\ncustomer_Definition_1.CustomerDefinition.setRadius(sales_data_1.SalesData.cRadius);\n//Legal\ncustomer_Definition_1.CustomerDefinition.switchToLegalTab();\ncustomer_Definition_1.CustomerDefinition.setCommercialId(sales_data_1.SalesData.cCommercialId);\ncustomer_Definition_1.CustomerDefinition.setTaxId(sales_data_1.SalesData.cTaxId);\n// Financial\ncustomer_Definition_1.CustomerDefinition.switchToFinancialTab();\ncustomer_Definition_1.CustomerDefinition.setCurrencyId();\ncustomer_Definition_1.CustomerDefinition.setPaymentTermId();\ncustomer_Definition_1.CustomerDefinition.setPriceListId();\ncustomer_Definition_1.CustomerDefinition.setCreditLimit(sales_data_1.SalesData.cCreditLimit);\n// Accounting\ncustomer_Definition_1.CustomerDefinition.switchToAccountingTab();\ncustomer_Definition_1.CustomerDefinition.setReceivableAccountId();\ncustomer_Definition_1.CustomerDefinition.setSalesAccountId();\ncustomer_Definition_1.CustomerDefinition.setSalesReturnAccountId();\ncustomer_Definition_1.CustomerDefinition.setDiscountAccountId();\ncustomer_Definition_1.CustomerDefinition.clickSaveButton();\ncy.wait(6000);\ncy.increaseScreenItemsMaxCount(100);\ncy.get("@initCount").then((initCount) => {\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount) + 1);\n    });\n});*{}*false*false
2024-09-04T14:38:52.305Z*Customer Definition (Add)*2.Verify Requird Validation*17316*slow*passed*true*0*0**customer_Definition_1.CustomerDefinition.landing();\ncy.wait(1000);\ncustomer_Definition_1.CustomerDefinition.clickAddNewButton();\ncy.verifyNotExistanceTheRequiredValidation();\ncustomer_Definition_1.CustomerDefinition.setName(sales_data_1.SalesData.cName);\ncustomer_Definition_1.CustomerDefinition.clearName();\ncy.verifyDisplayingTheRequiredValidationMsgsCount(1);\ncustomer_Definition_1.CustomerDefinition.setName(sales_data_1.SalesData.cName);\ncy.verifyNotExistanceTheRequiredValidation();*{}*false*false
2024-09-04T14:38:52.305Z*Customer Definition (Add)*3.Verify Labels*46716**failed*0*true*0**customer_Definition_1.CustomerDefinition.landing();\ncy.wait(1000);\ncustomer_Definition_1.CustomerDefinition.clickAddNewButton();\n// Information Tab\ncy.verifyLabelText("code", /Customer code/i);\ncy.verifyLabelText("name", /Customer name/i);\ncy.verifyLabelText("categoryId", /category/i);\ncy.verifyLabelText("tagIds", /Customer tag/i);\ncy.verifyLabelText("birthdate", /birth date/i);\ncy.verifyLabelText("contactMobileCode", /code/i);\ncy.verifyLabelText("contactMobile", /contact mobile/i);\ncy.verifyLabelText("contactPhone", /contact phone/i);\ncy.verifyLabelText("contactFax", /contact fax/i);\ncy.verifyLabelText("contactEmail", /contact email/i);\ncy.verifyLabelText("contactWebsite", /contact website/i);\ncy.verifyLabelText("contactPersonName", /contact person name/i);\ncy.verifyLabelText("ContactPersonMobileCode", /code/i);\ncy.verifyLabelText("contactPersonMobile", /contact person mobile/i);\ncy.verifyLabelText("contactPersonPhone", /contact person phone/i);\ncy.verifyLabelText("contactEmail", /contact person email/i);\n// Address Tab\ncustomer_Definition_1.CustomerDefinition.switchToAddressTab();\ncy.verifyLabelText("countryId", /country/i);\ncy.verifyLabelText("state", /state/i);\ncy.verifyLabelText("cityId", /city/i);\ncy.verifyLabelText("street", /street/i);\ncy.verifyLabelText("longitude", /longitude/i);\ncy.verifyLabelText("latitude", /latitude/i);\ncy.verifyLabelText("errorRadius", /error radius/i);\n//Legal\ncustomer_Definition_1.CustomerDefinition.switchToLegalTab();\ncy.verifyLabelText("commercialId", /commercial id/i);\ncy.verifyLabelText("taxId", /tax id/i);\n// Financial\ncustomer_Definition_1.CustomerDefinition.switchToFinancialTab();\ncy.verifyLabelText("paymentTermId", /payment term/i);\ncy.verifyLabelText("priceListId", /price list/i);\ncy.verifyLabelText("creditLimit", /credit limit/i);\ncy.verifyLabelText("currencyId", /currency/i);\n// Accounting\ncustomer_Definition_1.CustomerDefinition.switchToAccountingTab();\ncy.verifyLabelText("receivableAccountId", /receivable account/i);\ncy.verifyLabelText("salesAccountId", /purchase account/i);\ncy.verifyLabelText("salesReturnAccountId", /purchase return account/i);\ncy.verifyLabelText("discountAccountId", /discount account/i);*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `label[for=ContactPersonMobileCode]`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `label[for=ContactPersonMobileCode]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:83:0)","diff":null}*false*false
2024-09-04T14:41:44.450Z*Customer Definition (Edit)*1.Verify Editing Existing Customer Definition (All fields are filled)*64099**failed*0*true*0**customer_Definition_1.CustomerDefinition.landing();\ncustomer_Definition_1.CustomerDefinition.prepare();\ncy.clickFirstEditActionButton();\n// Essential Header Data\ncustomer_Definition_1.CustomerDefinition.setName(sales_data_1.SalesData.cName);\ncy.wait(750);\ncustomer_Definition_1.CustomerDefinition.setCustomerCategoryId();\ncy.wait(750);\ncustomer_Definition_1.CustomerDefinition.setBirthDate();\ncy.wait(750);\n//  CustomerDefinition.setCustomerTagIds();\n// CustomerDefinition.uploadAttachment(SalesData.attachPath);\n// Information Tab\ncustomer_Definition_1.CustomerDefinition.setContactMobileCountryCode();\ncustomer_Definition_1.CustomerDefinition.setContactMobile(sales_data_1.SalesData.cContactMobil);\ncustomer_Definition_1.CustomerDefinition.setContactPhone(sales_data_1.SalesData.cContactPhone);\ncustomer_Definition_1.CustomerDefinition.setContactFax(sales_data_1.SalesData.cContactFax);\ncustomer_Definition_1.CustomerDefinition.setContactEmail(sales_data_1.SalesData.cContactEmail);\ncustomer_Definition_1.CustomerDefinition.setContactWebsite(sales_data_1.SalesData.cContactWebsite);\ncustomer_Definition_1.CustomerDefinition.setContactPersonName(sales_data_1.SalesData.cContactPersonName);\ncustomer_Definition_1.CustomerDefinition.setContactPersonalMobileCountryCode();\ncustomer_Definition_1.CustomerDefinition.setContactPersonMobile(sales_data_1.SalesData.cContactPersonMobile);\ncustomer_Definition_1.CustomerDefinition.setContactPersonPhone(sales_data_1.SalesData.cContactPersonPhone);\n// CustomerDefinition.setContactPersonEmail();\n// Address Tab\ncustomer_Definition_1.CustomerDefinition.switchToAddressTab();\ncustomer_Definition_1.CustomerDefinition.setCountryId();\ncy.wait(500);\ncustomer_Definition_1.CustomerDefinition.setState(sales_data_1.SalesData.cState);\ncustomer_Definition_1.CustomerDefinition.setCityId();\ncy.wait(500);\ncustomer_Definition_1.CustomerDefinition.setStreet(sales_data_1.SalesData.cStrat);\ncustomer_Definition_1.CustomerDefinition.setLongitude(sales_data_1.SalesData.cLongitude);\ncustomer_Definition_1.CustomerDefinition.setLatitude(sales_data_1.SalesData.cLatitude);\ncustomer_Definition_1.CustomerDefinition.setRadius(sales_data_1.SalesData.cRadius);\n//Legal\ncustomer_Definition_1.CustomerDefinition.switchToLegalTab();\ncustomer_Definition_1.CustomerDefinition.setCommercialId(sales_data_1.SalesData.cCommercialId);\ncustomer_Definition_1.CustomerDefinition.setTaxId(sales_data_1.SalesData.cTaxId);\n// Financial\ncustomer_Definition_1.CustomerDefinition.switchToFinancialTab();\ncustomer_Definition_1.CustomerDefinition.setPaymentTermId();\ncustomer_Definition_1.CustomerDefinition.setPriceListId();\ncustomer_Definition_1.CustomerDefinition.setCreditLimit(sales_data_1.SalesData.cCreditLimit);\ncustomer_Definition_1.CustomerDefinition.setCurrencyId();\n// Accounting\ncustomer_Definition_1.CustomerDefinition.switchToAccountingTab();\ncustomer_Definition_1.CustomerDefinition.setReceivableAccountId();\ncustomer_Definition_1.CustomerDefinition.setSalesAccountId();\ncustomer_Definition_1.CustomerDefinition.setSalesReturnAccountId();\ncustomer_Definition_1.CustomerDefinition.setDiscountAccountId();\ncustomer_Definition_1.CustomerDefinition.clickSaveButton();\ncy.reload();\ncy.wait(1000);\ncy.clickContinueAs();\ncy.get("@initCount").then((initCount) => {\n    cy.increaseScreenItemsMaxCount(100);\n    cy.getAllItemsCount("table", "tbody tr").then((finalCount) => {\n        expect(finalCount).to.equal((0, utils_1.getWrappedNumber)(initCount));\n    });\n});\ncy.verifyFirstCellInTable(1, sales_data_1.SalesData.cName);\ncy.verifyFirstCellInTable(3, sales_data_1.SalesData.cContactEmail);\ncy.verifyFirstCellInTable(6, sales_data_1.SalesData.cCreditLimit);*{"message":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `table`, but never found it.","estack":"AssertionError: Timed out retrying after 12000ms: Expected to find element: `table`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:325:0)","diff":null}*false*false
2024-09-04T14:41:44.450Z*Customer Definition (Edit)*2.Verify Requird Validation*25924*slow*passed*true*0*0**customer_Definition_1.CustomerDefinition.landing();\ncy.wait(1000);\ncy.clickFirstEditActionButton();\ncy.verifyNotExistanceTheRequiredValidation();\ncustomer_Definition_1.CustomerDefinition.clearName();\ncy.verifyDisplayingTheRequiredValidationMsgsCount(1);\ncustomer_Definition_1.CustomerDefinition.setName(sales_data_1.SalesData.cName);\ncy.verifyNotExistanceTheRequiredValidation();*{}*false*false
2024-09-04T14:41:44.450Z*Customer Definition (Edit)*3.Verify Labels*16244*slow*passed*true*0*0**customer_Definition_1.CustomerDefinition.landing();\ncy.wait(1000);\ncy.clickFirstEditActionButton();\n// Information Tab\ncy.verifyLabelText("code", /Customer code/i);\ncy.verifyLabelText("name", /Customer name/i);\ncy.verifyLabelText("categoryId", /category/i);\ncy.verifyLabelText("tagIds", /Customer tag/i);\ncy.verifyLabelText("birthdate", /birth date/i);\ncy.verifyLabelText("contactMobileCode", /code/i);\ncy.verifyLabelText("contactMobile", /contact mobile/i);\ncy.verifyLabelText("contactPhone", /contact phone/i);\ncy.verifyLabelText("contactFax", /contact fax/i);\ncy.verifyLabelText("contactEmail", /contact email/i);\ncy.verifyLabelText("contactWebsite", /contact website/i);\ncy.verifyLabelText("contactPersonName", /contact person name/i);\ncy.verifyLabelText("contactPersonMobileCode", /code/i);\ncy.verifyLabelText("contactPersonMobile", /contact person mobile/i);\ncy.verifyLabelText("contactPersonPhone", /contact person phone/i);\ncy.verifyLabelText("contactEmail", /contact person email/i);\n// Address Tab\ncustomer_Definition_1.CustomerDefinition.switchToAddressTab();\ncy.verifyLabelText("countryId", /country/i);\ncy.verifyLabelText("state", /state/i);\ncy.verifyLabelText("cityId", /city/i);\ncy.verifyLabelText("street", /street/i);\ncy.verifyLabelText("longitude", /longitude/i);\ncy.verifyLabelText("latitude", /latitude/i);\ncy.verifyLabelText("errorRadius", /error radius/i);\n//Legal\ncustomer_Definition_1.CustomerDefinition.switchToLegalTab();\ncy.verifyLabelText("commercialId", /commercial id/i);\ncy.verifyLabelText("taxId", /tax id/i);\n// Financial\ncustomer_Definition_1.CustomerDefinition.switchToFinancialTab();\ncy.verifyLabelText("paymentTermId", /payment term/i);\ncy.verifyLabelText("priceListId", /price list/i);\ncy.verifyLabelText("creditLimit", /credit limit/i);\ncy.verifyLabelText("currencyId", /currency/i);\n// Accounting\ncustomer_Definition_1.CustomerDefinition.switchToAccountingTab();\ncy.verifyLabelText("receivableAccountId", /receivable account/i);\ncy.verifyLabelText("salesAccountId", /purchase account/i);\ncy.verifyLabelText("salesReturnAccountId", /purchase return account/i);\ncy.verifyLabelText("discountAccountId", /discount account/i);*{}*false*false
2024-09-04T14:42:37.374Z*Customer Definition (Delete)*1.Verify all the components are displayed on the Listview*15245*slow*passed*true*0*0**customer_Definition_1.CustomerDefinition.landing();\ncy.wait(1500);\ncy.zoomOut();\ncy.get("table").then((table) => {\n    if (table.find("th").first().is(":visible")) {\n        cy.wrap(table)\n            .find("th")\n            .eq(0)\n            .contains(/Customer code/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(1)\n            .contains(/Customer name/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(2)\n            .contains(/Customer category/i)\n            .should("be.visible");\n        cy.wrap(table).find("th").eq(3).contains(/email/i).should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(4)\n            .contains(/country/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(5)\n            .contains(/payment term/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(6)\n            .scrollIntoView()\n            .contains(/credit limit/i)\n            .should("be.visible");\n        cy.wrap(table)\n            .find("th")\n            .eq(7)\n            .scrollIntoView()\n            .contains(/actions/i)\n            .should("be.visible");\n    }\n    else {\n        cy.log("Table Header is not Visible");\n    }\n});*{}*false*false
2024-09-04T14:42:37.374Z*Customer Definition (Delete)*2.should filter the table based on search input in the first two columns*18192**failed*0*true*0**customer_Definition_1.CustomerDefinition.landing();\ncy.wait(1000);\ncy.verifySearchFunctionalityDots();*{"message":"AssertionError: expected 'NamermDfp' to equal 'CA1'","estack":"AssertionError: expected 'NamermDfp' to equal 'CA1'\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:485:0)","diff":"- 'NamermDfp'\n+ 'CA1'\n"}*false*false
2024-09-04T14:42:37.374Z*Customer Definition (Delete)*3.Verify Deleting An Existing Customer Definition (All fields are filled)*492**failed*0*true*0**customer_Definition_1.CustomerDefinition.landing();\ncustomer_Definition_1.CustomerDefinition.prepare();\ncy.clickFirstDeleteActionButton();\ncy.confirmDeleteDialog();\ncustomer_Definition_1.CustomerDefinition.assertSuccessfulDeletion();*{"message":"TypeError: cy.confirmDeleteDialog is not a function","estack":"TypeError: cy.confirmDeleteDialog is not a function\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Sales/customer_definition/tests/customer_definition_listview.cy.ts:68:0)","diff":null}*false*false